{
    "swagger": "2.0",
    "info": {
        "title": "Snipe-IT v5 API",
        "version": "5.4.4"
    },
    "host": "https://pacteraedge.snipe-it.io",
    "components": {
        "securitySchemes": {}
    },
    "security": [
        {}
    ],
    "paths": {
        "/hardware": {
            "post": {
                "summary": "/hardware",
                "description": "Creates a new asset",
                "operationId": "hardware-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "asset_tag",
                                    "status_id",
                                    "model_id"
                                ],
                                "properties": {
                                    "asset_tag": {
                                        "type": "string",
                                        "description": "The asset tag of the asset. If auto-incrementing is enabled in the settings, this is not required and will be generated."
                                    },
                                    "status_id": {
                                        "type": "integer",
                                        "description": "The id of the related status label",
                                        "format": "int32"
                                    },
                                    "model_id": {
                                        "type": "integer",
                                        "description": "The id of the related asset model",
                                        "format": "int32"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Asset name"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "serial": {
                                        "type": "string"
                                    },
                                    "purchase_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "purchase_cost": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "order_number": {
                                        "type": "string"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "archived": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "warranty_months": {
                                        "type": "integer",
                                        "default": null,
                                        "format": "int32"
                                    },
                                    "depreciate": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "supplier_id": {
                                        "type": "integer",
                                        "default": null,
                                        "format": "int32"
                                    },
                                    "requestable": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "rtd_location_id": {
                                        "type": "integer",
                                        "description": "The corresponding location_id from a location in the locations table that should indicate where the item is when it's NOT checked out to someone",
                                        "default": null,
                                        "format": "int32"
                                    },
                                    "last_audit_date": {
                                        "type": "string",
                                        "default": "null",
                                        "format": "date"
                                    },
                                    "location_id": {
                                        "type": "integer",
                                        "default": null,
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"success\",\n  \"messages\": \"Asset created successfully. :)\",\n  \"payload\": {\n    \"model_id\": 1,\n    \"name\": null,\n    \"serial\": null,\n    \"company_id\": \"\",\n    \"order_number\": null,\n    \"notes\": null,\n    \"asset_tag\": \"SNIPE-IT-RULES\",\n    \"user_id\": 2,\n    \"archived\": \"0\",\n    \"physical\": \"1\",\n    \"depreciate\": \"0\",\n    \"status_id\": 1,\n    \"warranty_months\": null,\n    \"purchase_cost\": null,\n    \"purchase_date\": null,\n    \"assigned_to\": null,\n    \"supplier_id\": null,\n    \"requestable\": 0,\n    \"rtd_location_id\": null,\n    \"updated_at\": \"2017-10-19 08:43:45\",\n    \"created_at\": \"2017-10-19 08:43:45\",\n    \"id\": 180,\n    \"model\": {\n      \"id\": 1,\n      \"name\": \"Macbook Pro 13\\\"\",\n      \"model_number\": \"4929525240061\",\n      \"manufacturer_id\": 1,\n      \"category_id\": 1,\n      \"created_at\": \"2017-10-18 21:00:07\",\n      \"updated_at\": \"2017-10-18 21:00:07\",\n      \"depreciation_id\": 1,\n      \"eol\": 36,\n      \"image\": null,\n      \"deprecated_mac_address\": 0,\n      \"fieldset_id\": null,\n      \"notes\": \"Created by demo seeder\",\n      \"requestable\": 0\n    }\n  }\n}"
                                    },
                                    "Validation Error": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": {\n    \"status_id\": [\n      \"The selected status id is invalid.\"\n    ]\n  }\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "success"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Asset created successfully. :)"
                                                },
                                                "payload": {
                                                    "type": "object",
                                                    "properties": {
                                                        "model_id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {},
                                                        "serial": {},
                                                        "company_id": {
                                                            "type": "string",
                                                            "example": ""
                                                        },
                                                        "order_number": {},
                                                        "notes": {},
                                                        "asset_tag": {
                                                            "type": "string",
                                                            "example": "SNIPE-IT-RULES"
                                                        },
                                                        "user_id": {
                                                            "type": "integer",
                                                            "example": 2,
                                                            "default": 0
                                                        },
                                                        "archived": {
                                                            "type": "string",
                                                            "example": "0"
                                                        },
                                                        "physical": {
                                                            "type": "string",
                                                            "example": "1"
                                                        },
                                                        "depreciate": {
                                                            "type": "string",
                                                            "example": "0"
                                                        },
                                                        "status_id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "warranty_months": {},
                                                        "purchase_cost": {},
                                                        "purchase_date": {},
                                                        "assigned_to": {},
                                                        "supplier_id": {},
                                                        "requestable": {
                                                            "type": "integer",
                                                            "example": 0,
                                                            "default": 0
                                                        },
                                                        "rtd_location_id": {},
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2017-10-19 08:43:45"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2017-10-19 08:43:45"
                                                        },
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 180,
                                                            "default": 0
                                                        },
                                                        "model": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1,
                                                                    "default": 0
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "Macbook Pro 13\""
                                                                },
                                                                "model_number": {
                                                                    "type": "string",
                                                                    "example": "4929525240061"
                                                                },
                                                                "manufacturer_id": {
                                                                    "type": "integer",
                                                                    "example": 1,
                                                                    "default": 0
                                                                },
                                                                "category_id": {
                                                                    "type": "integer",
                                                                    "example": 1,
                                                                    "default": 0
                                                                },
                                                                "created_at": {
                                                                    "type": "string",
                                                                    "example": "2017-10-18 21:00:07"
                                                                },
                                                                "updated_at": {
                                                                    "type": "string",
                                                                    "example": "2017-10-18 21:00:07"
                                                                },
                                                                "depreciation_id": {
                                                                    "type": "integer",
                                                                    "example": 1,
                                                                    "default": 0
                                                                },
                                                                "eol": {
                                                                    "type": "integer",
                                                                    "example": 36,
                                                                    "default": 0
                                                                },
                                                                "image": {},
                                                                "deprecated_mac_address": {
                                                                    "type": "integer",
                                                                    "example": 0,
                                                                    "default": 0
                                                                },
                                                                "fieldset_id": {},
                                                                "notes": {
                                                                    "type": "string",
                                                                    "example": "Created by demo seeder"
                                                                },
                                                                "requestable": {
                                                                    "type": "integer",
                                                                    "example": 0,
                                                                    "default": 0
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "title": "Validation Error",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "object",
                                                    "properties": {
                                                        "status_id": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "The selected status id is invalid."
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "text/plain": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": []
            },
            "get": {
                "summary": "/hardware",
                "description": "Return a listing of assets",
                "operationId": "hardware-list",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Specify the number of results you wish to return. Defaults to 50, but we have it set to 2 by default so the API explorer doesn't scroll forever.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 2
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset to use",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A text string to search the assets data for",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_number",
                        "in": "query",
                        "description": "Return only assets associated with a specific order number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Specify the column name you wish to sort by",
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Specify the order (asc or desc) you wish to order by on your sort column",
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "model_id",
                        "in": "query",
                        "description": "Optionally restrict asset results to this asset model ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Optionally restrict asset results to this status label ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "manufacturer_id",
                        "in": "query",
                        "description": "Optionally restrict asset results to this asset model ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Optionally restrict asset results to this company ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "location_id",
                        "in": "query",
                        "description": "Optionally restrict asset results to this location ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Optionally restrict asset results to one of these status types: RTD, Deployed, Undeployable, Deleted, Archived, Requestable",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status_id",
                        "in": "query",
                        "description": "Optionally restrict asset results to this status label ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "components",
                        "in": "query",
                        "description": "Whether or not to return the assets' lists of components with the results",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"total\": 1325,\n    \"rows\": [\n        {\n            \"id\": 1377,\n            \"name\": \"\",\n            \"asset_tag\": \"7575222087\",\n            \"serial\": \"\",\n            \"model\": {\n                \"id\": 8,\n                \"name\": \"iMac Pro\"\n            },\n            \"model_number\": \"4929187407768\",\n            \"status_label\": {\n                \"id\": 1,\n                \"name\": \"Ready to Deploy\",\n                \"status_meta\": \"deployable\"\n            },\n            \"category\": {\n                \"id\": 2,\n                \"name\": \"Desktops\"\n            },\n            \"manufacturer\": {\n                \"id\": 1,\n                \"name\": \"Apple\"\n            },\n            \"supplier\": null,\n            \"notes\": null,\n            \"order_number\": null,\n            \"company\": null,\n            \"location\": null,\n            \"rtd_location\": null,\n            \"image\": \"https://snipe-it.dev:1337/uploads/models/imacpro.jpg\",\n            \"assigned_to\": null,\n            \"warranty_months\": null,\n            \"warranty_expires\": null,\n            \"created_at\": {\n                \"datetime\": \"2017-11-22 08:57:39\",\n                \"formatted\": \"Wed Nov 22, 2017 8:57AM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2017-11-22 08:57:39\",\n                \"formatted\": \"Wed Nov 22, 2017 8:57AM\"\n            },\n            \"deleted_at\": null,\n            \"purchase_date\": null,\n            \"last_checkout\": null,\n            \"expected_checkin\": null,\n            \"purchase_cost\": null,\n            \"user_can_checkout\": true,\n            \"custom_fields\": [],\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": true,\n                \"clone\": true,\n                \"restore\": false,\n                \"update\": true,\n                \"delete\": true\n            }\n        },\n        {\n            \"id\": 1376,\n            \"name\": \"\",\n            \"asset_tag\": \"swift.\",\n            \"serial\": \"\",\n            \"model\": {\n                \"id\": 1,\n                \"name\": \"Macbook Pro 13&quot;\"\n            },\n            \"model_number\": \"4532579729813\",\n            \"status_label\": {\n                \"id\": 1,\n                \"name\": \"Ready to Deploy\",\n                \"status_meta\": \"deployable\"\n            },\n            \"category\": {\n                \"id\": 1,\n                \"name\": \"Laptops\"\n            },\n            \"manufacturer\": {\n                \"id\": 1,\n                \"name\": \"Apple\"\n            },\n            \"supplier\": null,\n            \"notes\": null,\n            \"order_number\": null,\n            \"company\": null,\n            \"location\": null,\n            \"rtd_location\": null,\n            \"image\": \"https://snipe-it.dev:1337/uploads/models/mbp.jpg\",\n            \"assigned_to\": null,\n            \"warranty_months\": null,\n            \"warranty_expires\": null,\n            \"created_at\": {\n                \"datetime\": \"2017-11-22 08:56:28\",\n                \"formatted\": \"Wed Nov 22, 2017 8:56AM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2017-11-22 08:56:28\",\n                \"formatted\": \"Wed Nov 22, 2017 8:56AM\"\n            },\n            \"deleted_at\": null,\n            \"purchase_date\": null,\n            \"last_checkout\": null,\n            \"expected_checkin\": null,\n            \"purchase_cost\": null,\n            \"user_can_checkout\": true,\n            \"custom_fields\": {\n                \"Test Alpha Numeric\": {\n                    \"field\": \"_snipeit_test_alpha_numeric_5\",\n                    \"value\": \"\",\n                    \"field_format\": \"ALPHA NUMERICpoop\"\n                },\n                \"Foo\": {\n                    \"field\": \"_snipeit_foo_6\",\n                    \"value\": \"\",\n                    \"field_format\": \"ANYpoop\"\n                },\n                \"lkjlkjljlj\": {\n                    \"field\": \"_snipeit_lkjlkjljlj_7\",\n                    \"value\": null,\n                    \"field_format\": \"ALPHA-DASHpoop\"\n                }\n            },\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": true,\n                \"clone\": true,\n                \"restore\": false,\n                \"update\": true,\n                \"delete\": true\n            }\n        }\n    ]\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "example": 1325,
                                            "default": 0
                                        },
                                        "rows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1377,
                                                        "default": 0
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": ""
                                                    },
                                                    "asset_tag": {
                                                        "type": "string",
                                                        "example": "7575222087"
                                                    },
                                                    "serial": {
                                                        "type": "string",
                                                        "example": ""
                                                    },
                                                    "model": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 8,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "iMac Pro"
                                                            }
                                                        }
                                                    },
                                                    "model_number": {
                                                        "type": "string",
                                                        "example": "4929187407768"
                                                    },
                                                    "status_label": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Ready to Deploy"
                                                            },
                                                            "status_meta": {
                                                                "type": "string",
                                                                "example": "deployable"
                                                            }
                                                        }
                                                    },
                                                    "category": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 2,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Desktops"
                                                            }
                                                        }
                                                    },
                                                    "manufacturer": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Apple"
                                                            }
                                                        }
                                                    },
                                                    "supplier": {},
                                                    "notes": {},
                                                    "order_number": {},
                                                    "company": {},
                                                    "location": {},
                                                    "rtd_location": {},
                                                    "image": {
                                                        "type": "string",
                                                        "example": "https://snipe-it.dev:1337/uploads/models/imacpro.jpg"
                                                    },
                                                    "assigned_to": {},
                                                    "warranty_months": {},
                                                    "warranty_expires": {},
                                                    "created_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2017-11-22 08:57:39"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "Wed Nov 22, 2017 8:57AM"
                                                            }
                                                        }
                                                    },
                                                    "updated_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2017-11-22 08:57:39"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "Wed Nov 22, 2017 8:57AM"
                                                            }
                                                        }
                                                    },
                                                    "deleted_at": {},
                                                    "purchase_date": {},
                                                    "last_checkout": {},
                                                    "expected_checkin": {},
                                                    "purchase_cost": {},
                                                    "user_can_checkout": {
                                                        "type": "boolean",
                                                        "example": true,
                                                        "default": true
                                                    },
                                                    "custom_fields": {
                                                        "type": "array"
                                                    },
                                                    "available_actions": {
                                                        "type": "object",
                                                        "properties": {
                                                            "checkout": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "checkin": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "clone": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "restore": {
                                                                "type": "boolean",
                                                                "example": false,
                                                                "default": true
                                                            },
                                                            "update": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "delete": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"status\": \"error\",\n    \"messages\": \"An Error has occured! Unauthenticated.\",\n    \"payload\": null\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "An Error has occured! Unauthenticated."
                                        },
                                        "payload": {}
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"status\": \"error\",\n    \"messages\": \"Method not allowed\",\n    \"payload\": null\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        },
                                        "payload": {}
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": []
            }
        },
        "/hardware/{id}": {
            "get": {
                "summary": "/hardware/:id",
                "description": "Get the details of a specific asset",
                "operationId": "hardware-by-id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id (not the asset tag) of the asset you'd like to query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 1,\n  \"name\": \"\",\n  \"asset_tag\": \"389658657\",\n  \"serial\": \"b9b47837-13d9-33d3-a7d3-815a8503be44\",\n  \"model\": {\n    \"id\": 1,\n    \"name\": \"Macbook Pro 13&quot;\"\n  },\n  \"model_number\": \"4929525240061\",\n  \"status_label\": {\n    \"id\": 1,\n    \"name\": \"Deployed\",\n    \"status_meta\": \"deployed\"\n  },\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Laptops\"\n  },\n  \"manufacturer\": {\n    \"id\": 1,\n    \"name\": \"Apple\"\n  },\n  \"supplier\": {\n    \"id\": 1,\n    \"name\": \"Harvey-Hettinger\"\n  },\n  \"notes\": \"Created by DB seeder\",\n  \"order_number\": \"4243135\",\n  \"company\": null,\n  \"location\": {\n    \"id\": 3,\n    \"name\": \"Tonystad\"\n  },\n  \"rtd_location\": {\n    \"id\": 1,\n    \"name\": \"Lake Catharineburgh\"\n  },\n  \"image\": null,\n  \"assigned_to\": {\n    \"id\": 1,\n    \"username\": \"admin\",\n    \"name\": \"Admin User\",\n    \"first_name\": \"Admin\",\n    \"last_name\": \"User\",\n    \"employee_number\": \"19135\",\n    \"type\": \"user\"\n  },\n  \"warranty\": null,\n  \"warranty_expires\": null,\n  \"created_at\": {\n    \"datetime\": \"2017-10-18 21:00:08\",\n    \"formatted\": \"Wed Oct 18, 2017 9:00PM\"\n  },\n  \"updated_at\": {\n    \"datetime\": \"2017-10-19 07:57:37\",\n    \"formatted\": \"Thu Oct 19, 2017 7:57AM\"\n  },\n  \"purchase_date\": {\n    \"date\": \"2016-12-03\",\n    \"formatted\": \"Sat Dec 03, 2016\"\n  },\n  \"last_checkout\": {\n    \"datetime\": \"2017-10-05 08:30:20\",\n    \"formatted\": \"Thu Oct 05, 2017 8:30AM\"\n  },\n  \"expected_checkin\": {\n    \"date\": \"2017-11-03\",\n    \"formatted\": \"Fri Nov 03, 2017\"\n  },\n  \"purchase_cost\": \"1114.86\",\n  \"user_can_checkout\": false,\n  \"custom_fields\": [],\n  \"available_actions\": {\n    \"checkout\": true,\n    \"checkin\": true,\n    \"clone\": true,\n    \"update\": true,\n    \"delete\": true\n  }\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Asset does not exist.\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "asset_tag": {
                                                    "type": "string",
                                                    "example": "389658657"
                                                },
                                                "serial": {
                                                    "type": "string",
                                                    "example": "b9b47837-13d9-33d3-a7d3-815a8503be44"
                                                },
                                                "model": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Macbook Pro 13&quot;"
                                                        }
                                                    }
                                                },
                                                "model_number": {
                                                    "type": "string",
                                                    "example": "4929525240061"
                                                },
                                                "status_label": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Deployed"
                                                        },
                                                        "status_meta": {
                                                            "type": "string",
                                                            "example": "deployed"
                                                        }
                                                    }
                                                },
                                                "category": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Laptops"
                                                        }
                                                    }
                                                },
                                                "manufacturer": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Apple"
                                                        }
                                                    }
                                                },
                                                "supplier": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Harvey-Hettinger"
                                                        }
                                                    }
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "example": "Created by DB seeder"
                                                },
                                                "order_number": {
                                                    "type": "string",
                                                    "example": "4243135"
                                                },
                                                "company": {},
                                                "location": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 3,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Tonystad"
                                                        }
                                                    }
                                                },
                                                "rtd_location": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Lake Catharineburgh"
                                                        }
                                                    }
                                                },
                                                "image": {},
                                                "assigned_to": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "example": "admin"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Admin User"
                                                        },
                                                        "first_name": {
                                                            "type": "string",
                                                            "example": "Admin"
                                                        },
                                                        "last_name": {
                                                            "type": "string",
                                                            "example": "User"
                                                        },
                                                        "employee_number": {
                                                            "type": "string",
                                                            "example": "19135"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "example": "user"
                                                        }
                                                    }
                                                },
                                                "warranty": {},
                                                "warranty_expires": {},
                                                "created_at": {
                                                    "type": "object",
                                                    "properties": {
                                                        "datetime": {
                                                            "type": "string",
                                                            "example": "2017-10-18 21:00:08"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Wed Oct 18, 2017 9:00PM"
                                                        }
                                                    }
                                                },
                                                "updated_at": {
                                                    "type": "object",
                                                    "properties": {
                                                        "datetime": {
                                                            "type": "string",
                                                            "example": "2017-10-19 07:57:37"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Thu Oct 19, 2017 7:57AM"
                                                        }
                                                    }
                                                },
                                                "purchase_date": {
                                                    "type": "object",
                                                    "properties": {
                                                        "date": {
                                                            "type": "string",
                                                            "example": "2016-12-03"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Sat Dec 03, 2016"
                                                        }
                                                    }
                                                },
                                                "last_checkout": {
                                                    "type": "object",
                                                    "properties": {
                                                        "datetime": {
                                                            "type": "string",
                                                            "example": "2017-10-05 08:30:20"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Thu Oct 05, 2017 8:30AM"
                                                        }
                                                    }
                                                },
                                                "expected_checkin": {
                                                    "type": "object",
                                                    "properties": {
                                                        "date": {
                                                            "type": "string",
                                                            "example": "2017-11-03"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Fri Nov 03, 2017"
                                                        }
                                                    }
                                                },
                                                "purchase_cost": {
                                                    "type": "string",
                                                    "example": "1114.86"
                                                },
                                                "user_can_checkout": {
                                                    "type": "boolean",
                                                    "example": false,
                                                    "default": true
                                                },
                                                "custom_fields": {
                                                    "type": "array"
                                                },
                                                "available_actions": {
                                                    "type": "object",
                                                    "properties": {
                                                        "checkout": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "checkin": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "clone": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "update": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "delete": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Asset does not exist."
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "text/plain": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": []
            },
            "delete": {
                "summary": "/hardware/:id",
                "description": "Deletes a specific asset",
                "operationId": "hardware-delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the asset to delete",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401",
                        "content": {
                            "text/plain": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"error\": \"Unauthenticated.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Asset does not exist.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Asset does not exist."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": []
            },
            "patch": {
                "summary": "/hardware/:id",
                "description": "Partially updates a specific asset",
                "operationId": "hardware-partial-update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the asset you'd like to query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "asset_tag": {
                                        "type": "string",
                                        "description": "Unique asset tag of the asset"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Asset notes",
                                        "default": "null"
                                    },
                                    "status_id": {
                                        "type": "integer",
                                        "description": "The id of the corresponding status label",
                                        "format": "int32"
                                    },
                                    "model_id": {
                                        "type": "integer",
                                        "description": "The id of the associated asset model id",
                                        "format": "int32"
                                    },
                                    "last_checkout": {
                                        "type": "string",
                                        "description": "Date the asset was last checked out",
                                        "format": "date"
                                    },
                                    "assigned_to": {
                                        "type": "integer",
                                        "description": "The id of the user the asset is currently checked out to",
                                        "default": null,
                                        "format": "int32"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "description": "The id of an associated company id",
                                        "default": null,
                                        "format": "int32"
                                    },
                                    "serial": {
                                        "type": "string",
                                        "description": "Serial number of the asset",
                                        "default": "null"
                                    },
                                    "order_number": {
                                        "type": "string",
                                        "description": "Order number for the asset",
                                        "default": "null"
                                    },
                                    "warranty_months": {
                                        "type": "integer",
                                        "description": "Number of months for the asset warranty",
                                        "default": null,
                                        "format": "int32"
                                    },
                                    "purchase_cost": {
                                        "type": "number",
                                        "description": "Purchase cost of the asset, without a currency symbol",
                                        "default": null,
                                        "format": "float"
                                    },
                                    "purchase_date": {
                                        "type": "string",
                                        "description": "Date of asset purchase",
                                        "default": "null",
                                        "format": "date"
                                    },
                                    "requestable": {
                                        "type": "boolean",
                                        "description": "Whether or not the asset can be requested by users with the permission to request assets",
                                        "default": false
                                    },
                                    "archived": {
                                        "type": "boolean",
                                        "description": "Whether or not the asset is archived. Archived assets cannot be checked out and do not show up in the deployable asset screens",
                                        "default": false
                                    },
                                    "rtd_location_id": {
                                        "type": "integer",
                                        "description": "The id that corresponds to the location where the asset is usually located when not checked out",
                                        "default": null,
                                        "format": "int32"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Asset name",
                                        "default": "null"
                                    },
                                    "location_id": {
                                        "type": "string",
                                        "default": "null"
                                    },
                                    "last_audit_date": {
                                        "type": "string",
                                        "format": "date"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n\t\"rows\": [\n\t\t{\n            \"id\": \"45\",\n            \"asset_tag\": \"976946724\",\n            \"assigned_to\": \"\",\n            \"category\": \"Reiciendis ea.\",\n            \"companyName\": \"Williamson-Kuhn\",\n            \"created_at\": \"\",\n            \"eol\": \"1991-10-19\",\n            \"expected_checkin\": \"\",\n            \"image\": \"\",\n            \"last_checkout\": \"\",\n            \"location\": \"Expanded system\",\n            \"manufacturer\": \"Farrell Group\",\n            \"model\": \"Profound zero\",\n            \"model_number\": null,\n            \"name\": \"Programmable concept\",\n            \"notes\": \"Ipsa pariatur sunt aut.\",\n            \"order_number\": \"\",\n            \"purchase_cost\": \"689.30\",\n            \"purchase_date\": \"1991-09-19\",\n            \"serial\": \"f5f06bb3-2420\",\n            \"status_label\": \"Ready to Deploy\"\n            }\n\t],\n}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "text/plain": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Asset does not exist.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Asset does not exist."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": {\n    \"status_id\": [\n      \"The selected status id is invalid.\"\n    ]\n  }\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "object",
                                            "properties": {
                                                "status_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected status id is invalid."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": []
            },
            "put": {
                "summary": "/hardware/:id",
                "description": "Updates a specific asset",
                "operationId": "hardware-update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the asset you'd like to query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "asset_tag",
                                    "status_id",
                                    "model_id"
                                ],
                                "properties": {
                                    "asset_tag": {
                                        "type": "string",
                                        "description": "Unique asset tag of the asset"
                                    },
                                    "status_id": {
                                        "type": "integer",
                                        "description": "The id of the corresponding status label",
                                        "format": "int32"
                                    },
                                    "model_id": {
                                        "type": "integer",
                                        "description": "The id of the associated asset model id",
                                        "format": "int32"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Asset notes"
                                    },
                                    "last_checkout": {
                                        "type": "string",
                                        "description": "Date the asset was last checked out",
                                        "default": "null",
                                        "format": "date"
                                    },
                                    "assigned_to": {
                                        "type": "integer",
                                        "description": "The id of the user the asset is currently checked out to",
                                        "default": null,
                                        "format": "int32"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "description": "The id of an associated company id",
                                        "default": null,
                                        "format": "int32"
                                    },
                                    "serial": {
                                        "type": "string",
                                        "description": "Serial number of the asset",
                                        "default": "null"
                                    },
                                    "order_number": {
                                        "type": "string",
                                        "description": "Order number for the asset"
                                    },
                                    "warranty_months": {
                                        "type": "integer",
                                        "description": "Number of months for the asset warranty",
                                        "default": null,
                                        "format": "int32"
                                    },
                                    "purchase_cost": {
                                        "type": "number",
                                        "description": "Purchase cost of the asset, without a currency symbol",
                                        "default": null,
                                        "format": "float"
                                    },
                                    "purchase_date": {
                                        "type": "string",
                                        "description": "Date of asset purchase",
                                        "default": "null",
                                        "format": "date"
                                    },
                                    "requestable": {
                                        "type": "boolean",
                                        "description": "Whether or not the asset can be requested by users with the permission to request assets",
                                        "default": false
                                    },
                                    "archived": {
                                        "type": "boolean",
                                        "description": "Whether or not the asset is archived. Archived assets cannot be checked out and do not show up in the deployable asset screens",
                                        "default": false
                                    },
                                    "rtd_location_id": {
                                        "type": "integer",
                                        "description": "The id that corresponds to the location where the asset is usually located when not checked out",
                                        "default": null,
                                        "format": "int32"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Asset name",
                                        "default": "null"
                                    },
                                    "location_id": {
                                        "type": "integer",
                                        "default": null,
                                        "format": "int32"
                                    },
                                    "image": {
                                        "type": "string",
                                        "default": "null",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n\t\"rows\": [\n\t\t{\n            \"id\": \"45\",\n            \"asset_tag\": \"976946724\",\n            \"assigned_to\": \"\",\n            \"category\": \"Reiciendis ea.\",\n            \"companyName\": \"Williamson-Kuhn\",\n            \"created_at\": \"\",\n            \"eol\": \"1991-10-19\",\n            \"expected_checkin\": \"\",\n            \"image\": \"\",\n            \"last_checkout\": \"\",\n            \"location\": \"Expanded system\",\n            \"manufacturer\": \"Farrell Group\",\n            \"model\": \"Profound zero\",\n            \"model_number\": null,\n            \"name\": \"Programmable concept\",\n            \"notes\": \"Ipsa pariatur sunt aut.\",\n            \"order_number\": \"\",\n            \"purchase_cost\": \"689.30\",\n            \"purchase_date\": \"1991-09-19\",\n            \"serial\": \"f5f06bb3-2420\",\n            \"status_label\": \"Ready to Deploy\"\n            }\n\t]\n}"
                                    },
                                    "Validation Error": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": {\n    \"status_id\": [\n      \"The selected status id is invalid.\"\n    ]\n  }\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Asset does not exist.\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "rows": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "45"
                                                            },
                                                            "asset_tag": {
                                                                "type": "string",
                                                                "example": "976946724"
                                                            },
                                                            "assigned_to": {
                                                                "type": "string",
                                                                "example": ""
                                                            },
                                                            "category": {
                                                                "type": "string",
                                                                "example": "Reiciendis ea."
                                                            },
                                                            "companyName": {
                                                                "type": "string",
                                                                "example": "Williamson-Kuhn"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "example": ""
                                                            },
                                                            "eol": {
                                                                "type": "string",
                                                                "example": "1991-10-19"
                                                            },
                                                            "expected_checkin": {
                                                                "type": "string",
                                                                "example": ""
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "example": ""
                                                            },
                                                            "last_checkout": {
                                                                "type": "string",
                                                                "example": ""
                                                            },
                                                            "location": {
                                                                "type": "string",
                                                                "example": "Expanded system"
                                                            },
                                                            "manufacturer": {
                                                                "type": "string",
                                                                "example": "Farrell Group"
                                                            },
                                                            "model": {
                                                                "type": "string",
                                                                "example": "Profound zero"
                                                            },
                                                            "model_number": {},
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Programmable concept"
                                                            },
                                                            "notes": {
                                                                "type": "string",
                                                                "example": "Ipsa pariatur sunt aut."
                                                            },
                                                            "order_number": {
                                                                "type": "string",
                                                                "example": ""
                                                            },
                                                            "purchase_cost": {
                                                                "type": "string",
                                                                "example": "689.30"
                                                            },
                                                            "purchase_date": {
                                                                "type": "string",
                                                                "example": "1991-09-19"
                                                            },
                                                            "serial": {
                                                                "type": "string",
                                                                "example": "f5f06bb3-2420"
                                                            },
                                                            "status_label": {
                                                                "type": "string",
                                                                "example": "Ready to Deploy"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "title": "Validation Error",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "object",
                                                    "properties": {
                                                        "status_id": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "The selected status id is invalid."
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Asset does not exist."
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": []
            }
        },
        "/companies/{id}": {
            "get": {
                "summary": "/companies/:id",
                "description": "Retrieve the specific details of a company by id",
                "operationId": "companiesid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "company id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"id\": 1,\n    \"name\": \"Lebsack and Sons\",\n    \"image\": null,\n    \"created_at\": {\n        \"datetime\": \"2017-11-22 05:28:00\",\n        \"formatted\": \"Wed Nov 22, 2017 5:28AM\"\n    },\n    \"updated_at\": {\n        \"datetime\": \"2017-11-22 05:28:00\",\n        \"formatted\": \"Wed Nov 22, 2017 5:28AM\"\n    },\n    \"assets_count\": 0,\n    \"licenses_count\": 0,\n    \"accessories_count\": 0,\n    \"consumables_count\": 0,\n    \"components_count\": 0,\n    \"users_count\": 0,\n    \"available_actions\": {\n        \"update\": true,\n        \"delete\": true\n    }\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1,
                                            "default": 0
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Lebsack and Sons"
                                        },
                                        "image": {},
                                        "created_at": {
                                            "type": "object",
                                            "properties": {
                                                "datetime": {
                                                    "type": "string",
                                                    "example": "2017-11-22 05:28:00"
                                                },
                                                "formatted": {
                                                    "type": "string",
                                                    "example": "Wed Nov 22, 2017 5:28AM"
                                                }
                                            }
                                        },
                                        "updated_at": {
                                            "type": "object",
                                            "properties": {
                                                "datetime": {
                                                    "type": "string",
                                                    "example": "2017-11-22 05:28:00"
                                                },
                                                "formatted": {
                                                    "type": "string",
                                                    "example": "Wed Nov 22, 2017 5:28AM"
                                                }
                                            }
                                        },
                                        "assets_count": {
                                            "type": "integer",
                                            "example": 0,
                                            "default": 0
                                        },
                                        "licenses_count": {
                                            "type": "integer",
                                            "example": 0,
                                            "default": 0
                                        },
                                        "accessories_count": {
                                            "type": "integer",
                                            "example": 0,
                                            "default": 0
                                        },
                                        "consumables_count": {
                                            "type": "integer",
                                            "example": 0,
                                            "default": 0
                                        },
                                        "components_count": {
                                            "type": "integer",
                                            "example": 0,
                                            "default": 0
                                        },
                                        "users_count": {
                                            "type": "integer",
                                            "example": 0,
                                            "default": 0
                                        },
                                        "available_actions": {
                                            "type": "object",
                                            "properties": {
                                                "update": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "default": true
                                                },
                                                "delete": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "default": true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"status\": \"error\",\n    \"messages\": \"An Error has occured! Unauthenticated.\",\n    \"payload\": null\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "An Error has occured! Unauthenticated."
                                        },
                                        "payload": {}
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Company not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"status\": \"error\",\n    \"messages\": \"Method not allowed\",\n    \"payload\": null\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        },
                                        "payload": {}
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "summary": "/companies/:id",
                "description": "Updates a company's details",
                "operationId": "companiesid-1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "company id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 3,\n  \"name\": \"Rohan-Bergstrom\",\n  \"created_at\": \"2017-01-11 03:31:25\",\n  \"updated_at\": \"2017-01-11 03:31:25\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Rohan-Bergstrom"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Company not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "summary": "/companies/:id",
                "description": "Delete's a company",
                "operationId": "companiesid-3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "company id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"success\",\n  \"messages\": \"The Company was deleted successfully.\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "success"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "The Company was deleted successfully."
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Company not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "summary": "/companies/:id",
                "description": "Updates a part of a company's details",
                "operationId": "companiesid-2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "company id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 3,\n  \"name\": \"Rohan-Bergstrom\",\n  \"created_at\": \"2017-01-11 03:31:25\",\n  \"updated_at\": \"2017-01-11 03:31:25\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Rohan-Bergstrom"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Company not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "x-readme": {
                    "code-samples": [
                        {
                            "language": "php",
                            "code": "<?php\n\t\n$access_token = 'YOUR-API-TOKEN';\n\n// Set your new values\n$fields = array(\n  \"name\" => \"Hogwarts\", \n);          \n    \n\n$headers = array(\n\t'Content-Type: application/json',\n\t'Authorization: Bearer '.$access_token,\n);\n\n$ch = curl_init('https://your-server/api/v1/companies/1');\n\n\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\ncurl_setopt($ch, CURLOPT_USERAGENT, 'YourScript/0.1 (contact@email)');\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($curl, CURLOPT_CUSTOMREQUEST, 'PATCH');\ncurl_setopt($curl, CURLOPT_POSTFIELDS, json_encode($fields));\n\n$data = curl_exec($ch);\ncurl_close($ch);\n\nprint_r($data);"
                        }
                    ],
                    "samples-languages": [
                        "php"
                    ]
                }
            }
        },
        "/companies": {
            "get": {
                "summary": "/companies",
                "description": "Return a listing of companies",
                "operationId": "companies",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"total\": 4,\n    \"rows\": [\n        {\n            \"id\": 1,\n            \"name\": \"Lebsack and Sons\",\n            \"image\": null,\n            \"created_at\": {\n                \"datetime\": \"2017-11-22 05:28:00\",\n                \"formatted\": \"Wed Nov 22, 2017 5:28AM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2017-11-22 05:28:00\",\n                \"formatted\": \"Wed Nov 22, 2017 5:28AM\"\n            },\n            \"assets_count\": 0,\n            \"licenses_count\": 0,\n            \"accessories_count\": 0,\n            \"consumables_count\": 0,\n            \"components_count\": 0,\n            \"users_count\": 13,\n            \"available_actions\": {\n                \"update\": true,\n                \"delete\": true\n            }\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Fay Group\",\n            \"image\": null,\n            \"created_at\": {\n                \"datetime\": \"2017-11-22 05:28:00\",\n                \"formatted\": \"Wed Nov 22, 2017 5:28AM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2017-11-22 05:28:00\",\n                \"formatted\": \"Wed Nov 22, 2017 5:28AM\"\n            },\n            \"assets_count\": 0,\n            \"licenses_count\": 0,\n            \"accessories_count\": 0,\n            \"consumables_count\": 0,\n            \"components_count\": 0,\n            \"users_count\": 11,\n            \"available_actions\": {\n                \"update\": true,\n                \"delete\": true\n            }\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Roberts Inc\",\n            \"image\": null,\n            \"created_at\": {\n                \"datetime\": \"2017-11-22 05:28:00\",\n                \"formatted\": \"Wed Nov 22, 2017 5:28AM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2017-11-22 05:28:00\",\n                \"formatted\": \"Wed Nov 22, 2017 5:28AM\"\n            },\n            \"assets_count\": 0,\n            \"licenses_count\": 0,\n            \"accessories_count\": 0,\n            \"consumables_count\": 0,\n            \"components_count\": 0,\n            \"users_count\": 19,\n            \"available_actions\": {\n                \"update\": true,\n                \"delete\": true\n            }\n        },\n        {\n            \"id\": 4,\n            \"name\": \"Auer-Heaney\",\n            \"image\": null,\n            \"created_at\": {\n                \"datetime\": \"2017-11-22 05:28:00\",\n                \"formatted\": \"Wed Nov 22, 2017 5:28AM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2017-11-22 05:28:00\",\n                \"formatted\": \"Wed Nov 22, 2017 5:28AM\"\n            },\n            \"assets_count\": 0,\n            \"licenses_count\": 0,\n            \"accessories_count\": 0,\n            \"consumables_count\": 0,\n            \"components_count\": 0,\n            \"users_count\": 15,\n            \"available_actions\": {\n                \"update\": true,\n                \"delete\": true\n            }\n        }\n    ]\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "example": 4,
                                            "default": 0
                                        },
                                        "rows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1,
                                                        "default": 0
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Lebsack and Sons"
                                                    },
                                                    "image": {},
                                                    "created_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2017-11-22 05:28:00"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "Wed Nov 22, 2017 5:28AM"
                                                            }
                                                        }
                                                    },
                                                    "updated_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2017-11-22 05:28:00"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "Wed Nov 22, 2017 5:28AM"
                                                            }
                                                        }
                                                    },
                                                    "assets_count": {
                                                        "type": "integer",
                                                        "example": 0,
                                                        "default": 0
                                                    },
                                                    "licenses_count": {
                                                        "type": "integer",
                                                        "example": 0,
                                                        "default": 0
                                                    },
                                                    "accessories_count": {
                                                        "type": "integer",
                                                        "example": 0,
                                                        "default": 0
                                                    },
                                                    "consumables_count": {
                                                        "type": "integer",
                                                        "example": 0,
                                                        "default": 0
                                                    },
                                                    "components_count": {
                                                        "type": "integer",
                                                        "example": 0,
                                                        "default": 0
                                                    },
                                                    "users_count": {
                                                        "type": "integer",
                                                        "example": 13,
                                                        "default": 0
                                                    },
                                                    "available_actions": {
                                                        "type": "object",
                                                        "properties": {
                                                            "update": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "delete": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"status\": \"error\",\n    \"messages\": \"An Error has occured! Unauthenticated.\",\n    \"payload\": null\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "An Error has occured! Unauthenticated."
                                        },
                                        "payload": {}
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"status\": \"error\",\n    \"messages\": \"Method not allowed\",\n    \"payload\": null\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        },
                                        "payload": {}
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "summary": "/companies",
                "description": "Create a new company",
                "operationId": "companies-1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "default": "Google, inc."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"success\",\n  \"payload\": {\n    \"name\": \"Vloorb\",\n    \"updated_at\": \"2017-01-12 19:56:33\",\n    \"created_at\": \"2017-01-12 19:56:33\",\n    \"id\": 14\n  },\n  \"messages\": \"Company created successfully.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "payload": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Vloorb"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-01-12 19:56:33"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-01-12 19:56:33"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 14,
                                                    "default": 0
                                                }
                                            }
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Company created successfully."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "text/plain": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/locations": {
            "get": {
                "summary": "/locations",
                "description": "List locations",
                "operationId": "locations",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 50
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset to use when retrieving results (useful in pagination)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search string",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Field to order by",
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order (asc or desc)",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "summary": "/locations",
                "description": "Create a new location",
                "operationId": "locations-2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "address2": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "country": {
                                        "type": "string"
                                    },
                                    "zip": {
                                        "type": "string"
                                    },
                                    "ldap_ou": {
                                        "type": "string"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "currency": {
                                        "type": "string"
                                    },
                                    "manager_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/models": {
            "get": {
                "summary": "/models",
                "description": "Returns a list of models",
                "operationId": "models",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to return",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 50
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset to use when retrieving results (useful in pagination)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search string",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Field to order by",
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order (asc or desc)",
                        "schema": {
                            "type": "string",
                            "default": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "summary": "/models",
                "description": "Create a model",
                "operationId": "models-1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "category_id",
                                    "manufacturer_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Model name"
                                    },
                                    "model_number": {
                                        "type": "string",
                                        "description": "Part or model number of the model"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "manufacturer_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "eol": {
                                        "type": "integer",
                                        "description": "Number of months until this model's assets are considered EOL",
                                        "format": "int32"
                                    },
                                    "fieldset_id": {
                                        "type": "integer",
                                        "description": "The ID of an EXISTING custom fieldset",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 3,\n  \"name\": \"Rohan-Bergstrom\",\n  \"created_at\": \"2017-01-11 03:31:25\",\n  \"updated_at\": \"2017-01-11 03:31:25\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Rohan-Bergstrom"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Company not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/accessories": {
            "get": {
                "summary": "/accessories",
                "description": "Return a listing of accessories",
                "operationId": "accessories",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Specify the number of results you wish to return",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 50
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset to use",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A text string to search the assets data for",
                        "schema": {
                            "type": "string",
                            "default": "null"
                        }
                    },
                    {
                        "name": "order_number",
                        "in": "query",
                        "description": "Return only assets associated with a specific order number",
                        "schema": {
                            "type": "string",
                            "default": "null"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Specify the column name you wish to sort by",
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Specify the order (asc or desc) you wish to order by on your sort column",
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Whether to include detailed information on categories, etc (true) or just the text name (false)",
                        "schema": {
                            "type": "string",
                            "default": "false"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"total\": 4,\n    \"rows\": [\n        {\n            \"id\": 1,\n            \"name\": \"USB Keyboard\",\n            \"company\": null,\n            \"manufacturer\": {\n                \"id\": 1,\n                \"name\": \"Apple\"\n            },\n            \"supplier\": {\n                \"id\": 1,\n                \"name\": \"Beier, Von and Schoen\"\n            },\n            \"model_number\": \"2033154\",\n            \"category\": {\n                \"id\": 8,\n                \"name\": \"Keyboards\"\n            },\n            \"location\": {\n                \"id\": 5,\n                \"name\": \"South Fred\"\n            },\n            \"notes\": null,\n            \"qty\": 15,\n            \"purchase_date\": null,\n            \"purchase_cost\": null,\n            \"order_number\": null,\n            \"min_qty\": 2,\n            \"remaining_qty\": 15,\n            \"image\": null,\n            \"created_at\": {\n                \"datetime\": \"2018-10-09 19:07:31\",\n                \"formatted\": \"2018-10-09 07:07 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-10-09 19:07:31\",\n                \"formatted\": \"2018-10-09 07:07 PM\"\n            },\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": false,\n                \"update\": true,\n                \"delete\": true\n            },\n            \"user_can_checkout\": true\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Bluetooth Keyboard\",\n            \"company\": null,\n            \"manufacturer\": {\n                \"id\": 1,\n                \"name\": \"Apple\"\n            },\n            \"supplier\": {\n                \"id\": 5,\n                \"name\": \"Howell-Windler\"\n            },\n            \"model_number\": \"14966166\",\n            \"category\": {\n                \"id\": 8,\n                \"name\": \"Keyboards\"\n            },\n            \"location\": {\n                \"id\": 5,\n                \"name\": \"South Fred\"\n            },\n            \"notes\": null,\n            \"qty\": 10,\n            \"purchase_date\": null,\n            \"purchase_cost\": null,\n            \"order_number\": null,\n            \"min_qty\": 2,\n            \"remaining_qty\": 10,\n            \"image\": null,\n            \"created_at\": {\n                \"datetime\": \"2018-10-09 19:07:31\",\n                \"formatted\": \"2018-10-09 07:07 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-10-09 19:07:31\",\n                \"formatted\": \"2018-10-09 07:07 PM\"\n            },\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": false,\n                \"update\": true,\n                \"delete\": true\n            },\n            \"user_can_checkout\": true\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Magic Mouse\",\n            \"company\": null,\n            \"manufacturer\": {\n                \"id\": 1,\n                \"name\": \"Apple\"\n            },\n            \"supplier\": {\n                \"id\": 1,\n                \"name\": \"Beier, Von and Schoen\"\n            },\n            \"model_number\": \"41452806\",\n            \"category\": {\n                \"id\": 9,\n                \"name\": \"Mouse\"\n            },\n            \"location\": {\n                \"id\": 5,\n                \"name\": \"South Fred\"\n            },\n            \"notes\": null,\n            \"qty\": 13,\n            \"purchase_date\": null,\n            \"purchase_cost\": null,\n            \"order_number\": null,\n            \"min_qty\": 2,\n            \"remaining_qty\": 13,\n            \"image\": null,\n            \"created_at\": {\n                \"datetime\": \"2018-10-09 19:07:31\",\n                \"formatted\": \"2018-10-09 07:07 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-10-09 19:07:31\",\n                \"formatted\": \"2018-10-09 07:07 PM\"\n            },\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": false,\n                \"update\": true,\n                \"delete\": true\n            },\n            \"user_can_checkout\": true\n        },\n        {\n            \"id\": 4,\n            \"name\": \"Sculpt Comfort Mouse\",\n            \"company\": null,\n            \"manufacturer\": {\n                \"id\": 2,\n                \"name\": \"Microsoft\"\n            },\n            \"supplier\": null,\n            \"model_number\": \"13797878\",\n            \"category\": {\n                \"id\": 9,\n                \"name\": \"Mouse\"\n            },\n            \"location\": {\n                \"id\": 5,\n                \"name\": \"South Fred\"\n            },\n            \"notes\": null,\n            \"qty\": 13,\n            \"purchase_date\": null,\n            \"purchase_cost\": null,\n            \"order_number\": null,\n            \"min_qty\": 2,\n            \"remaining_qty\": 13,\n            \"image\": null,\n            \"created_at\": {\n                \"datetime\": \"2018-10-09 19:07:31\",\n                \"formatted\": \"2018-10-09 07:07 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-10-09 19:07:31\",\n                \"formatted\": \"2018-10-09 07:07 PM\"\n            },\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": false,\n                \"update\": true,\n                \"delete\": true\n            },\n            \"user_can_checkout\": true\n        }\n    ]\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "example": 4,
                                            "default": 0
                                        },
                                        "rows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1,
                                                        "default": 0
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "USB Keyboard"
                                                    },
                                                    "company": {},
                                                    "manufacturer": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Apple"
                                                            }
                                                        }
                                                    },
                                                    "supplier": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Beier, Von and Schoen"
                                                            }
                                                        }
                                                    },
                                                    "model_number": {
                                                        "type": "string",
                                                        "example": "2033154"
                                                    },
                                                    "category": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 8,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Keyboards"
                                                            }
                                                        }
                                                    },
                                                    "location": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 5,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "South Fred"
                                                            }
                                                        }
                                                    },
                                                    "notes": {},
                                                    "qty": {
                                                        "type": "integer",
                                                        "example": 15,
                                                        "default": 0
                                                    },
                                                    "purchase_date": {},
                                                    "purchase_cost": {},
                                                    "order_number": {},
                                                    "min_qty": {
                                                        "type": "integer",
                                                        "example": 2,
                                                        "default": 0
                                                    },
                                                    "remaining_qty": {
                                                        "type": "integer",
                                                        "example": 15,
                                                        "default": 0
                                                    },
                                                    "image": {},
                                                    "created_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2018-10-09 19:07:31"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2018-10-09 07:07 PM"
                                                            }
                                                        }
                                                    },
                                                    "updated_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2018-10-09 19:07:31"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2018-10-09 07:07 PM"
                                                            }
                                                        }
                                                    },
                                                    "available_actions": {
                                                        "type": "object",
                                                        "properties": {
                                                            "checkout": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "checkin": {
                                                                "type": "boolean",
                                                                "example": false,
                                                                "default": true
                                                            },
                                                            "update": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "delete": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            }
                                                        }
                                                    },
                                                    "user_can_checkout": {
                                                        "type": "boolean",
                                                        "example": true,
                                                        "default": true
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": []
            },
            "post": {
                "summary": "/accessories",
                "description": "Create a new accessory",
                "operationId": "accessories-1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "qty",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "qty": {
                                        "type": "integer",
                                        "description": "Quantity of the accessory you have",
                                        "format": "int32"
                                    },
                                    "order_number": {
                                        "type": "string",
                                        "description": "Order number for this accessory."
                                    },
                                    "purchase_cost": {
                                        "type": "number",
                                        "description": "Cost of item being purchased.",
                                        "format": "float"
                                    },
                                    "purchase_date": {
                                        "type": "string",
                                        "description": "Date accessory was purchased"
                                    },
                                    "model_number": {
                                        "type": "string",
                                        "description": "Model number of Accessory"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "description": "ID number of the category the accessory belongs to",
                                        "format": "int32"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "description": "ID Number of the company the accessory is assigned to",
                                        "format": "int32"
                                    },
                                    "location_id": {
                                        "type": "integer",
                                        "description": "ID number of the location the accessory is assigned to",
                                        "format": "int32"
                                    },
                                    "manufacturer_id": {
                                        "type": "integer",
                                        "description": "ID number of the manufacturer for this accessory.",
                                        "format": "int32"
                                    },
                                    "supplier_id": {
                                        "type": "integer",
                                        "description": "ID number of the supplier for this accessory",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/users": {
            "get": {
                "summary": "/users",
                "description": "List users",
                "operationId": "users",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "String to search on",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to return",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 50
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset to use when retrieving results (useful in pagination)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Field to order by",
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order (asc or desc)",
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "employee_num",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "zip",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group_id",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "department_id",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "company_id",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "location_id",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "Set this to \"true\" if you want to return only deleted users",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "description": "Set this to \"true\" if you want both deleted and active users",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "ldap_import",
                        "in": "query",
                        "description": "Whether the user was imported/synched with LDAP - should be 0 or 1",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "assets_count",
                        "in": "query",
                        "description": "Number of checked out assets",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "licenses_count",
                        "in": "query",
                        "description": "Number of checked out licenses",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "accessories_count",
                        "in": "query",
                        "description": "Number of checked out accessories",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "consumables_count",
                        "in": "query",
                        "description": "Number of checked out consumables",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "summary": "/users",
                "description": "Create a new user",
                "operationId": "users-2",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "first_name",
                                    "username",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "description": "Needs to match the 'password' exactly"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "permissions": {
                                        "type": "string"
                                    },
                                    "activated": {
                                        "type": "boolean"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "jobtitle": {
                                        "type": "string"
                                    },
                                    "manager_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "employee_num": {
                                        "type": "string"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "two_factor_enrolled": {
                                        "type": "boolean"
                                    },
                                    "two_factor_optin": {
                                        "type": "boolean"
                                    },
                                    "department_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "location_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "groups": {
                                        "type": "integer",
                                        "description": "ID of the group or groups the user should be associated with. This can be a single ID number, or an array, like [1,2,3]",
                                        "default": null,
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/statuslabels": {
            "get": {
                "summary": "/statuslabels",
                "description": "Retrieve a list of status labels",
                "operationId": "statuslabels",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to return",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 50
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset to use when retrieving results (useful in pagination)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "String to search on",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Field to order by",
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order (asc or desc)",
                        "schema": {
                            "type": "string",
                            "default": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"total\": 5,\n    \"rows\": [\n        {\n            \"id\": 8,\n            \"name\": \"API TEST\",\n            \"type\": \"deployable\",\n            \"color\": null,\n            \"show_in_nav\": false,\n            \"assets_count\": 0,\n            \"notes\": \"\",\n            \"created_at\": {\n                \"datetime\": \"2017-11-22 10:37:07\",\n                \"formatted\": \"Wed Nov 22, 2017 10:37AM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2017-11-22 10:37:07\",\n                \"formatted\": \"Wed Nov 22, 2017 10:37AM\"\n            },\n            \"available_actions\": {\n                \"update\": true,\n                \"delete\": true\n            }\n        },\n        {\n            \"id\": 1,\n            \"name\": \"Ready to Deploy\",\n            \"type\": \"deployable\",\n            \"color\": null,\n            \"show_in_nav\": false,\n            \"assets_count\": 1275,\n            \"notes\": \"Illum voluptatem laboriosam sit consequatur fugiat.\",\n            \"created_at\": {\n                \"datetime\": \"2015-04-20 15:11:22\",\n                \"formatted\": \"Mon Apr 20, 2015 3:11PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2004-02-18 13:58:18\",\n                \"formatted\": \"Wed Feb 18, 2004 1:58PM\"\n            },\n            \"available_actions\": {\n                \"update\": true,\n                \"delete\": false\n            }\n        },\n        {\n            \"id\": 7,\n            \"name\": \"Lost/Stolen\",\n            \"type\": \"undeployable\",\n            \"color\": null,\n            \"show_in_nav\": false,\n            \"assets_count\": 0,\n            \"notes\": \"\",\n            \"created_at\": {\n                \"datetime\": \"2011-05-24 04:45:07\",\n                \"formatted\": \"Tue May 24, 2011 4:45AM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2002-03-26 02:59:19\",\n                \"formatted\": \"Tue Mar 26, 2002 2:59AM\"\n            },\n            \"available_actions\": {\n                \"update\": true,\n                \"delete\": true\n            }\n        },\n        {\n            \"id\": 5,\n            \"name\": \"Out for Repair\",\n            \"type\": \"undeployable\",\n            \"color\": null,\n            \"show_in_nav\": false,\n            \"assets_count\": 0,\n            \"notes\": \"\",\n            \"created_at\": {\n                \"datetime\": \"2004-09-07 07:22:51\",\n                \"formatted\": \"Tue Sep 07, 2004 7:22AM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"1983-04-03 20:52:31\",\n                \"formatted\": \"Sun Apr 03, 1983 8:52PM\"\n            },\n            \"available_actions\": {\n                \"update\": true,\n                \"delete\": true\n            }\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Archived\",\n            \"type\": \"archived\",\n            \"color\": null,\n            \"show_in_nav\": false,\n            \"assets_count\": 50,\n            \"notes\": \"These assets are permanently undeployable\",\n            \"created_at\": {\n                \"datetime\": \"1998-10-27 22:39:02\",\n                \"formatted\": \"Tue Oct 27, 1998 10:39PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"1988-06-02 20:15:44\",\n                \"formatted\": \"Thu Jun 02, 1988 8:15PM\"\n            },\n            \"available_actions\": {\n                \"update\": true,\n                \"delete\": false\n            }\n        }\n    ]\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "example": 5,
                                            "default": 0
                                        },
                                        "rows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 8,
                                                        "default": 0
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "API TEST"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "deployable"
                                                    },
                                                    "color": {},
                                                    "show_in_nav": {
                                                        "type": "boolean",
                                                        "example": false,
                                                        "default": true
                                                    },
                                                    "assets_count": {
                                                        "type": "integer",
                                                        "example": 0,
                                                        "default": 0
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "example": ""
                                                    },
                                                    "created_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2017-11-22 10:37:07"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "Wed Nov 22, 2017 10:37AM"
                                                            }
                                                        }
                                                    },
                                                    "updated_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2017-11-22 10:37:07"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "Wed Nov 22, 2017 10:37AM"
                                                            }
                                                        }
                                                    },
                                                    "available_actions": {
                                                        "type": "object",
                                                        "properties": {
                                                            "update": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "delete": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "summary": "/statuslabels",
                "description": "Create a new status label",
                "operationId": "statuslabels-1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "`deployable` | `pending` | `archived`",
                                        "default": "deployable"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "color": {
                                        "type": "string",
                                        "description": "Hex code showing what color the status label should be on the pie chart in the dashboard"
                                    },
                                    "show_in_nav": {
                                        "type": "boolean",
                                        "description": "1 or 0 - determine whether the status label should show in the left-side nav of the web GUI",
                                        "default": false
                                    },
                                    "default_label": {
                                        "type": "boolean",
                                        "description": "1 or 0 - determine whether it should be bubbled up to the top of the list of available statuses",
                                        "default": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"status\": \"success\",\n    \"messages\": \"Status Label created successfully.\",\n    \"payload\": {\n        \"name\": \"Test Status Label\",\n        \"deployable\": 1,\n        \"pending\": 0,\n        \"archived\": 0,\n        \"updated_at\": \"2017-11-22 10:37:07\",\n        \"created_at\": \"2017-11-22 10:37:07\",\n        \"id\": 8\n    }\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Status Label created successfully."
                                        },
                                        "payload": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Test Status Label"
                                                },
                                                "deployable": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "default": 0
                                                },
                                                "pending": {
                                                    "type": "integer",
                                                    "example": 0,
                                                    "default": 0
                                                },
                                                "archived": {
                                                    "type": "integer",
                                                    "example": 0,
                                                    "default": 0
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-11-22 10:37:07"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-11-22 10:37:07"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 8,
                                                    "default": 0
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/models/{id}": {
            "get": {
                "summary": "/models/:id",
                "description": "Retrieve the specific details of a model by id",
                "operationId": "modelsid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "company id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 3,\n  \"name\": \"Rohan-Bergstrom\",\n  \"created_at\": \"2017-01-11 03:31:25\",\n  \"updated_at\": \"2017-01-11 03:31:25\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Rohan-Bergstrom"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Company not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "summary": "/models/:id",
                "description": "Delete a model",
                "operationId": "modelsid-3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "company id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 3,\n  \"name\": \"Rohan-Bergstrom\",\n  \"created_at\": \"2017-01-11 03:31:25\",\n  \"updated_at\": \"2017-01-11 03:31:25\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Rohan-Bergstrom"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Company not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "summary": "/models/:id",
                "description": "Update a model",
                "operationId": "modelsid-2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "company id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "model_number": {
                                        "type": "string"
                                    },
                                    "fieldset_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "manufacturer_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "depreciation_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "requestable": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 3,\n  \"name\": \"Rohan-Bergstrom\",\n  \"created_at\": \"2017-01-11 03:31:25\",\n  \"updated_at\": \"2017-01-11 03:31:25\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Rohan-Bergstrom"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Company not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "summary": "/models/:id",
                "description": "Update a model",
                "operationId": "modelsid-1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "company id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "category_id",
                                    "manufacturer_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Model name"
                                    },
                                    "model_number": {
                                        "type": "string",
                                        "description": "Part or model number of the model"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "manufacturer_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "fieldset_id": {
                                        "type": "integer",
                                        "description": "The ID of an EXISTING custom fieldset",
                                        "format": "int32"
                                    },
                                    "eol": {
                                        "type": "integer",
                                        "description": "Number of months until this model's assets are considered EOL",
                                        "format": "int32"
                                    },
                                    "depreciation_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "requestable": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 3,\n  \"name\": \"Rohan-Bergstrom\",\n  \"created_at\": \"2017-01-11 03:31:25\",\n  \"updated_at\": \"2017-01-11 03:31:25\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Rohan-Bergstrom"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Company not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/locations/{id}": {
            "delete": {
                "summary": "/locations/:id",
                "description": "Deletes a location",
                "operationId": "locationsid-2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "deprecated": false
            },
            "get": {
                "summary": "/locations/:id",
                "description": "Get location details by id",
                "operationId": "locations-1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "summary": "/locations/:id",
                "description": "Updates a location",
                "operationId": "locations-3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "address2": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "country": {
                                        "type": "string"
                                    },
                                    "zip": {
                                        "type": "string"
                                    },
                                    "ldap_ou": {
                                        "type": "string"
                                    },
                                    "currency": {
                                        "type": "string"
                                    },
                                    "manager_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "summary": "/locations/:id",
                "description": "Partially updates a location",
                "operationId": "locationsid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "address2": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "country": {
                                        "type": "string"
                                    },
                                    "zip": {
                                        "type": "string"
                                    },
                                    "currency": {
                                        "type": "string"
                                    },
                                    "ldap_ou": {
                                        "type": "string"
                                    },
                                    "manager_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/users/{id}": {
            "get": {
                "summary": "/users/:id",
                "description": "View user details",
                "operationId": "usersid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "summary": "/users/:id",
                "description": "Update a user",
                "operationId": "usersid-2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "permissions": {
                                        "type": "string"
                                    },
                                    "activated": {
                                        "type": "boolean"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "jobtitle": {
                                        "type": "string"
                                    },
                                    "manager_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "employee_num": {
                                        "type": "string"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "two_factor_enrolled": {
                                        "type": "boolean"
                                    },
                                    "two_factor_optin": {
                                        "type": "boolean"
                                    },
                                    "department_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "location_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "groups": {
                                        "type": "integer",
                                        "description": "ID of the group or groups the user should be associated with. This can be a single ID number, or an array, like [1,2,3]",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "summary": "/users/:id",
                "description": "Partially update a user, passing only the fields you want to modify",
                "operationId": "users-3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "permissions": {
                                        "type": "string"
                                    },
                                    "activated": {
                                        "type": "boolean"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "jobtitle": {
                                        "type": "string"
                                    },
                                    "manager_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "employee_num": {
                                        "type": "string"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "two_factor_enrolled": {
                                        "type": "boolean"
                                    },
                                    "two_factor_optin": {
                                        "type": "boolean"
                                    },
                                    "department_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "location_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "groups": {
                                        "type": "integer",
                                        "description": "ID of the group or groups the user should be associated with. This can be a single ID number, or an array, like [1,2,3]",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "summary": "/users/:id",
                "description": "Delete a user",
                "operationId": "usersid-1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/statuslabels/{id}": {
            "get": {
                "summary": "/statuslabels/:id",
                "description": "View a status label",
                "operationId": "statuslabelsid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"id\": 1,\n    \"name\": \"Ready to Deploy\",\n    \"type\": \"deployable\",\n    \"color\": null,\n    \"show_in_nav\": false,\n    \"assets_count\": 0,\n    \"notes\": \"Illum voluptatem laboriosam sit consequatur fugiat.\",\n    \"created_at\": {\n        \"datetime\": \"2015-04-20 15:11:22\",\n        \"formatted\": \"Mon Apr 20, 2015 3:11PM\"\n    },\n    \"updated_at\": {\n        \"datetime\": \"2004-02-18 13:58:18\",\n        \"formatted\": \"Wed Feb 18, 2004 1:58PM\"\n    },\n    \"available_actions\": {\n        \"update\": true,\n        \"delete\": true\n    }\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1,
                                            "default": 0
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Ready to Deploy"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "deployable"
                                        },
                                        "color": {},
                                        "show_in_nav": {
                                            "type": "boolean",
                                            "example": false,
                                            "default": true
                                        },
                                        "assets_count": {
                                            "type": "integer",
                                            "example": 0,
                                            "default": 0
                                        },
                                        "notes": {
                                            "type": "string",
                                            "example": "Illum voluptatem laboriosam sit consequatur fugiat."
                                        },
                                        "created_at": {
                                            "type": "object",
                                            "properties": {
                                                "datetime": {
                                                    "type": "string",
                                                    "example": "2015-04-20 15:11:22"
                                                },
                                                "formatted": {
                                                    "type": "string",
                                                    "example": "Mon Apr 20, 2015 3:11PM"
                                                }
                                            }
                                        },
                                        "updated_at": {
                                            "type": "object",
                                            "properties": {
                                                "datetime": {
                                                    "type": "string",
                                                    "example": "2004-02-18 13:58:18"
                                                },
                                                "formatted": {
                                                    "type": "string",
                                                    "example": "Wed Feb 18, 2004 1:58PM"
                                                }
                                            }
                                        },
                                        "available_actions": {
                                            "type": "object",
                                            "properties": {
                                                "update": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "default": true
                                                },
                                                "delete": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "default": true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "summary": "/statuslabels/:id",
                "description": "Delete a status label",
                "operationId": "statuslabelsid-1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "summary": "/statuslabels/:id",
                "description": "Updates a status label",
                "operationId": "statuslabelsid-2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "`deployable` | `pending` | `archived`",
                                        "default": "deployable"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "color": {
                                        "type": "string",
                                        "description": "Hex code showing what color the status label should be on the pie chart in the dashboard"
                                    },
                                    "show_in_nav": {
                                        "type": "boolean",
                                        "description": "1 or 0 - determine whether the status label should show in the left-side nav of the web GUI",
                                        "default": false
                                    },
                                    "default_label": {
                                        "type": "boolean",
                                        "description": "1 or 0 - determine whether it should be bubbled up to the top of the list of available statuses",
                                        "default": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"status\": \"success\",\n    \"messages\": \"Status Label created successfully.\",\n    \"payload\": {\n        \"name\": \"Test Status Label\",\n        \"deployable\": 1,\n        \"pending\": 0,\n        \"archived\": 0,\n        \"updated_at\": \"2017-11-22 10:37:07\",\n        \"created_at\": \"2017-11-22 10:37:07\",\n        \"id\": 8\n    }\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Status Label created successfully."
                                        },
                                        "payload": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Test Status Label"
                                                },
                                                "deployable": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "default": 0
                                                },
                                                "pending": {
                                                    "type": "integer",
                                                    "example": 0,
                                                    "default": 0
                                                },
                                                "archived": {
                                                    "type": "integer",
                                                    "example": 0,
                                                    "default": 0
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-11-22 10:37:07"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-11-22 10:37:07"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 8,
                                                    "default": 0
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "summary": "/statuslabels/:id",
                "description": "Updates selected fields in a status label",
                "operationId": "statuslabelsid-3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "`deployable` | `pending` | `archived`",
                                        "default": "deployable"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "color": {
                                        "type": "string",
                                        "description": "Hex code showing what color the status label should be on the pie chart in the dashboard"
                                    },
                                    "show_in_nav": {
                                        "type": "boolean",
                                        "description": "1 or 0 - determine whether the status label should show in the left-side nav of the web GUI",
                                        "default": false
                                    },
                                    "default_label": {
                                        "type": "boolean",
                                        "description": "1 or 0 - determine whether it should be bubbled up to the top of the list of available statuses",
                                        "default": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"status\": \"success\",\n    \"messages\": \"Status Label created successfully.\",\n    \"payload\": {\n        \"name\": \"Test Status Label\",\n        \"deployable\": 1,\n        \"pending\": 0,\n        \"archived\": 0,\n        \"updated_at\": \"2017-11-22 10:37:07\",\n        \"created_at\": \"2017-11-22 10:37:07\",\n        \"id\": 8\n    }\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Status Label created successfully."
                                        },
                                        "payload": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Test Status Label"
                                                },
                                                "deployable": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "default": 0
                                                },
                                                "pending": {
                                                    "type": "integer",
                                                    "example": 0,
                                                    "default": 0
                                                },
                                                "archived": {
                                                    "type": "integer",
                                                    "example": 0,
                                                    "default": 0
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-11-22 10:37:07"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-11-22 10:37:07"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 8,
                                                    "default": 0
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/categories": {
            "get": {
                "summary": "/categories",
                "description": "List categories",
                "operationId": "categories-1",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 50
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset number (useful in pagination)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search string",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order (asc or desc)",
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "summary": "/categories",
                "description": "Create a Category",
                "operationId": "categories-2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "category_type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Model name"
                                    },
                                    "category_type": {
                                        "type": "string",
                                        "description": "(asset, accessory, consumable, component) - as of post-v5.2, this is no longer case sensitive"
                                    },
                                    "use_default_eula": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "require_acceptance": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "checkin_email": {
                                        "type": "boolean",
                                        "description": "Should the user be emailed the EULA and/or an acceptance confirmation email when this item is checked in?",
                                        "default": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 3,\n  \"name\": \"Rohan-Bergstrom\",\n  \"created_at\": \"2017-01-11 03:31:25\",\n  \"updated_at\": \"2017-01-11 03:31:25\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Rohan-Bergstrom"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Company not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/manufacturers": {
            "post": {
                "summary": "/manufacturers",
                "description": "Create a manufacturer",
                "operationId": "manufacturers-1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Manufacturer name"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "get": {
                "summary": "/manufacturers",
                "description": "",
                "operationId": "manufacturers",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "x-readme": {
                    "code-samples": [
                        {
                            "language": "curl",
                            "code": "curl --url https://your-server/api/v1/manufacturers -H \"Authorization: Bearer YOUR-API-TOKEN\" -H \"Content-Type: application/json\" -k -vvv"
                        },
                        {
                            "language": "php",
                            "code": "<?php\n\t\n$access_token = 'YOUR-API-TOKEN';\n\n$headers = array(\n\t'Content-Type: application/json',\n\t'Authorization: Bearer '.$access_token,\n);\n\n$ch = curl_init('https://your-server/api/v1/manufacturers');\n\n\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\ncurl_setopt($ch, CURLOPT_USERAGENT, 'YourScript/0.1 (contact@email)');\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n\n$data = curl_exec($ch);\ncurl_close($ch);\n\nprint_r($data);"
                        },
                        {
                            "language": "javascript",
                            "code": "var request = require(\"request\");\nvar options = { \n\t\n\tmethod: 'GET',\n\turl: 'https://your-server/api/v1/categories',\n\t\n\theaders: \n\t\t{\n\t\t\t'Authorization' : 'Bearer YOUR-API-TOKEN',\n\t\t\t'Accept' : 'application/json'\n\t\t}\n\n};\n\nrequest(options, function (error, response, body) {\n\t\n\tif (error) throw new Error(error);\n\tconsole.log(body);\n\t\n});",
                            "name": "Node"
                        },
                        {
                            "language": "ruby",
                            "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://your-server/api/v1/categories\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\n\nrequest = Net::HTTP::Get.new(url)\nrequest['Authorization'] = \"Bearer YOUR-API-TOKEN\"\nrequest['Accept'] = \"application/json\"\n\nresponse = http.request(request)\nputs response.read_body"
                        },
                        {
                            "language": "javascript",
                            "code": "var data = JSON.stringify(false);\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://your-server/api/v1/categories\");\n\nxhr.send(data);"
                        },
                        {
                            "language": "python",
                            "code": "import requests\n\nurl = \"https://your-server/api/v1/categories\"\nheaders = {\"Authorization\":\"Bearer YOUR-API-TOKEN\", \"Accept\":\"application/json\"}\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
                        }
                    ],
                    "samples-languages": [
                        "curl",
                        "php",
                        "javascript",
                        "ruby",
                        "python"
                    ]
                }
            }
        },
        "/categories/{id}": {
            "put": {
                "summary": "/categories/:id",
                "description": "Update a Category",
                "operationId": "categoriesid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "category_type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Model name"
                                    },
                                    "category_type": {
                                        "type": "string",
                                        "description": "(asset, accessory, consumable, component) - as of post-v5.2, this is no longer case sensitive"
                                    },
                                    "use_default_eula": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "require_acceptance": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "checkin_email": {
                                        "type": "boolean",
                                        "description": "Should the user be emailed the EULA and/or an acceptance confirmation email when this item is checked in?",
                                        "default": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 3,\n  \"name\": \"Rohan-Bergstrom\",\n  \"created_at\": \"2017-01-11 03:31:25\",\n  \"updated_at\": \"2017-01-11 03:31:25\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Rohan-Bergstrom"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Company not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "summary": "/categories/:id",
                "description": "Update a Category",
                "operationId": "categoriesid-1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "category_type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Model name"
                                    },
                                    "category_type": {
                                        "type": "string",
                                        "description": "(asset, accessory, consumable, component) - as of post-v5.2, this is no longer case sensitive"
                                    },
                                    "use_default_eula": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "require_acceptance": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "checkin_email": {
                                        "type": "boolean",
                                        "description": "Should the user be emailed the EULA and/or an acceptance confirmation email when this item is checked in?",
                                        "default": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 3,\n  \"name\": \"Rohan-Bergstrom\",\n  \"created_at\": \"2017-01-11 03:31:25\",\n  \"updated_at\": \"2017-01-11 03:31:25\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Rohan-Bergstrom"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Company not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "get": {
                "summary": "/categories/:id",
                "description": "Return a Category by id",
                "operationId": "categoriesid-3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 3,\n  \"name\": \"Rohan-Bergstrom\",\n  \"created_at\": \"2017-01-11 03:31:25\",\n  \"updated_at\": \"2017-01-11 03:31:25\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Rohan-Bergstrom"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Company not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "summary": "/categories/:id",
                "description": "Delete a Category",
                "operationId": "categoriesid-2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 3,\n  \"name\": \"Rohan-Bergstrom\",\n  \"created_at\": \"2017-01-11 03:31:25\",\n  \"updated_at\": \"2017-01-11 03:31:25\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Rohan-Bergstrom"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Company not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/statuslabels/{id}/assetlist": {
            "get": {
                "summary": "/statuslabels/:id/assetlist",
                "description": "View assets with a specific status label",
                "operationId": "statuslabelsidassetlist",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/accessories/{id}": {
            "get": {
                "summary": "/accessories/:id",
                "description": "Get the details on an accessory",
                "operationId": "accessoriesid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "summary": "/accessories/:id",
                "description": "Selectively updates an accessory",
                "operationId": "accessoriesid-2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "qty": {
                                        "type": "integer",
                                        "description": "Quantity of the accessory you have",
                                        "format": "int32"
                                    },
                                    "order_number": {
                                        "type": "string",
                                        "description": "Order number for this accessory."
                                    },
                                    "purchase_cost": {
                                        "type": "number",
                                        "description": "Cost of item being purchased.",
                                        "format": "float"
                                    },
                                    "purchase_date": {
                                        "type": "string",
                                        "description": "Date accessory was purchased"
                                    },
                                    "model_number": {
                                        "type": "string",
                                        "description": "Model number of Accessory"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "description": "ID number of the category the accessory belongs to",
                                        "format": "int32"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "description": "ID Number of the company the accessory is assigned to",
                                        "format": "int32"
                                    },
                                    "location_id": {
                                        "type": "integer",
                                        "description": "ID number of the location the accessory is assigned to",
                                        "format": "int32"
                                    },
                                    "manufacturer_id": {
                                        "type": "integer",
                                        "description": "ID number of the manufacturer for this accessory.",
                                        "format": "int32"
                                    },
                                    "supplier_id": {
                                        "type": "integer",
                                        "description": "ID number of the supplier for this accessory",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "summary": "/accessories/:id",
                "description": "Deletes an accessory",
                "operationId": "accessoriesid-3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "summary": "/accessories/:id",
                "description": "Updates an accessory",
                "operationId": "accessoriesid-1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "qty",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "qty": {
                                        "type": "integer",
                                        "description": "Quantity of the accessory you have",
                                        "format": "int32"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "description": "ID number of the category the accessory belongs to",
                                        "format": "int32"
                                    },
                                    "order_number": {
                                        "type": "string",
                                        "description": "Order number for this accessory."
                                    },
                                    "purchase_cost": {
                                        "type": "number",
                                        "description": "Cost of item being purchased.",
                                        "format": "float"
                                    },
                                    "purchase_date": {
                                        "type": "string",
                                        "description": "Date accessory was purchased"
                                    },
                                    "model_number": {
                                        "type": "string",
                                        "description": "Model number of Accessory"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "description": "ID Number of the company the accessory is assigned to",
                                        "format": "int32"
                                    },
                                    "location_id": {
                                        "type": "integer",
                                        "description": "ID number of the location the accessory is assigned to",
                                        "format": "int32"
                                    },
                                    "manufacturer_id": {
                                        "type": "integer",
                                        "description": "ID number of the manufacturer for this accessory.",
                                        "format": "int32"
                                    },
                                    "supplier_id": {
                                        "type": "integer",
                                        "description": "ID number of the supplier for this accessory",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/consumables": {
            "get": {
                "summary": "/consumables",
                "description": "Return a listing of consumables",
                "operationId": "consumables",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Specify the number of results you wish to return",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 50
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset to use",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A text string to search the assets data for",
                        "schema": {
                            "type": "string",
                            "default": "null"
                        }
                    },
                    {
                        "name": "order_number",
                        "in": "query",
                        "description": "Return only assets associated with a specific order number",
                        "schema": {
                            "type": "string",
                            "default": "null"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Specify the column name you wish to sort by",
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Specify the order (asc or desc) you wish to order by on your sort column",
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Whether to include detailed information on categories, etc (true) or just the text name (false)",
                        "schema": {
                            "type": "string",
                            "default": "false"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category ID to filter by",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company ID to filter by",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "manufacturer_id",
                        "in": "query",
                        "description": "Manufacturer ID to filter by",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"total\": 3,\n    \"rows\": [\n        {\n            \"id\": 1,\n            \"name\": \"Cardstock (White)\",\n            \"image\": null,\n            \"category\": {\n                \"id\": 10,\n                \"name\": \"Printer Paper\"\n            },\n            \"company\": {\n                \"id\": 3,\n                \"name\": \"Frami-Gleichner\"\n            },\n            \"item_no\": \"39662828\",\n            \"location\": null,\n            \"manufacturer\": {\n                \"id\": 10,\n                \"name\": \"Avery\"\n            },\n            \"min_amt\": 0,\n            \"model_number\": null,\n            \"remaining\": 10,\n            \"order_number\": \"39883338\",\n            \"purchase_cost\": \"24.42\",\n            \"purchase_date\": {\n                \"date\": \"2018-01-20\",\n                \"formatted\": \"2018-01-20\"\n            },\n            \"qty\": 10,\n            \"created_at\": {\n                \"datetime\": \"2018-10-09 19:09:21\",\n                \"formatted\": \"2018-10-09 07:09 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-10-15 20:04:07\",\n                \"formatted\": \"2018-10-15 08:04 PM\"\n            },\n            \"user_can_checkout\": true,\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": true,\n                \"update\": true,\n                \"delete\": true\n            }\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Laserjet Paper (Ream)\",\n            \"image\": null,\n            \"category\": {\n                \"id\": 10,\n                \"name\": \"Printer Paper\"\n            },\n            \"company\": null,\n            \"item_no\": \"35355492\",\n            \"location\": null,\n            \"manufacturer\": {\n                \"id\": 10,\n                \"name\": \"Avery\"\n            },\n            \"min_amt\": 2,\n            \"model_number\": null,\n            \"remaining\": 20,\n            \"order_number\": \"31614834\",\n            \"purchase_cost\": \"22.37\",\n            \"purchase_date\": {\n                \"date\": \"2018-08-20\",\n                \"formatted\": \"2018-08-20\"\n            },\n            \"qty\": 20,\n            \"created_at\": {\n                \"datetime\": \"2018-10-09 19:09:21\",\n                \"formatted\": \"2018-10-09 07:09 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-10-09 19:09:21\",\n                \"formatted\": \"2018-10-09 07:09 PM\"\n            },\n            \"user_can_checkout\": true,\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": true,\n                \"update\": true,\n                \"delete\": true\n            }\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Laserjet Toner (black)\",\n            \"image\": null,\n            \"category\": {\n                \"id\": 11,\n                \"name\": \"Printer Ink\"\n            },\n            \"company\": null,\n            \"item_no\": \"25635662\",\n            \"location\": null,\n            \"manufacturer\": {\n                \"id\": 5,\n                \"name\": \"HP\"\n            },\n            \"min_amt\": 2,\n            \"model_number\": null,\n            \"remaining\": 20,\n            \"order_number\": \"9617316\",\n            \"purchase_cost\": \"21.76\",\n            \"purchase_date\": {\n                \"date\": \"2017-10-25\",\n                \"formatted\": \"2017-10-25\"\n            },\n            \"qty\": 20,\n            \"created_at\": {\n                \"datetime\": \"2018-10-09 19:09:21\",\n                \"formatted\": \"2018-10-09 07:09 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-10-09 19:09:21\",\n                \"formatted\": \"2018-10-09 07:09 PM\"\n            },\n            \"user_can_checkout\": true,\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": true,\n                \"update\": true,\n                \"delete\": true\n            }\n        }\n    ]\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "example": 3,
                                            "default": 0
                                        },
                                        "rows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1,
                                                        "default": 0
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Cardstock (White)"
                                                    },
                                                    "image": {},
                                                    "category": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 10,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Printer Paper"
                                                            }
                                                        }
                                                    },
                                                    "company": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 3,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Frami-Gleichner"
                                                            }
                                                        }
                                                    },
                                                    "item_no": {
                                                        "type": "string",
                                                        "example": "39662828"
                                                    },
                                                    "location": {},
                                                    "manufacturer": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 10,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Avery"
                                                            }
                                                        }
                                                    },
                                                    "min_amt": {
                                                        "type": "integer",
                                                        "example": 0,
                                                        "default": 0
                                                    },
                                                    "model_number": {},
                                                    "remaining": {
                                                        "type": "integer",
                                                        "example": 10,
                                                        "default": 0
                                                    },
                                                    "order_number": {
                                                        "type": "string",
                                                        "example": "39883338"
                                                    },
                                                    "purchase_cost": {
                                                        "type": "string",
                                                        "example": "24.42"
                                                    },
                                                    "purchase_date": {
                                                        "type": "object",
                                                        "properties": {
                                                            "date": {
                                                                "type": "string",
                                                                "example": "2018-01-20"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2018-01-20"
                                                            }
                                                        }
                                                    },
                                                    "qty": {
                                                        "type": "integer",
                                                        "example": 10,
                                                        "default": 0
                                                    },
                                                    "created_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2018-10-09 19:09:21"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2018-10-09 07:09 PM"
                                                            }
                                                        }
                                                    },
                                                    "updated_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2018-10-15 20:04:07"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2018-10-15 08:04 PM"
                                                            }
                                                        }
                                                    },
                                                    "user_can_checkout": {
                                                        "type": "boolean",
                                                        "example": true,
                                                        "default": true
                                                    },
                                                    "available_actions": {
                                                        "type": "object",
                                                        "properties": {
                                                            "checkout": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "checkin": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "update": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "delete": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": []
            },
            "post": {
                "summary": "/consumables",
                "description": "Create a new consumable",
                "operationId": "consumables-1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "qty",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "qty": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "order_number": {
                                        "type": "string"
                                    },
                                    "manufacturer_id": {
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "type": "string"
                                    },
                                    "requestable": {
                                        "type": "boolean"
                                    },
                                    "purchase_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "min_amt": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "model_number": {
                                        "type": "string"
                                    },
                                    "item_no": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/components": {
            "post": {
                "summary": "/components",
                "description": "Creates a component",
                "operationId": "components-1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "qty",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "qty": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "location_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "order_number": {
                                        "type": "string"
                                    },
                                    "purchase_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "purchase_cost": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "min_amt": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "serial": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "get": {
                "summary": "/components",
                "description": "Return a listing of components",
                "operationId": "components",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Specify the number of results you wish to return",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 50
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset to use",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A text string to search the assets data for",
                        "schema": {
                            "type": "string",
                            "default": "null"
                        }
                    },
                    {
                        "name": "order_number",
                        "in": "query",
                        "description": "Return only assets associated with a specific order number",
                        "schema": {
                            "type": "string",
                            "default": "null"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Specify the column name you wish to sort by",
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Specify the order (asc or desc) you wish to order by on your sort column",
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Whether to include detailed information on categories, etc (true) or just the text name (false)",
                        "schema": {
                            "type": "string",
                            "default": "false"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"total\": 4,\n    \"rows\": [\n        {\n            \"id\": 1,\n            \"name\": \"Crucial 4GB DDR3L-1600 SODIMM\",\n            \"image\": null,\n            \"serial\": null,\n            \"location\": {\n                \"id\": 3,\n                \"name\": \"Nikitaborough\"\n            },\n            \"qty\": 10,\n            \"min_amt\": 2,\n            \"category\": {\n                \"id\": 13,\n                \"name\": \"RAM\"\n            },\n            \"order_number\": \"48349590\",\n            \"purchase_date\": {\n                \"date\": \"2017-11-28\",\n                \"formatted\": \"2017-11-28\"\n            },\n            \"purchase_cost\": \"2.45\",\n            \"remaining\": 10,\n            \"company\": {\n                \"id\": 2,\n                \"name\": \"Hagenes, Kulas and Rutherford\"\n            },\n            \"created_at\": {\n                \"datetime\": \"2018-10-09 19:09:21\",\n                \"formatted\": \"2018-10-09 07:09 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-10-09 19:09:21\",\n                \"formatted\": \"2018-10-09 07:09 PM\"\n            },\n            \"user_can_checkout\": 1,\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": true,\n                \"update\": true,\n                \"delete\": true\n            }\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Crucial 8GB DDR3L-1600 SODIMM Memory for Mac\",\n            \"image\": null,\n            \"serial\": null,\n            \"location\": null,\n            \"qty\": 10,\n            \"min_amt\": 2,\n            \"category\": {\n                \"id\": 13,\n                \"name\": \"RAM\"\n            },\n            \"order_number\": \"20322504\",\n            \"purchase_date\": {\n                \"date\": \"2018-04-28\",\n                \"formatted\": \"2018-04-28\"\n            },\n            \"purchase_cost\": \"44.27\",\n            \"remaining\": 10,\n            \"company\": null,\n            \"created_at\": {\n                \"datetime\": \"2018-10-09 19:09:21\",\n                \"formatted\": \"2018-10-09 07:09 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-10-09 19:09:21\",\n                \"formatted\": \"2018-10-09 07:09 PM\"\n            },\n            \"user_can_checkout\": 1,\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": true,\n                \"update\": true,\n                \"delete\": true\n            }\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Crucial BX300 120GB SATA Internal SSD\",\n            \"image\": null,\n            \"serial\": null,\n            \"location\": null,\n            \"qty\": 10,\n            \"min_amt\": 2,\n            \"category\": {\n                \"id\": 12,\n                \"name\": \"HDD/SSD\"\n            },\n            \"order_number\": \"41502705\",\n            \"purchase_date\": {\n                \"date\": \"2017-10-11\",\n                \"formatted\": \"2017-10-11\"\n            },\n            \"purchase_cost\": \"23.12\",\n            \"remaining\": 10,\n            \"company\": null,\n            \"created_at\": {\n                \"datetime\": \"2018-10-09 19:09:21\",\n                \"formatted\": \"2018-10-09 07:09 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-10-09 19:09:21\",\n                \"formatted\": \"2018-10-09 07:09 PM\"\n            },\n            \"user_can_checkout\": 1,\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": true,\n                \"update\": true,\n                \"delete\": true\n            }\n        },\n        {\n            \"id\": 4,\n            \"name\": \"Crucial BX300 240GB SATA Internal SSD\",\n            \"image\": null,\n            \"serial\": null,\n            \"location\": null,\n            \"qty\": 10,\n            \"min_amt\": 2,\n            \"category\": {\n                \"id\": 12,\n                \"name\": \"HDD/SSD\"\n            },\n            \"order_number\": \"48987394\",\n            \"purchase_date\": {\n                \"date\": \"2018-09-08\",\n                \"formatted\": \"2018-09-08\"\n            },\n            \"purchase_cost\": \"48.72\",\n            \"remaining\": 10,\n            \"company\": null,\n            \"created_at\": {\n                \"datetime\": \"2018-10-09 19:09:21\",\n                \"formatted\": \"2018-10-09 07:09 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-10-09 19:09:21\",\n                \"formatted\": \"2018-10-09 07:09 PM\"\n            },\n            \"user_can_checkout\": 1,\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": true,\n                \"update\": true,\n                \"delete\": true\n            }\n        }\n    ]\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "example": 4,
                                            "default": 0
                                        },
                                        "rows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1,
                                                        "default": 0
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Crucial 4GB DDR3L-1600 SODIMM"
                                                    },
                                                    "image": {},
                                                    "serial": {},
                                                    "location": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 3,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Nikitaborough"
                                                            }
                                                        }
                                                    },
                                                    "qty": {
                                                        "type": "integer",
                                                        "example": 10,
                                                        "default": 0
                                                    },
                                                    "min_amt": {
                                                        "type": "integer",
                                                        "example": 2,
                                                        "default": 0
                                                    },
                                                    "category": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 13,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "RAM"
                                                            }
                                                        }
                                                    },
                                                    "order_number": {
                                                        "type": "string",
                                                        "example": "48349590"
                                                    },
                                                    "purchase_date": {
                                                        "type": "object",
                                                        "properties": {
                                                            "date": {
                                                                "type": "string",
                                                                "example": "2017-11-28"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2017-11-28"
                                                            }
                                                        }
                                                    },
                                                    "purchase_cost": {
                                                        "type": "string",
                                                        "example": "2.45"
                                                    },
                                                    "remaining": {
                                                        "type": "integer",
                                                        "example": 10,
                                                        "default": 0
                                                    },
                                                    "company": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 2,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Hagenes, Kulas and Rutherford"
                                                            }
                                                        }
                                                    },
                                                    "created_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2018-10-09 19:09:21"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2018-10-09 07:09 PM"
                                                            }
                                                        }
                                                    },
                                                    "updated_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2018-10-09 19:09:21"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2018-10-09 07:09 PM"
                                                            }
                                                        }
                                                    },
                                                    "user_can_checkout": {
                                                        "type": "integer",
                                                        "example": 1,
                                                        "default": 0
                                                    },
                                                    "available_actions": {
                                                        "type": "object",
                                                        "properties": {
                                                            "checkout": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "checkin": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "update": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "delete": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": []
            }
        },
        "/consumables/{id}": {
            "get": {
                "summary": "/consumables/:id",
                "description": "Get the details on a consumable",
                "operationId": "consumablesid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "summary": "/consumables/:id",
                "description": "Updates a portion of a consumable record",
                "operationId": "consumablesid-1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "qty",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "qty": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "order_number": {
                                        "type": "string"
                                    },
                                    "manufacturer_id": {
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "type": "string"
                                    },
                                    "requestable": {
                                        "type": "boolean"
                                    },
                                    "purchase_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "min_amt": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "model_number": {
                                        "type": "string"
                                    },
                                    "item_no": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "summary": "/consumables/:id",
                "description": "Deletes a consumable",
                "operationId": "consumablesid-2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "summary": "/consumables/:id",
                "description": "Updates a consumable",
                "operationId": "consumables-2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "qty",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "qty": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "order_number": {
                                        "type": "string"
                                    },
                                    "manufacturer_id": {
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "type": "string"
                                    },
                                    "requestable": {
                                        "type": "boolean"
                                    },
                                    "purchase_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "min_amt": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "model_number": {
                                        "type": "string"
                                    },
                                    "item_no": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/components/{id}": {
            "get": {
                "summary": "/components/:id",
                "description": "Get the details on a component",
                "operationId": "componentsid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "summary": "/components/:id",
                "description": "Updates a component",
                "operationId": "componentsid-1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "qty",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "qty": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "location_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "order_number": {
                                        "type": "string"
                                    },
                                    "purchase_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "purchase_cost": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "min_amt": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "serial": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "summary": "/components/:id",
                "description": "Updates a some details of a component",
                "operationId": "componentsid-2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "qty",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "qty": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "location_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "order_number": {
                                        "type": "string"
                                    },
                                    "purchase_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "purchase_cost": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "min_amt": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "serial": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "summary": "/components/:id",
                "description": "Deletes a component",
                "operationId": "componentsid-3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/hardware/{id}/checkout": {
            "post": {
                "summary": "/hardware/:id/checkout",
                "description": "Checkout an asset to a user, location or another asset",
                "operationId": "hardware-checkout",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id (not the asset tag) of the asset you'd like to query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "status_id",
                                    "checkout_to_type"
                                ],
                                "properties": {
                                    "status_id": {
                                        "type": "integer",
                                        "description": "Valid status ID",
                                        "format": "int32"
                                    },
                                    "checkout_to_type": {
                                        "type": "string",
                                        "description": "Type of entity the asset is being checked out to: user, asset, or location",
                                        "default": "user",
                                        "enum": [
                                            "asset",
                                            "location",
                                            "user"
                                        ]
                                    },
                                    "assigned_user": {
                                        "type": "integer",
                                        "description": "The ID of the user to check the asset out to. Required if `checkout_to_type` is set to `user`",
                                        "format": "int32"
                                    },
                                    "assigned_asset": {
                                        "type": "integer",
                                        "description": "The asset ID to associate the asset to. Required if `checkout_to_type` is set to `asset`",
                                        "format": "int32"
                                    },
                                    "assigned_location": {
                                        "type": "integer",
                                        "description": "The location ID to check the asset out to. Required if `checkout_to_type` is set to `location`",
                                        "format": "int32"
                                    },
                                    "expected_checkin": {
                                        "type": "string",
                                        "description": "Optional date the asset is expected to be checked in",
                                        "format": "date"
                                    },
                                    "checkout_at": {
                                        "type": "string",
                                        "description": "Optional date to override the checkout time of now",
                                        "format": "date"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Optional new asset name. This is useful for changing the asset's name on new checkout, for example, an asset that was named \"Anna's Macbook Pro\" could be renamed on the fly when it's checked out to Elizabeth, to \"Beth's Macbook Pro\""
                                    },
                                    "note": {
                                        "type": "string",
                                        "description": "Optional note about the checkout"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n\t\"rows\": [\n\t\t{\n            \"id\": \"45\",\n            \"asset_tag\": \"976946724\",\n            \"assigned_to\": \"\",\n            \"category\": \"Reiciendis ea.\",\n            \"companyName\": \"Williamson-Kuhn\",\n            \"created_at\": \"\",\n            \"eol\": \"1991-10-19\",\n            \"expected_checkin\": \"\",\n            \"image\": \"\",\n            \"last_checkout\": \"\",\n            \"location\": \"Expanded system\",\n            \"manufacturer\": \"Farrell Group\",\n            \"model\": \"Profound zero\",\n            \"model_number\": null,\n            \"name\": \"Programmable concept\",\n            \"notes\": \"Ipsa pariatur sunt aut.\",\n            \"order_number\": \"\",\n            \"purchase_cost\": \"689.30\",\n            \"purchase_date\": \"1991-09-19\",\n            \"serial\": \"f5f06bb3-2420\",\n            \"status_label\": \"Ready to Deploy\"\n            }\n\t],\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Asset does not exist.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Asset does not exist."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "text/plain": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/hardware/{id}/checkin": {
            "post": {
                "summary": "/hardware/:id/checkin",
                "description": "Checkin an asset",
                "operationId": "hardware-checkin",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id (not the asset tag) of the asset you'd like to query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "status_id"
                                ],
                                "properties": {
                                    "status_id": {
                                        "type": "integer",
                                        "default": null,
                                        "format": "int32"
                                    },
                                    "name": {
                                        "type": "string",
                                        "default": "null"
                                    },
                                    "note": {
                                        "type": "string",
                                        "description": "Note about the checkin"
                                    },
                                    "location_id": {
                                        "type": "string",
                                        "description": "Updated Location for this item."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n\t\"rows\": [\n\t\t{\n            \"id\": \"45\",\n            \"asset_tag\": \"976946724\",\n            \"assigned_to\": \"\",\n            \"category\": \"Reiciendis ea.\",\n            \"companyName\": \"Williamson-Kuhn\",\n            \"created_at\": \"\",\n            \"eol\": \"1991-10-19\",\n            \"expected_checkin\": \"\",\n            \"image\": \"\",\n            \"last_checkout\": \"\",\n            \"location\": \"Expanded system\",\n            \"manufacturer\": \"Farrell Group\",\n            \"model\": \"Profound zero\",\n            \"model_number\": null,\n            \"name\": \"Programmable concept\",\n            \"notes\": \"Ipsa pariatur sunt aut.\",\n            \"order_number\": \"\",\n            \"purchase_cost\": \"689.30\",\n            \"purchase_date\": \"1991-09-19\",\n            \"serial\": \"f5f06bb3-2420\",\n            \"status_label\": \"Ready to Deploy\"\n            }\n\t],\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Asset does not exist.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Asset does not exist."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "text/plain": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": []
            }
        },
        "/licenses": {
            "get": {
                "summary": "/licenses",
                "description": "Return a listing of licenses",
                "operationId": "licenses",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Specify the number of results you wish to return",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 50
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset to use",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A text string to search the assets data for",
                        "schema": {
                            "type": "string",
                            "default": "null"
                        }
                    },
                    {
                        "name": "order_number",
                        "in": "query",
                        "description": "Return only assets associated with a specific order number",
                        "schema": {
                            "type": "string",
                            "default": "null"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Specify the column name you wish to sort by",
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Specify the order (asc or desc) you wish to order by on your sort column",
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Whether to include detailed information on categories, etc (true) or just the text name (false)",
                        "schema": {
                            "type": "string",
                            "default": "false"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"total\": 4,\n    \"rows\": [\n        {\n            \"id\": 1,\n            \"name\": \"Photoshop\",\n            \"company\": null,\n            \"manufacturer\": {\n                \"id\": 9,\n                \"name\": \"Adobe\"\n            },\n            \"product_key\": \"0d5254fb-b9f9-342c-a210-5feba9ea08b0\",\n            \"order_number\": \"27709963\",\n            \"purchase_order\": \"\",\n            \"purchase_date\": {\n                \"date\": \"2017-07-04\",\n                \"formatted\": \"2017-07-04\"\n            },\n            \"purchase_cost\": \"299.99\",\n            \"notes\": \"Created by DB seeder\",\n            \"expiration_date\": null,\n            \"seats\": 10,\n            \"free_seats_count\": 10,\n            \"license_name\": \"Prof. Alba Sawayn\",\n            \"license_email\": \"merlin50@example.org\",\n            \"maintained\": false,\n            \"supplier\": null,\n            \"created_at\": {\n                \"datetime\": \"2017-11-11 18:18:03\",\n                \"formatted\": \"2017-11-11 06:18 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2017-11-11 18:18:03\",\n                \"formatted\": \"2017-11-11 06:18 PM\"\n            },\n            \"user_can_checkout\": true,\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": true,\n                \"clone\": true,\n                \"update\": true,\n                \"delete\": true\n            }\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Acrobat\",\n            \"company\": null,\n            \"manufacturer\": {\n                \"id\": 9,\n                \"name\": \"Adobe\"\n            },\n            \"product_key\": \"fb382c35-4514-3c60-ab99-9fd2f7d492ea\",\n            \"order_number\": \"30329422\",\n            \"purchase_order\": \"\",\n            \"purchase_date\": {\n                \"date\": \"2017-01-15\",\n                \"formatted\": \"2017-01-15\"\n            },\n            \"purchase_cost\": \"29.99\",\n            \"notes\": \"Created by DB seeder\",\n            \"expiration_date\": null,\n            \"seats\": 10,\n            \"free_seats_count\": 10,\n            \"license_name\": \"Katelyn Boehm\",\n            \"license_email\": \"beverly.hartmann@example.com\",\n            \"maintained\": false,\n            \"supplier\": null,\n            \"created_at\": {\n                \"datetime\": \"2017-11-11 18:18:03\",\n                \"formatted\": \"2017-11-11 06:18 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2017-11-11 18:18:03\",\n                \"formatted\": \"2017-11-11 06:18 PM\"\n            },\n            \"user_can_checkout\": true,\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": true,\n                \"clone\": true,\n                \"update\": true,\n                \"delete\": true\n            }\n        },\n        {\n            \"id\": 3,\n            \"name\": \"InDesign\",\n            \"company\": null,\n            \"manufacturer\": {\n                \"id\": 9,\n                \"name\": \"Adobe\"\n            },\n            \"product_key\": \"5b8704bb-6948-3fd3-82df-ba344a5b10eb\",\n            \"order_number\": \"23796169\",\n            \"purchase_order\": \"\",\n            \"purchase_date\": {\n                \"date\": \"2017-08-14\",\n                \"formatted\": \"2017-08-14\"\n            },\n            \"purchase_cost\": \"199.99\",\n            \"notes\": \"Created by DB seeder\",\n            \"expiration_date\": null,\n            \"seats\": 10,\n            \"free_seats_count\": 10,\n            \"license_name\": \"Mrs. Elisha Howe DVM\",\n            \"license_email\": \"ofisher@example.com\",\n            \"maintained\": false,\n            \"supplier\": null,\n            \"created_at\": {\n                \"datetime\": \"2017-11-11 18:18:03\",\n                \"formatted\": \"2017-11-11 06:18 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2017-11-11 18:18:03\",\n                \"formatted\": \"2017-11-11 06:18 PM\"\n            },\n            \"user_can_checkout\": true,\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": true,\n                \"clone\": true,\n                \"update\": true,\n                \"delete\": true\n            }\n        },\n        {\n            \"id\": 4,\n            \"name\": \"Office\",\n            \"company\": null,\n            \"manufacturer\": {\n                \"id\": 2,\n                \"name\": \"Microsoft\"\n            },\n            \"product_key\": \"4a1d4573-154a-3f8d-94a8-b71c49fde89a\",\n            \"order_number\": \"13062244\",\n            \"purchase_order\": \"\",\n            \"purchase_date\": {\n                \"date\": \"2017-06-02\",\n                \"formatted\": \"2017-06-02\"\n            },\n            \"purchase_cost\": \"49.99\",\n            \"notes\": \"Created by DB seeder\",\n            \"expiration_date\": null,\n            \"seats\": 20,\n            \"free_seats_count\": 20,\n            \"license_name\": \"Brannon Kutch\",\n            \"license_email\": \"kennith15@example.com\",\n            \"maintained\": false,\n            \"supplier\": null,\n            \"created_at\": {\n                \"datetime\": \"2017-11-11 18:18:03\",\n                \"formatted\": \"2017-11-11 06:18 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2017-11-11 18:18:03\",\n                \"formatted\": \"2017-11-11 06:18 PM\"\n            },\n            \"user_can_checkout\": true,\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": true,\n                \"clone\": true,\n                \"update\": true,\n                \"delete\": true\n            }\n        }\n    ]\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "example": 4,
                                            "default": 0
                                        },
                                        "rows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1,
                                                        "default": 0
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Photoshop"
                                                    },
                                                    "company": {},
                                                    "manufacturer": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 9,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Adobe"
                                                            }
                                                        }
                                                    },
                                                    "product_key": {
                                                        "type": "string",
                                                        "example": "0d5254fb-b9f9-342c-a210-5feba9ea08b0"
                                                    },
                                                    "order_number": {
                                                        "type": "string",
                                                        "example": "27709963"
                                                    },
                                                    "purchase_order": {
                                                        "type": "string",
                                                        "example": ""
                                                    },
                                                    "purchase_date": {
                                                        "type": "object",
                                                        "properties": {
                                                            "date": {
                                                                "type": "string",
                                                                "example": "2017-07-04"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2017-07-04"
                                                            }
                                                        }
                                                    },
                                                    "purchase_cost": {
                                                        "type": "string",
                                                        "example": "299.99"
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "example": "Created by DB seeder"
                                                    },
                                                    "expiration_date": {},
                                                    "seats": {
                                                        "type": "integer",
                                                        "example": 10,
                                                        "default": 0
                                                    },
                                                    "free_seats_count": {
                                                        "type": "integer",
                                                        "example": 10,
                                                        "default": 0
                                                    },
                                                    "license_name": {
                                                        "type": "string",
                                                        "example": "Prof. Alba Sawayn"
                                                    },
                                                    "license_email": {
                                                        "type": "string",
                                                        "example": "merlin50@example.org"
                                                    },
                                                    "maintained": {
                                                        "type": "boolean",
                                                        "example": false,
                                                        "default": true
                                                    },
                                                    "supplier": {},
                                                    "created_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2017-11-11 18:18:03"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2017-11-11 06:18 PM"
                                                            }
                                                        }
                                                    },
                                                    "updated_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2017-11-11 18:18:03"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2017-11-11 06:18 PM"
                                                            }
                                                        }
                                                    },
                                                    "user_can_checkout": {
                                                        "type": "boolean",
                                                        "example": true,
                                                        "default": true
                                                    },
                                                    "available_actions": {
                                                        "type": "object",
                                                        "properties": {
                                                            "checkout": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "checkin": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "clone": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "update": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "delete": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": []
            },
            "post": {
                "summary": "/licenses/",
                "description": "",
                "operationId": "testinput",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "seats"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of license being created"
                                    },
                                    "seats": {
                                        "type": "integer",
                                        "description": "Number of license seats owned.",
                                        "format": "int32"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "description": "Id number of company license belongs to",
                                        "format": "int32"
                                    },
                                    "expiration_date": {
                                        "type": "string",
                                        "description": "Date of license expiration",
                                        "format": "date"
                                    },
                                    "license_email": {
                                        "type": "string",
                                        "description": "Email address associated with license"
                                    },
                                    "license_name": {
                                        "type": "string",
                                        "description": "Name of license contact person"
                                    },
                                    "serial": {
                                        "type": "string"
                                    },
                                    "maintained": {
                                        "type": "boolean",
                                        "description": "Maintained status of license."
                                    },
                                    "manufacturer_id": {
                                        "type": "integer",
                                        "description": "ID number of manufacturer of license.",
                                        "format": "int32"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "License Notes"
                                    },
                                    "order_number": {
                                        "type": "string",
                                        "description": "Order number of license purchase"
                                    },
                                    "purchase_cost": {
                                        "type": "number",
                                        "description": "Cost of license",
                                        "format": "float"
                                    },
                                    "purchase_date": {
                                        "type": "string",
                                        "description": "Date of license purchase",
                                        "format": "date"
                                    },
                                    "purchase_order": {
                                        "type": "string",
                                        "description": "Purchase Order #"
                                    },
                                    "reassignable": {
                                        "type": "boolean",
                                        "description": "Is license reassignable?"
                                    },
                                    "supplier_id": {
                                        "type": "integer",
                                        "description": "ID number of license supplier",
                                        "format": "int32"
                                    },
                                    "termination_date": {
                                        "type": "string",
                                        "description": "Termination date for license.",
                                        "format": "date"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "200 Ok": {
                                        "value": "{\n    \"status\": \"success\",\n    \"messages\": \"License created successfully.\",\n    \"payload\": {\n        \"name\": \"TEST License\",\n        \"seats\": \"25\",\n        \"updated_at\": \"2018-02-25 18:23:49\",\n        \"created_at\": \"2018-02-25 18:23:49\",\n        \"id\": 9\n    }\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "License created successfully."
                                        },
                                        "payload": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "TEST License"
                                                },
                                                "seats": {
                                                    "type": "string",
                                                    "example": "25"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2018-02-25 18:23:49"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2018-02-25 18:23:49"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 9,
                                                    "default": 0
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "text/plain": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/fieldsets/{id}": {
            "get": {
                "summary": "/fieldsets/:id",
                "description": "Return fieldset info by id",
                "operationId": "fieldsetsid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the fieldset",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 1,\n  \"name\": \"Asset with MAC Address\",\n  \"fields\": {\n    \"total\": 1,\n    \"rows\": [\n      {\n        \"name\": \"Quality-focused local GraphicalUserInterface\",\n        \"db_column_name\": \"_snipeit_quality_focused_local_graphicaluserinterf_2\",\n        \"format\": \"IP\",\n        \"required\": 0,\n        \"created_at\": {\n          \"datetime\": \"2017-10-30 21:00:42\",\n          \"formatted\": \"Mon Oct 30, 2017 9:00PM\"\n        },\n        \"updated_at\": {\n          \"datetime\": \"2017-10-30 21:00:42\",\n          \"formatted\": \"Mon Oct 30, 2017 9:00PM\"\n        }\n      }\n    ]\n  },\n  \"models\": {\n    \"total\": 0,\n    \"rows\": []\n  },\n  \"created_at\": null,\n  \"updated_at\": null\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Fieldset not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Asset with MAC Address"
                                                },
                                                "fields": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "rows": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Quality-focused local GraphicalUserInterface"
                                                                    },
                                                                    "db_column_name": {
                                                                        "type": "string",
                                                                        "example": "_snipeit_quality_focused_local_graphicaluserinterf_2"
                                                                    },
                                                                    "format": {
                                                                        "type": "string",
                                                                        "example": "IP"
                                                                    },
                                                                    "required": {
                                                                        "type": "integer",
                                                                        "example": 0,
                                                                        "default": 0
                                                                    },
                                                                    "created_at": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "datetime": {
                                                                                "type": "string",
                                                                                "example": "2017-10-30 21:00:42"
                                                                            },
                                                                            "formatted": {
                                                                                "type": "string",
                                                                                "example": "Mon Oct 30, 2017 9:00PM"
                                                                            }
                                                                        }
                                                                    },
                                                                    "updated_at": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "datetime": {
                                                                                "type": "string",
                                                                                "example": "2017-10-30 21:00:42"
                                                                            },
                                                                            "formatted": {
                                                                                "type": "string",
                                                                                "example": "Mon Oct 30, 2017 9:00PM"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "models": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 0,
                                                            "default": 0
                                                        },
                                                        "rows": {
                                                            "type": "array"
                                                        }
                                                    }
                                                },
                                                "created_at": {},
                                                "updated_at": {}
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Fieldset not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "summary": "/fieldsets/:id",
                "description": "Update a Fieldset",
                "operationId": "fieldsetsid-1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Custom field ID",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Model name"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"status\": \"success\",\n    \"payload\": {\n        \"id\": 2,\n        \"name\": \"Updated Laptop Fields\",\n        \"created_at\": \"2017-01-18 04:42:35\",\n        \"updated_at\": \"2017-07-12 20:07:41\",\n        \"user_id\": 1\n    },\n    \"messages\": \"Fieldset updated successfully.\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Fieldset not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "success"
                                                },
                                                "payload": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 2,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Updated Laptop Fields"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2017-01-18 04:42:35"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2017-07-12 20:07:41"
                                                        },
                                                        "user_id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        }
                                                    }
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Fieldset updated successfully."
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Fieldset not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "summary": "/fieldsets/:id",
                "description": "Delete a Fieldset",
                "operationId": "fieldsetsid-2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Custom field ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"status\": \"success\",\n    \"messages\": \"The fieldset was deleted successfully.\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Fieldset not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "success"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "The fieldset was deleted successfully."
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Fieldset not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/fieldsets": {
            "get": {
                "summary": "/fieldsets",
                "description": "List all custom fieldsets",
                "operationId": "fields",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"total\": 2,\n    \"rows\": [\n        {\n            \"id\": 1,\n            \"name\": \"Mobile Devices\",\n            \"fields\": {\n                \"total\": 2,\n                \"rows\": [\n                    {\n                        \"id\": 1,\n                        \"name\": \"IMEI\",\n                        \"db_column_name\": \"_snipeit_imei_1\",\n                        \"format\": \"regex:/^[0-9]{15}$/\",\n                        \"field_values\": null,\n                        \"field_values_array\": null,\n                        \"type\": \"text\",\n                        \"required\": 0,\n                        \"created_at\": {\n                            \"datetime\": \"2020-11-27 21:05:14\",\n                            \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n                        },\n                        \"updated_at\": {\n                            \"datetime\": \"2020-11-27 21:05:14\",\n                            \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n                        }\n                    },\n                    {\n                        \"id\": 2,\n                        \"name\": \"Phone Number\",\n                        \"db_column_name\": \"_snipeit_phone_number_2\",\n                        \"format\": \"ANY\",\n                        \"field_values\": null,\n                        \"field_values_array\": null,\n                        \"type\": \"text\",\n                        \"required\": 0,\n                        \"created_at\": {\n                            \"datetime\": \"2020-11-27 21:05:14\",\n                            \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n                        },\n                        \"updated_at\": {\n                            \"datetime\": \"2020-11-27 21:05:14\",\n                            \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n                        }\n                    }\n                ]\n            },\n            \"models\": {\n                \"total\": 2,\n                \"rows\": [\n                    {\n                        \"id\": 15,\n                        \"name\": \"iPhone 6s\"\n                    },\n                    {\n                        \"id\": 16,\n                        \"name\": \"iPhone 7\"\n                    }\n                ]\n            },\n            \"created_at\": {\n                \"datetime\": \"2020-11-27 21:05:14\",\n                \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2020-11-27 21:05:14\",\n                \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n            }\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Laptops and Desktops\",\n            \"fields\": {\n                \"total\": 3,\n                \"rows\": [\n                    {\n                        \"id\": 3,\n                        \"name\": \"RAM\",\n                        \"db_column_name\": \"_snipeit_ram_3\",\n                        \"format\": \"ANY\",\n                        \"field_values\": null,\n                        \"field_values_array\": null,\n                        \"type\": \"text\",\n                        \"required\": 0,\n                        \"created_at\": {\n                            \"datetime\": \"2020-11-27 21:05:14\",\n                            \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n                        },\n                        \"updated_at\": {\n                            \"datetime\": \"2020-11-27 21:05:14\",\n                            \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n                        }\n                    },\n                    {\n                        \"id\": 4,\n                        \"name\": \"CPU\",\n                        \"db_column_name\": \"_snipeit_cpu_4\",\n                        \"format\": \"ANY\",\n                        \"field_values\": null,\n                        \"field_values_array\": null,\n                        \"type\": \"text\",\n                        \"required\": 0,\n                        \"created_at\": {\n                            \"datetime\": \"2020-11-27 21:05:14\",\n                            \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n                        },\n                        \"updated_at\": {\n                            \"datetime\": \"2020-11-27 21:05:14\",\n                            \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n                        }\n                    },\n                    {\n                        \"id\": 5,\n                        \"name\": \"MAC Address\",\n                        \"db_column_name\": \"_snipeit_mac_address_5\",\n                        \"format\": \"regex:/^([0-9a-fA-F]{2}[:-]){5}[0-9a-fA-F]{2}$/\",\n                        \"field_values\": null,\n                        \"field_values_array\": null,\n                        \"type\": \"text\",\n                        \"required\": 0,\n                        \"created_at\": {\n                            \"datetime\": \"2020-11-27 21:05:14\",\n                            \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n                        },\n                        \"updated_at\": {\n                            \"datetime\": \"2020-11-27 21:05:14\",\n                            \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n                        }\n                    }\n                ]\n            },\n            \"models\": {\n                \"total\": 10,\n                \"rows\": [\n                    {\n                        \"id\": 1,\n                        \"name\": \"Macbook Pro 13&quot;\"\n                    },\n                    {\n                        \"id\": 2,\n                        \"name\": \"Macbook Air\"\n                    },\n                    {\n                        \"id\": 3,\n                        \"name\": \"Surface\"\n                    },\n                    {\n                        \"id\": 4,\n                        \"name\": \"XPS 13\"\n                    },\n                    {\n                        \"id\": 5,\n                        \"name\": \"Spectre\"\n                    },\n                    {\n                        \"id\": 6,\n                        \"name\": \"ZenBook UX310\"\n                    },\n                    {\n                        \"id\": 7,\n                        \"name\": \"Yoga 910\"\n                    },\n                    {\n                        \"id\": 8,\n                        \"name\": \"iMac Pro\"\n                    },\n                    {\n                        \"id\": 9,\n                        \"name\": \"Lenovo Intel Core i5\"\n                    },\n                    {\n                        \"id\": 10,\n                        \"name\": \"OptiPlex\"\n                    }\n                ]\n            },\n            \"created_at\": {\n                \"datetime\": \"2020-11-27 21:05:14\",\n                \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2020-11-27 21:05:14\",\n                \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n            }\n        }\n    ]\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "example": 2,
                                            "default": 0
                                        },
                                        "rows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1,
                                                        "default": 0
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Mobile Devices"
                                                    },
                                                    "fields": {
                                                        "type": "object",
                                                        "properties": {
                                                            "total": {
                                                                "type": "integer",
                                                                "example": 2,
                                                                "default": 0
                                                            },
                                                            "rows": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "example": 1,
                                                                            "default": 0
                                                                        },
                                                                        "name": {
                                                                            "type": "string",
                                                                            "example": "IMEI"
                                                                        },
                                                                        "db_column_name": {
                                                                            "type": "string",
                                                                            "example": "_snipeit_imei_1"
                                                                        },
                                                                        "format": {
                                                                            "type": "string",
                                                                            "example": "regex:/^[0-9]{15}$/"
                                                                        },
                                                                        "field_values": {},
                                                                        "field_values_array": {},
                                                                        "type": {
                                                                            "type": "string",
                                                                            "example": "text"
                                                                        },
                                                                        "required": {
                                                                            "type": "integer",
                                                                            "example": 0,
                                                                            "default": 0
                                                                        },
                                                                        "created_at": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "datetime": {
                                                                                    "type": "string",
                                                                                    "example": "2020-11-27 21:05:14"
                                                                                },
                                                                                "formatted": {
                                                                                    "type": "string",
                                                                                    "example": "Fri Nov 27, 2020 9:05PM"
                                                                                }
                                                                            }
                                                                        },
                                                                        "updated_at": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "datetime": {
                                                                                    "type": "string",
                                                                                    "example": "2020-11-27 21:05:14"
                                                                                },
                                                                                "formatted": {
                                                                                    "type": "string",
                                                                                    "example": "Fri Nov 27, 2020 9:05PM"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "models": {
                                                        "type": "object",
                                                        "properties": {
                                                            "total": {
                                                                "type": "integer",
                                                                "example": 2,
                                                                "default": 0
                                                            },
                                                            "rows": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "example": 15,
                                                                            "default": 0
                                                                        },
                                                                        "name": {
                                                                            "type": "string",
                                                                            "example": "iPhone 6s"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "created_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2020-11-27 21:05:14"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "Fri Nov 27, 2020 9:05PM"
                                                            }
                                                        }
                                                    },
                                                    "updated_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2020-11-27 21:05:14"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "Fri Nov 27, 2020 9:05PM"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "text/plain": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "summary": "/fieldsets",
                "description": "Create a Fieldset",
                "operationId": "fieldsets",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Fieldset name"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/manufacturers/{id}": {
            "patch": {
                "summary": "/manufacturers/:id",
                "description": "Partially update a Manufacturer",
                "operationId": "manufacturersid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Manufacturer ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Model name"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 3,\n  \"name\": \"Rohan-Bergstrom\",\n  \"created_at\": \"2017-01-11 03:31:25\",\n  \"updated_at\": \"2017-01-11 03:31:25\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Rohan-Bergstrom"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Company not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "get": {
                "summary": "/manufacturers/:id",
                "description": "View a manufacturer",
                "operationId": "manufacturersid-1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Manufacturer ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 3,\n  \"name\": \"Rohan-Bergstrom\",\n  \"created_at\": \"2017-01-11 03:31:25\",\n  \"updated_at\": \"2017-01-11 03:31:25\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Rohan-Bergstrom"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Company not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "summary": "/manufacturers/:id",
                "description": "Delete a manufacturer",
                "operationId": "manufacturersid-2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Manufacturer ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 3,\n  \"name\": \"Rohan-Bergstrom\",\n  \"created_at\": \"2017-01-11 03:31:25\",\n  \"updated_at\": \"2017-01-11 03:31:25\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Rohan-Bergstrom"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Company not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "summary": "/manufacturers/:id",
                "description": "Update a Manufacturer",
                "operationId": "manufacturersid-3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Manufacturer ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Model name"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 3,\n  \"name\": \"Rohan-Bergstrom\",\n  \"created_at\": \"2017-01-11 03:31:25\",\n  \"updated_at\": \"2017-01-11 03:31:25\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Rohan-Bergstrom"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Company not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/users/{id}/assets": {
            "get": {
                "summary": "/users/:id/assets",
                "description": "Get a list of assets checked out to the user",
                "operationId": "usersidassets",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/licenses/{id}": {
            "put": {
                "summary": "/licenses/:id",
                "description": "",
                "operationId": "licensesid-1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID (not name) of license being updated",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of license being created"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "description": "Id number of company license belongs to",
                                        "format": "int32"
                                    },
                                    "expiration_date": {
                                        "type": "string",
                                        "description": "Date of license expiration",
                                        "format": "date"
                                    },
                                    "license_email": {
                                        "type": "string",
                                        "description": "Email address associated with license"
                                    },
                                    "license_name": {
                                        "type": "string",
                                        "description": "Name of license contact person"
                                    },
                                    "serial": {
                                        "type": "string",
                                        "description": "Product key of the license"
                                    },
                                    "maintained": {
                                        "type": "boolean",
                                        "description": "Maintained status of license."
                                    },
                                    "manufacturer_id": {
                                        "type": "integer",
                                        "description": "ID number of manufacturer of license.",
                                        "format": "int32"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "License Notes"
                                    },
                                    "order_number": {
                                        "type": "string",
                                        "description": "Order number of license purchase"
                                    },
                                    "purchase_cost": {
                                        "type": "number",
                                        "description": "Cost of license",
                                        "format": "float"
                                    },
                                    "purchase_date": {
                                        "type": "string",
                                        "description": "Date of license purchase",
                                        "format": "date"
                                    },
                                    "purchase_order": {
                                        "type": "string",
                                        "description": "Purchase Order #"
                                    },
                                    "reassignable": {
                                        "type": "boolean",
                                        "description": "Is license reassignable?"
                                    },
                                    "seats": {
                                        "type": "integer",
                                        "description": "Number of license seats owned.",
                                        "format": "int32"
                                    },
                                    "supplier_id": {
                                        "type": "integer",
                                        "description": "ID number of license supplier",
                                        "format": "int32"
                                    },
                                    "termination_date": {
                                        "type": "string",
                                        "description": "Termination date for license.",
                                        "format": "date"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "summary": "/licenses/:id",
                "description": "",
                "operationId": "licensesid-2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID (not name) of license being updated",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of license being created"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "description": "Id number of company license belongs to",
                                        "format": "int32"
                                    },
                                    "expiration_date": {
                                        "type": "string",
                                        "description": "Date of license expiration",
                                        "format": "date"
                                    },
                                    "license_email": {
                                        "type": "string",
                                        "description": "Email address associated with license"
                                    },
                                    "license_name": {
                                        "type": "string",
                                        "description": "Name of license contact person"
                                    },
                                    "serial": {
                                        "type": "string",
                                        "description": "Product key of the license"
                                    },
                                    "maintained": {
                                        "type": "boolean",
                                        "description": "Maintained status of license."
                                    },
                                    "manufacturer_id": {
                                        "type": "integer",
                                        "description": "ID number of manufacturer of license.",
                                        "format": "int32"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "License Notes"
                                    },
                                    "order_number": {
                                        "type": "string",
                                        "description": "Order number of license purchase"
                                    },
                                    "purchase_cost": {
                                        "type": "number",
                                        "description": "Cost of license",
                                        "format": "float"
                                    },
                                    "purchase_date": {
                                        "type": "string",
                                        "description": "Date of license purchase",
                                        "format": "date"
                                    },
                                    "purchase_order": {
                                        "type": "string",
                                        "description": "Purchase Order #"
                                    },
                                    "reassignable": {
                                        "type": "boolean",
                                        "description": "Is license reassignable?"
                                    },
                                    "seats": {
                                        "type": "integer",
                                        "description": "Number of license seats owned.",
                                        "format": "int32"
                                    },
                                    "supplier_id": {
                                        "type": "integer",
                                        "description": "ID number of license supplier",
                                        "format": "int32"
                                    },
                                    "termination_date": {
                                        "type": "string",
                                        "description": "Termination date for license.",
                                        "format": "date"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "get": {
                "summary": "/licenses/:id",
                "description": "",
                "operationId": "licensesid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id (not name) of the license.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"id\": 1,\n    \"name\": \"Photoshop\",\n    \"company\": null,\n    \"manufacturer\": {\n        \"id\": 9,\n        \"name\": \"Adobe\"\n    },\n    \"product_key\": \"0d5254fb-b9f9-342c-a210-5feba9ea08b0\",\n    \"order_number\": \"27709963\",\n    \"purchase_order\": \"\",\n    \"purchase_date\": {\n        \"date\": \"2017-07-04\",\n        \"formatted\": \"2017-07-04\"\n    },\n    \"purchase_cost\": \"299.99\",\n    \"notes\": \"Created by DB seeder\",\n    \"expiration_date\": null,\n    \"seats\": 10,\n    \"free_seats_count\": 0,\n    \"license_name\": \"Prof. Alba Sawayn\",\n    \"license_email\": \"merlin50@example.org\",\n    \"maintained\": false,\n    \"supplier\": null,\n    \"created_at\": {\n        \"datetime\": \"2017-11-11 18:18:03\",\n        \"formatted\": \"2017-11-11 06:18 PM\"\n    },\n    \"updated_at\": {\n        \"datetime\": \"2017-11-11 18:18:03\",\n        \"formatted\": \"2017-11-11 06:18 PM\"\n    },\n    \"user_can_checkout\": false,\n    \"available_actions\": {\n        \"checkout\": true,\n        \"checkin\": true,\n        \"clone\": true,\n        \"update\": true,\n        \"delete\": true\n    }\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1,
                                            "default": 0
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Photoshop"
                                        },
                                        "company": {},
                                        "manufacturer": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 9,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Adobe"
                                                }
                                            }
                                        },
                                        "product_key": {
                                            "type": "string",
                                            "example": "0d5254fb-b9f9-342c-a210-5feba9ea08b0"
                                        },
                                        "order_number": {
                                            "type": "string",
                                            "example": "27709963"
                                        },
                                        "purchase_order": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "purchase_date": {
                                            "type": "object",
                                            "properties": {
                                                "date": {
                                                    "type": "string",
                                                    "example": "2017-07-04"
                                                },
                                                "formatted": {
                                                    "type": "string",
                                                    "example": "2017-07-04"
                                                }
                                            }
                                        },
                                        "purchase_cost": {
                                            "type": "string",
                                            "example": "299.99"
                                        },
                                        "notes": {
                                            "type": "string",
                                            "example": "Created by DB seeder"
                                        },
                                        "expiration_date": {},
                                        "seats": {
                                            "type": "integer",
                                            "example": 10,
                                            "default": 0
                                        },
                                        "free_seats_count": {
                                            "type": "integer",
                                            "example": 0,
                                            "default": 0
                                        },
                                        "license_name": {
                                            "type": "string",
                                            "example": "Prof. Alba Sawayn"
                                        },
                                        "license_email": {
                                            "type": "string",
                                            "example": "merlin50@example.org"
                                        },
                                        "maintained": {
                                            "type": "boolean",
                                            "example": false,
                                            "default": true
                                        },
                                        "supplier": {},
                                        "created_at": {
                                            "type": "object",
                                            "properties": {
                                                "datetime": {
                                                    "type": "string",
                                                    "example": "2017-11-11 18:18:03"
                                                },
                                                "formatted": {
                                                    "type": "string",
                                                    "example": "2017-11-11 06:18 PM"
                                                }
                                            }
                                        },
                                        "updated_at": {
                                            "type": "object",
                                            "properties": {
                                                "datetime": {
                                                    "type": "string",
                                                    "example": "2017-11-11 18:18:03"
                                                },
                                                "formatted": {
                                                    "type": "string",
                                                    "example": "2017-11-11 06:18 PM"
                                                }
                                            }
                                        },
                                        "user_can_checkout": {
                                            "type": "boolean",
                                            "example": false,
                                            "default": true
                                        },
                                        "available_actions": {
                                            "type": "object",
                                            "properties": {
                                                "checkout": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "default": true
                                                },
                                                "checkin": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "default": true
                                                },
                                                "clone": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "default": true
                                                },
                                                "update": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "default": true
                                                },
                                                "delete": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "default": true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/maintenances": {
            "get": {
                "summary": "/maintenances",
                "description": "List asset maintenances",
                "operationId": "maintenances",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 50
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset to use when retrieving results (useful in pagination)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search string",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Field to order by",
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order (asc or desc)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "asset_id",
                        "in": "query",
                        "description": "Asset ID of the asset you'd like to return maintenances for",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"total\": 2,\n    \"rows\": [\n        {\n            \"id\": 2,\n            \"asset\": {\n                \"id\": 1,\n                \"name\": \"Test Name\",\n                \"asset_tag\": \"02948\"\n            },\n            \"title\": \"Test with all fields\",\n            \"location\": {\n                \"id\": 3,\n                \"name\": \"East Pollyville\"\n            },\n            \"notes\": \"This is a test\",\n            \"supplier\": {\n                \"id\": 3,\n                \"name\": \"Effertz, Langworth and Prohaska\"\n            },\n            \"cost\": \"100.00\",\n            \"asset_maintenance_type\": \"Repair\",\n            \"start_date\": {\n                \"datetime\": \"2018-03-06 00:00:00\",\n                \"formatted\": \"Tue Mar 06, 2018 12:00AM\"\n            },\n            \"asset_maintenance_time\": 20,\n            \"completion_date\": {\n                \"datetime\": \"2018-03-26 00:00:00\",\n                \"formatted\": \"Mon Mar 26, 2018 12:00AM\"\n            },\n            \"user_id\": {\n                \"id\": 2,\n                \"name\": \"Snipe E. Head\"\n            },\n            \"created_at\": {\n                \"datetime\": \"2018-03-26 17:43:35\",\n                \"formatted\": \"Mon Mar 26, 2018 5:43PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-03-26 17:43:35\",\n                \"formatted\": \"Mon Mar 26, 2018 5:43PM\"\n            },\n            \"available_actions\": {\n                \"update\": true,\n                \"delete\": true\n            }\n        },\n        {\n            \"id\": 1,\n            \"asset\": {\n                \"id\": 1,\n                \"name\": \"Test Name\",\n                \"asset_tag\": \"02948\"\n            },\n            \"title\": \"adfasasd\",\n            \"location\": {\n                \"id\": 3,\n                \"name\": \"East Pollyville\"\n            },\n            \"notes\": null,\n            \"supplier\": {\n                \"id\": 3,\n                \"name\": \"Effertz, Langworth and Prohaska\"\n            },\n            \"cost\": null,\n            \"asset_maintenance_type\": \"Maintenance\",\n            \"start_date\": {\n                \"datetime\": \"2018-03-01 00:00:00\",\n                \"formatted\": \"Thu Mar 01, 2018 12:00AM\"\n            },\n            \"asset_maintenance_time\": null,\n            \"completion_date\": null,\n            \"user_id\": {\n                \"id\": 2,\n                \"name\": \"Snipe E. Head\"\n            },\n            \"created_at\": {\n                \"datetime\": \"2018-03-26 15:28:19\",\n                \"formatted\": \"Mon Mar 26, 2018 3:28PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-03-26 15:28:19\",\n                \"formatted\": \"Mon Mar 26, 2018 3:28PM\"\n            },\n            \"available_actions\": {\n                \"update\": true,\n                \"delete\": true\n            }\n        }\n    ]\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "example": 2,
                                            "default": 0
                                        },
                                        "rows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 2,
                                                        "default": 0
                                                    },
                                                    "asset": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Test Name"
                                                            },
                                                            "asset_tag": {
                                                                "type": "string",
                                                                "example": "02948"
                                                            }
                                                        }
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Test with all fields"
                                                    },
                                                    "location": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 3,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "East Pollyville"
                                                            }
                                                        }
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "example": "This is a test"
                                                    },
                                                    "supplier": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 3,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Effertz, Langworth and Prohaska"
                                                            }
                                                        }
                                                    },
                                                    "cost": {
                                                        "type": "string",
                                                        "example": "100.00"
                                                    },
                                                    "asset_maintenance_type": {
                                                        "type": "string",
                                                        "example": "Repair"
                                                    },
                                                    "start_date": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2018-03-06 00:00:00"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "Tue Mar 06, 2018 12:00AM"
                                                            }
                                                        }
                                                    },
                                                    "asset_maintenance_time": {
                                                        "type": "integer",
                                                        "example": 20,
                                                        "default": 0
                                                    },
                                                    "completion_date": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2018-03-26 00:00:00"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "Mon Mar 26, 2018 12:00AM"
                                                            }
                                                        }
                                                    },
                                                    "user_id": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 2,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Snipe E. Head"
                                                            }
                                                        }
                                                    },
                                                    "created_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2018-03-26 17:43:35"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "Mon Mar 26, 2018 5:43PM"
                                                            }
                                                        }
                                                    },
                                                    "updated_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2018-03-26 17:43:35"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "Mon Mar 26, 2018 5:43PM"
                                                            }
                                                        }
                                                    },
                                                    "available_actions": {
                                                        "type": "object",
                                                        "properties": {
                                                            "update": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "delete": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "summary": "/maintenances",
                "description": "Create a new maintenance",
                "operationId": "maintenances-1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "title",
                                    "asset_id",
                                    "supplier_id",
                                    "start_date"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "asset_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "supplier_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "is_warranty": {
                                        "type": "boolean"
                                    },
                                    "cost": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "asset_maintenance_type": {
                                        "type": "string",
                                        "enum": [
                                            "Maintenance",
                                            "Repair",
                                            "PAT Test",
                                            "Upgrade",
                                            "Hardware Support",
                                            "Software Support"
                                        ]
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "completion_date": {
                                        "type": "string",
                                        "format": "date"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/hardware/audit": {
            "post": {
                "summary": "/hardware/audit",
                "description": "Mark an asset as audited",
                "operationId": "hardwareaudit",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "asset_tag"
                                ],
                                "properties": {
                                    "asset_tag": {
                                        "type": "string",
                                        "description": "The asset tag of the asset you wish to audit"
                                    },
                                    "location_id": {
                                        "type": "integer",
                                        "description": "ID of the location you want to associate with the audit",
                                        "format": "int32"
                                    },
                                    "next_audit_date": {
                                        "type": "string",
                                        "description": "The desired next audit date for the asset. If unset, the default audit interval will be used instead",
                                        "format": "date"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"status\": \"success\",\n    \"messages\": \"Asset audit successfully logged.\",\n    \"payload\": {\n        \"asset_tag\": \"SNIPE-IT-RULES\",\n        \"note\": \"\",\n        \"next_audit_date\": {\n            \"datetime\": \"2019-07-05 00:00:00\",\n            \"formatted\": \"Fri Jul 05, 2019 12:00AM\"\n        }\n    }\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Asset does not exist.\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "success"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Asset audit successfully logged."
                                                },
                                                "payload": {
                                                    "type": "object",
                                                    "properties": {
                                                        "asset_tag": {
                                                            "type": "string",
                                                            "example": "SNIPE-IT-RULES"
                                                        },
                                                        "note": {
                                                            "type": "string",
                                                            "example": ""
                                                        },
                                                        "next_audit_date": {
                                                            "type": "object",
                                                            "properties": {
                                                                "datetime": {
                                                                    "type": "string",
                                                                    "example": "2019-07-05 00:00:00"
                                                                },
                                                                "formatted": {
                                                                    "type": "string",
                                                                    "example": "Fri Jul 05, 2019 12:00AM"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Asset does not exist."
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "text/plain": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/hardware/bytag/{asset_tag}": {
            "get": {
                "summary": "/hardware/bytag/:asset_tag",
                "description": "Get the details of a specific asset by asset tag",
                "operationId": "hardware-by-asset-tag",
                "parameters": [
                    {
                        "name": "asset_tag",
                        "in": "path",
                        "description": "The asset_tag (not the ID) of the asset you'd like to query",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 1,\n  \"name\": \"\",\n  \"asset_tag\": \"389658657\",\n  \"serial\": \"b9b47837-13d9-33d3-a7d3-815a8503be44\",\n  \"model\": {\n    \"id\": 1,\n    \"name\": \"Macbook Pro 13&quot;\"\n  },\n  \"model_number\": \"4929525240061\",\n  \"status_label\": {\n    \"id\": 1,\n    \"name\": \"Deployed\",\n    \"status_meta\": \"deployed\"\n  },\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Laptops\"\n  },\n  \"manufacturer\": {\n    \"id\": 1,\n    \"name\": \"Apple\"\n  },\n  \"supplier\": {\n    \"id\": 1,\n    \"name\": \"Harvey-Hettinger\"\n  },\n  \"notes\": \"Created by DB seeder\",\n  \"order_number\": \"4243135\",\n  \"company\": null,\n  \"location\": {\n    \"id\": 3,\n    \"name\": \"Tonystad\"\n  },\n  \"rtd_location\": {\n    \"id\": 1,\n    \"name\": \"Lake Catharineburgh\"\n  },\n  \"image\": null,\n  \"assigned_to\": {\n    \"id\": 1,\n    \"username\": \"admin\",\n    \"name\": \"Admin User\",\n    \"first_name\": \"Admin\",\n    \"last_name\": \"User\",\n    \"employee_number\": \"19135\",\n    \"type\": \"user\"\n  },\n  \"warranty\": null,\n  \"warranty_expires\": null,\n  \"created_at\": {\n    \"datetime\": \"2017-10-18 21:00:08\",\n    \"formatted\": \"Wed Oct 18, 2017 9:00PM\"\n  },\n  \"updated_at\": {\n    \"datetime\": \"2017-10-19 07:57:37\",\n    \"formatted\": \"Thu Oct 19, 2017 7:57AM\"\n  },\n  \"purchase_date\": {\n    \"date\": \"2016-12-03\",\n    \"formatted\": \"Sat Dec 03, 2016\"\n  },\n  \"last_checkout\": {\n    \"datetime\": \"2017-10-05 08:30:20\",\n    \"formatted\": \"Thu Oct 05, 2017 8:30AM\"\n  },\n  \"expected_checkin\": {\n    \"date\": \"2017-11-03\",\n    \"formatted\": \"Fri Nov 03, 2017\"\n  },\n  \"purchase_cost\": \"1114.86\",\n  \"user_can_checkout\": false,\n  \"custom_fields\": [],\n  \"available_actions\": {\n    \"checkout\": true,\n    \"checkin\": true,\n    \"clone\": true,\n    \"update\": true,\n    \"delete\": true\n  }\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Asset does not exist.\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "asset_tag": {
                                                    "type": "string",
                                                    "example": "389658657"
                                                },
                                                "serial": {
                                                    "type": "string",
                                                    "example": "b9b47837-13d9-33d3-a7d3-815a8503be44"
                                                },
                                                "model": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Macbook Pro 13&quot;"
                                                        }
                                                    }
                                                },
                                                "model_number": {
                                                    "type": "string",
                                                    "example": "4929525240061"
                                                },
                                                "status_label": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Deployed"
                                                        },
                                                        "status_meta": {
                                                            "type": "string",
                                                            "example": "deployed"
                                                        }
                                                    }
                                                },
                                                "category": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Laptops"
                                                        }
                                                    }
                                                },
                                                "manufacturer": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Apple"
                                                        }
                                                    }
                                                },
                                                "supplier": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Harvey-Hettinger"
                                                        }
                                                    }
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "example": "Created by DB seeder"
                                                },
                                                "order_number": {
                                                    "type": "string",
                                                    "example": "4243135"
                                                },
                                                "company": {},
                                                "location": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 3,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Tonystad"
                                                        }
                                                    }
                                                },
                                                "rtd_location": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Lake Catharineburgh"
                                                        }
                                                    }
                                                },
                                                "image": {},
                                                "assigned_to": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "example": "admin"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Admin User"
                                                        },
                                                        "first_name": {
                                                            "type": "string",
                                                            "example": "Admin"
                                                        },
                                                        "last_name": {
                                                            "type": "string",
                                                            "example": "User"
                                                        },
                                                        "employee_number": {
                                                            "type": "string",
                                                            "example": "19135"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "example": "user"
                                                        }
                                                    }
                                                },
                                                "warranty": {},
                                                "warranty_expires": {},
                                                "created_at": {
                                                    "type": "object",
                                                    "properties": {
                                                        "datetime": {
                                                            "type": "string",
                                                            "example": "2017-10-18 21:00:08"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Wed Oct 18, 2017 9:00PM"
                                                        }
                                                    }
                                                },
                                                "updated_at": {
                                                    "type": "object",
                                                    "properties": {
                                                        "datetime": {
                                                            "type": "string",
                                                            "example": "2017-10-19 07:57:37"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Thu Oct 19, 2017 7:57AM"
                                                        }
                                                    }
                                                },
                                                "purchase_date": {
                                                    "type": "object",
                                                    "properties": {
                                                        "date": {
                                                            "type": "string",
                                                            "example": "2016-12-03"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Sat Dec 03, 2016"
                                                        }
                                                    }
                                                },
                                                "last_checkout": {
                                                    "type": "object",
                                                    "properties": {
                                                        "datetime": {
                                                            "type": "string",
                                                            "example": "2017-10-05 08:30:20"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Thu Oct 05, 2017 8:30AM"
                                                        }
                                                    }
                                                },
                                                "expected_checkin": {
                                                    "type": "object",
                                                    "properties": {
                                                        "date": {
                                                            "type": "string",
                                                            "example": "2017-11-03"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Fri Nov 03, 2017"
                                                        }
                                                    }
                                                },
                                                "purchase_cost": {
                                                    "type": "string",
                                                    "example": "1114.86"
                                                },
                                                "user_can_checkout": {
                                                    "type": "boolean",
                                                    "example": false,
                                                    "default": true
                                                },
                                                "custom_fields": {
                                                    "type": "array"
                                                },
                                                "available_actions": {
                                                    "type": "object",
                                                    "properties": {
                                                        "checkout": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "checkin": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "clone": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "update": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "delete": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Asset does not exist."
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "text/plain": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": []
            }
        },
        "/hardware/byserial/{serial}": {
            "get": {
                "summary": "/hardware/byserial/:serial",
                "description": "Get the details of a specific asset by asset tag",
                "operationId": "hardware-by-serial",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "description": "The serial number (not the ID) of the asset you'd like to query",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 1,\n  \"name\": \"\",\n  \"asset_tag\": \"389658657\",\n  \"serial\": \"b9b47837-13d9-33d3-a7d3-815a8503be44\",\n  \"model\": {\n    \"id\": 1,\n    \"name\": \"Macbook Pro 13&quot;\"\n  },\n  \"model_number\": \"4929525240061\",\n  \"status_label\": {\n    \"id\": 1,\n    \"name\": \"Deployed\",\n    \"status_meta\": \"deployed\"\n  },\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Laptops\"\n  },\n  \"manufacturer\": {\n    \"id\": 1,\n    \"name\": \"Apple\"\n  },\n  \"supplier\": {\n    \"id\": 1,\n    \"name\": \"Harvey-Hettinger\"\n  },\n  \"notes\": \"Created by DB seeder\",\n  \"order_number\": \"4243135\",\n  \"company\": null,\n  \"location\": {\n    \"id\": 3,\n    \"name\": \"Tonystad\"\n  },\n  \"rtd_location\": {\n    \"id\": 1,\n    \"name\": \"Lake Catharineburgh\"\n  },\n  \"image\": null,\n  \"assigned_to\": {\n    \"id\": 1,\n    \"username\": \"admin\",\n    \"name\": \"Admin User\",\n    \"first_name\": \"Admin\",\n    \"last_name\": \"User\",\n    \"employee_number\": \"19135\",\n    \"type\": \"user\"\n  },\n  \"warranty\": null,\n  \"warranty_expires\": null,\n  \"created_at\": {\n    \"datetime\": \"2017-10-18 21:00:08\",\n    \"formatted\": \"Wed Oct 18, 2017 9:00PM\"\n  },\n  \"updated_at\": {\n    \"datetime\": \"2017-10-19 07:57:37\",\n    \"formatted\": \"Thu Oct 19, 2017 7:57AM\"\n  },\n  \"purchase_date\": {\n    \"date\": \"2016-12-03\",\n    \"formatted\": \"Sat Dec 03, 2016\"\n  },\n  \"last_checkout\": {\n    \"datetime\": \"2017-10-05 08:30:20\",\n    \"formatted\": \"Thu Oct 05, 2017 8:30AM\"\n  },\n  \"expected_checkin\": {\n    \"date\": \"2017-11-03\",\n    \"formatted\": \"Fri Nov 03, 2017\"\n  },\n  \"purchase_cost\": \"1114.86\",\n  \"user_can_checkout\": false,\n  \"custom_fields\": [],\n  \"available_actions\": {\n    \"checkout\": true,\n    \"checkin\": true,\n    \"clone\": true,\n    \"update\": true,\n    \"delete\": true\n  }\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Asset does not exist.\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "asset_tag": {
                                                    "type": "string",
                                                    "example": "389658657"
                                                },
                                                "serial": {
                                                    "type": "string",
                                                    "example": "b9b47837-13d9-33d3-a7d3-815a8503be44"
                                                },
                                                "model": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Macbook Pro 13&quot;"
                                                        }
                                                    }
                                                },
                                                "model_number": {
                                                    "type": "string",
                                                    "example": "4929525240061"
                                                },
                                                "status_label": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Deployed"
                                                        },
                                                        "status_meta": {
                                                            "type": "string",
                                                            "example": "deployed"
                                                        }
                                                    }
                                                },
                                                "category": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Laptops"
                                                        }
                                                    }
                                                },
                                                "manufacturer": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Apple"
                                                        }
                                                    }
                                                },
                                                "supplier": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Harvey-Hettinger"
                                                        }
                                                    }
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "example": "Created by DB seeder"
                                                },
                                                "order_number": {
                                                    "type": "string",
                                                    "example": "4243135"
                                                },
                                                "company": {},
                                                "location": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 3,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Tonystad"
                                                        }
                                                    }
                                                },
                                                "rtd_location": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Lake Catharineburgh"
                                                        }
                                                    }
                                                },
                                                "image": {},
                                                "assigned_to": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "example": "admin"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Admin User"
                                                        },
                                                        "first_name": {
                                                            "type": "string",
                                                            "example": "Admin"
                                                        },
                                                        "last_name": {
                                                            "type": "string",
                                                            "example": "User"
                                                        },
                                                        "employee_number": {
                                                            "type": "string",
                                                            "example": "19135"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "example": "user"
                                                        }
                                                    }
                                                },
                                                "warranty": {},
                                                "warranty_expires": {},
                                                "created_at": {
                                                    "type": "object",
                                                    "properties": {
                                                        "datetime": {
                                                            "type": "string",
                                                            "example": "2017-10-18 21:00:08"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Wed Oct 18, 2017 9:00PM"
                                                        }
                                                    }
                                                },
                                                "updated_at": {
                                                    "type": "object",
                                                    "properties": {
                                                        "datetime": {
                                                            "type": "string",
                                                            "example": "2017-10-19 07:57:37"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Thu Oct 19, 2017 7:57AM"
                                                        }
                                                    }
                                                },
                                                "purchase_date": {
                                                    "type": "object",
                                                    "properties": {
                                                        "date": {
                                                            "type": "string",
                                                            "example": "2016-12-03"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Sat Dec 03, 2016"
                                                        }
                                                    }
                                                },
                                                "last_checkout": {
                                                    "type": "object",
                                                    "properties": {
                                                        "datetime": {
                                                            "type": "string",
                                                            "example": "2017-10-05 08:30:20"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Thu Oct 05, 2017 8:30AM"
                                                        }
                                                    }
                                                },
                                                "expected_checkin": {
                                                    "type": "object",
                                                    "properties": {
                                                        "date": {
                                                            "type": "string",
                                                            "example": "2017-11-03"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Fri Nov 03, 2017"
                                                        }
                                                    }
                                                },
                                                "purchase_cost": {
                                                    "type": "string",
                                                    "example": "1114.86"
                                                },
                                                "user_can_checkout": {
                                                    "type": "boolean",
                                                    "example": false,
                                                    "default": true
                                                },
                                                "custom_fields": {
                                                    "type": "array"
                                                },
                                                "available_actions": {
                                                    "type": "object",
                                                    "properties": {
                                                        "checkout": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "checkin": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "clone": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "update": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "delete": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Asset does not exist."
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "text/plain": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": []
            }
        },
        "/departments": {
            "get": {
                "summary": "/departments",
                "description": "List departments",
                "operationId": "departments",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"total\": 44,\n    \"rows\": [\n        {\n            \"id\": 44,\n            \"name\": \"NA Operations\",\n            \"image\": null,\n            \"company\": null,\n            \"manager\": null,\n            \"location\": null,\n            \"users_count\": \"13\",\n            \"created_at\": {\n                \"datetime\": \"2018-10-30 21:07:16\",\n                \"formatted\": \"2018-10-30 09:07 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-10-30 21:07:16\",\n                \"formatted\": \"2018-10-30 09:07 PM\"\n            },\n            \"available_actions\": {\n                \"update\": true,\n                \"delete\": false\n            }\n        },\n        {\n            \"id\": 43,\n            \"name\": \"Developmt &amp; Construction\",\n            \"image\": null,\n            \"company\": null,\n            \"manager\": null,\n            \"location\": null,\n            \"users_count\": \"28\",\n            \"created_at\": {\n                \"datetime\": \"2018-10-30 21:07:07\",\n                \"formatted\": \"2018-10-30 09:07 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-10-30 21:07:07\",\n                \"formatted\": \"2018-10-30 09:07 PM\"\n            },\n            \"available_actions\": {\n                \"update\": true,\n                \"delete\": false\n            }\n        },\n        {\n            \"id\": 42,\n            \"name\": \"Studio S\",\n            \"image\": null,\n            \"company\": null,\n            \"manager\": null,\n            \"location\": null,\n            \"users_count\": \"13\",\n            \"created_at\": {\n                \"datetime\": \"2018-10-30 21:07:06\",\n                \"formatted\": \"2018-10-30 09:07 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-10-30 21:07:06\",\n                \"formatted\": \"2018-10-30 09:07 PM\"\n            },\n            \"available_actions\": {\n                \"update\": true,\n                \"delete\": false\n            }\n        },\n        {\n            \"id\": 41,\n            \"name\": \"Research &amp; Development\",\n            \"image\": null,\n            \"company\": null,\n            \"manager\": null,\n            \"location\": null,\n            \"users_count\": \"4\",\n            \"created_at\": {\n                \"datetime\": \"2018-10-30 21:07:05\",\n                \"formatted\": \"2018-10-30 09:07 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-10-30 21:07:05\",\n                \"formatted\": \"2018-10-30 09:07 PM\"\n            },\n            \"available_actions\": {\n                \"update\": true,\n                \"delete\": false\n            }\n        },\n        {\n            \"id\": 40,\n            \"name\": \"Profit-Building &amp; Local M\",\n            \"image\": null,\n            \"company\": null,\n            \"manager\": null,\n            \"location\": null,\n            \"users_count\": \"5\",\n            \"created_at\": {\n                \"datetime\": \"2018-10-30 21:07:01\",\n                \"formatted\": \"2018-10-30 09:07 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-10-30 21:07:01\",\n                \"formatted\": \"2018-10-30 09:07 PM\"\n            },\n            \"available_actions\": {\n                \"update\": true,\n                \"delete\": false\n            }\n        }\n    ]\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "example": 44,
                                            "default": 0
                                        },
                                        "rows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 44,
                                                        "default": 0
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "NA Operations"
                                                    },
                                                    "image": {},
                                                    "company": {},
                                                    "manager": {},
                                                    "location": {},
                                                    "users_count": {
                                                        "type": "string",
                                                        "example": "13"
                                                    },
                                                    "created_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2018-10-30 21:07:16"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2018-10-30 09:07 PM"
                                                            }
                                                        }
                                                    },
                                                    "updated_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2018-10-30 21:07:16"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2018-10-30 09:07 PM"
                                                            }
                                                        }
                                                    },
                                                    "available_actions": {
                                                        "type": "object",
                                                        "properties": {
                                                            "update": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "delete": {
                                                                "type": "boolean",
                                                                "example": false,
                                                                "default": true
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "summary": "/departments",
                "description": "Create a department",
                "operationId": "departments-1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Department name"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"status\": \"success\",\n    \"messages\": \"Department created successfully.\",\n    \"payload\": {\n        \"name\": \"Human Resources\",\n        \"user_id\": 2,\n        \"manager_id\": null,\n        \"updated_at\": \"2018-10-31 17:13:32\",\n        \"created_at\": \"2018-10-31 17:13:32\",\n        \"id\": 45\n    }\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Department created successfully."
                                        },
                                        "payload": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Human Resources"
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 2,
                                                    "default": 0
                                                },
                                                "manager_id": {},
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2018-10-31 17:13:32"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2018-10-31 17:13:32"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 45,
                                                    "default": 0
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/departments/{id}": {
            "get": {
                "summary": "/departments/:id",
                "description": "View a department",
                "operationId": "departmentsid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"id\": 1,\n    \"name\": \"Human Resources\",\n    \"image\": null,\n    \"company\": null,\n    \"manager\": null,\n    \"location\": {\n        \"id\": 1,\n        \"name\": \"Isobelside\"\n    },\n    \"users_count\": \"\",\n    \"created_at\": {\n        \"datetime\": \"2018-10-27 16:36:40\",\n        \"formatted\": \"2018-10-27 04:36 PM\"\n    },\n    \"updated_at\": {\n        \"datetime\": \"2018-10-27 16:36:40\",\n        \"formatted\": \"2018-10-27 04:36 PM\"\n    },\n    \"available_actions\": {\n        \"update\": true,\n        \"delete\": true\n    }\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1,
                                            "default": 0
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Human Resources"
                                        },
                                        "image": {},
                                        "company": {},
                                        "manager": {},
                                        "location": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Isobelside"
                                                }
                                            }
                                        },
                                        "users_count": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "created_at": {
                                            "type": "object",
                                            "properties": {
                                                "datetime": {
                                                    "type": "string",
                                                    "example": "2018-10-27 16:36:40"
                                                },
                                                "formatted": {
                                                    "type": "string",
                                                    "example": "2018-10-27 04:36 PM"
                                                }
                                            }
                                        },
                                        "updated_at": {
                                            "type": "object",
                                            "properties": {
                                                "datetime": {
                                                    "type": "string",
                                                    "example": "2018-10-27 16:36:40"
                                                },
                                                "formatted": {
                                                    "type": "string",
                                                    "example": "2018-10-27 04:36 PM"
                                                }
                                            }
                                        },
                                        "available_actions": {
                                            "type": "object",
                                            "properties": {
                                                "update": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "default": true
                                                },
                                                "delete": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "default": true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "summary": "/departments/:id",
                "description": "Edit a department",
                "operationId": "departments-edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Department name"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"status\": \"success\",\n    \"messages\": \"Department updated successfully.\",\n    \"payload\": {\n        \"id\": 1,\n        \"name\": \"Human Resources\",\n        \"user_id\": 1,\n        \"company_id\": null,\n        \"location_id\": 1,\n        \"manager_id\": null,\n        \"notes\": null,\n        \"created_at\": \"2018-10-27 16:36:40\",\n        \"updated_at\": \"2018-10-27 16:36:40\",\n        \"deleted_at\": null,\n        \"image\": null\n    }\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Department updated successfully."
                                        },
                                        "payload": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Human Resources"
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "default": 0
                                                },
                                                "company_id": {},
                                                "location_id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "default": 0
                                                },
                                                "manager_id": {},
                                                "notes": {},
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2018-10-27 16:36:40"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2018-10-27 16:36:40"
                                                },
                                                "deleted_at": {},
                                                "image": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "summary": "/departments/:id",
                "description": "Edit a department",
                "operationId": "departmentsid-1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Department name"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"status\": \"success\",\n    \"messages\": \"Department updated successfully.\",\n    \"payload\": {\n        \"id\": 1,\n        \"name\": \"Human Resources\",\n        \"user_id\": 1,\n        \"company_id\": null,\n        \"location_id\": 1,\n        \"manager_id\": null,\n        \"notes\": null,\n        \"created_at\": \"2018-10-27 16:36:40\",\n        \"updated_at\": \"2018-10-27 16:36:40\",\n        \"deleted_at\": null,\n        \"image\": null\n    }\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Department updated successfully."
                                        },
                                        "payload": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Human Resources"
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "default": 0
                                                },
                                                "company_id": {},
                                                "location_id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "default": 0
                                                },
                                                "manager_id": {},
                                                "notes": {},
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2018-10-27 16:36:40"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2018-10-27 16:36:40"
                                                },
                                                "deleted_at": {},
                                                "image": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "summary": "/departments/:id",
                "description": "Delete a department",
                "operationId": "departmentsid-2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Department ID",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 3,\n  \"name\": \"Rohan-Bergstrom\",\n  \"created_at\": \"2017-01-11 03:31:25\",\n  \"updated_at\": \"2017-01-11 03:31:25\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Company not found\"\n}"
                                    },
                                    "Cannot Delete": {
                                        "value": "{\n    \"status\": \"error\",\n    \"messages\": \"This department is currently associated with at least one user and cannot be deleted. Please update your users to no longer reference this department and try again. \",\n    \"payload\": null\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Rohan-Bergstrom"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2017-01-11 03:31:25"
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Company not found"
                                                }
                                            }
                                        },
                                        {
                                            "title": "Cannot Delete",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "This department is currently associated with at least one user and cannot be deleted. Please update your users to no longer reference this department and try again. "
                                                },
                                                "payload": {}
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/users/{id}/licenses": {
            "get": {
                "summary": "/users/:id/licenses",
                "description": "Get a list of licenses checked out to the user",
                "operationId": "usersidlicenses",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"total\": 1,\n    \"rows\": [\n        {\n            \"id\": 2,\n            \"name\": \"Acrobat\",\n            \"company\": null,\n            \"manufacturer\": {\n                \"id\": 9,\n                \"name\": \"Adobe\"\n            },\n            \"product_key\": \"935d7ada-f202-3a50-bf26-e6955b9ef675\",\n            \"order_number\": \"13745264\",\n            \"purchase_order\": \"\",\n            \"purchase_date\": {\n                \"date\": \"2018-06-27\",\n                \"formatted\": \"2018-06-27\"\n            },\n            \"purchase_cost\": \"29.99\",\n            \"notes\": \"Created by DB seeder\",\n            \"expiration_date\": {\n                \"date\": \"2019-07-01\",\n                \"formatted\": \"2019-07-01\"\n            },\n            \"seats\": 10,\n            \"free_seats_count\": 0,\n            \"license_name\": \"Sheridan Wilderman\",\n            \"license_email\": \"timothy30@example.com\",\n            \"maintained\": false,\n            \"supplier\": {\n                \"id\": 1,\n                \"name\": \"Schimmel-Keebler\"\n            },\n            \"category\": {\n                \"id\": 14,\n                \"name\": \"Graphics Software\"\n            },\n            \"created_at\": {\n                \"datetime\": \"2018-09-29 22:43:02\",\n                \"formatted\": \"2018-09-29 22:43\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2019-01-21 14:24:06\",\n                \"formatted\": \"2019-01-21 14:24\"\n            },\n            \"user_can_checkout\": false,\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": true,\n                \"clone\": true,\n                \"update\": true,\n                \"delete\": true\n            }\n        }\n    ]\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "example": 1,
                                            "default": 0
                                        },
                                        "rows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 2,
                                                        "default": 0
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Acrobat"
                                                    },
                                                    "company": {},
                                                    "manufacturer": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 9,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Adobe"
                                                            }
                                                        }
                                                    },
                                                    "product_key": {
                                                        "type": "string",
                                                        "example": "935d7ada-f202-3a50-bf26-e6955b9ef675"
                                                    },
                                                    "order_number": {
                                                        "type": "string",
                                                        "example": "13745264"
                                                    },
                                                    "purchase_order": {
                                                        "type": "string",
                                                        "example": ""
                                                    },
                                                    "purchase_date": {
                                                        "type": "object",
                                                        "properties": {
                                                            "date": {
                                                                "type": "string",
                                                                "example": "2018-06-27"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2018-06-27"
                                                            }
                                                        }
                                                    },
                                                    "purchase_cost": {
                                                        "type": "string",
                                                        "example": "29.99"
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "example": "Created by DB seeder"
                                                    },
                                                    "expiration_date": {
                                                        "type": "object",
                                                        "properties": {
                                                            "date": {
                                                                "type": "string",
                                                                "example": "2019-07-01"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2019-07-01"
                                                            }
                                                        }
                                                    },
                                                    "seats": {
                                                        "type": "integer",
                                                        "example": 10,
                                                        "default": 0
                                                    },
                                                    "free_seats_count": {
                                                        "type": "integer",
                                                        "example": 0,
                                                        "default": 0
                                                    },
                                                    "license_name": {
                                                        "type": "string",
                                                        "example": "Sheridan Wilderman"
                                                    },
                                                    "license_email": {
                                                        "type": "string",
                                                        "example": "timothy30@example.com"
                                                    },
                                                    "maintained": {
                                                        "type": "boolean",
                                                        "example": false,
                                                        "default": true
                                                    },
                                                    "supplier": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Schimmel-Keebler"
                                                            }
                                                        }
                                                    },
                                                    "category": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 14,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Graphics Software"
                                                            }
                                                        }
                                                    },
                                                    "created_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2018-09-29 22:43:02"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2018-09-29 22:43"
                                                            }
                                                        }
                                                    },
                                                    "updated_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2019-01-21 14:24:06"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2019-01-21 14:24"
                                                            }
                                                        }
                                                    },
                                                    "user_can_checkout": {
                                                        "type": "boolean",
                                                        "example": false,
                                                        "default": true
                                                    },
                                                    "available_actions": {
                                                        "type": "object",
                                                        "properties": {
                                                            "checkout": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "checkin": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "clone": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "update": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "delete": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/hardware/{id}/licenses": {
            "get": {
                "summary": "/hardware/:id/licenses",
                "description": "Get the licenses checked out to an asset",
                "operationId": "hardwareidlicenses",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id (not the asset tag) of the asset you'd like to query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"total\": 1,\n    \"rows\": [\n        {\n            \"id\": 2,\n            \"name\": \"Acrobat\",\n            \"company\": null,\n            \"manufacturer\": {\n                \"id\": 9,\n                \"name\": \"Adobe\"\n            },\n            \"product_key\": \"d344600b-276c-3c08-9e40-633013b6bd17\",\n            \"order_number\": \"4448995\",\n            \"purchase_order\": \"\",\n            \"purchase_date\": {\n                \"date\": \"2018-07-04\",\n                \"formatted\": \"2018-07-04\"\n            },\n            \"purchase_cost\": \"29.99\",\n            \"notes\": \"Created by DB seeder\",\n            \"expiration_date\": {\n                \"date\": \"2021-03-23\",\n                \"formatted\": \"2021-03-23\"\n            },\n            \"seats\": 10,\n            \"free_seats_count\": 0,\n            \"license_name\": \"Mr. Alvah Shanahan PhD\",\n            \"license_email\": \"stracke.serena@example.net\",\n            \"maintained\": false,\n            \"supplier\": {\n                \"id\": 1,\n                \"name\": \"Krajcik and Sons\"\n            },\n            \"category\": {\n                \"id\": 14,\n                \"name\": \"Graphics Software\"\n            },\n            \"created_at\": {\n                \"datetime\": \"2018-12-05 15:38:02\",\n                \"formatted\": \"2018-12-05 03:38 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-12-05 15:38:02\",\n                \"formatted\": \"2018-12-05 03:38 PM\"\n            },\n            \"user_can_checkout\": false,\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": true,\n                \"clone\": true,\n                \"update\": true,\n                \"delete\": true\n            }\n        }\n    ]\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Asset does not exist.\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "default": 0
                                                },
                                                "rows": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 2,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Acrobat"
                                                            },
                                                            "company": {},
                                                            "manufacturer": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 9,
                                                                        "default": 0
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Adobe"
                                                                    }
                                                                }
                                                            },
                                                            "product_key": {
                                                                "type": "string",
                                                                "example": "d344600b-276c-3c08-9e40-633013b6bd17"
                                                            },
                                                            "order_number": {
                                                                "type": "string",
                                                                "example": "4448995"
                                                            },
                                                            "purchase_order": {
                                                                "type": "string",
                                                                "example": ""
                                                            },
                                                            "purchase_date": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "date": {
                                                                        "type": "string",
                                                                        "example": "2018-07-04"
                                                                    },
                                                                    "formatted": {
                                                                        "type": "string",
                                                                        "example": "2018-07-04"
                                                                    }
                                                                }
                                                            },
                                                            "purchase_cost": {
                                                                "type": "string",
                                                                "example": "29.99"
                                                            },
                                                            "notes": {
                                                                "type": "string",
                                                                "example": "Created by DB seeder"
                                                            },
                                                            "expiration_date": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "date": {
                                                                        "type": "string",
                                                                        "example": "2021-03-23"
                                                                    },
                                                                    "formatted": {
                                                                        "type": "string",
                                                                        "example": "2021-03-23"
                                                                    }
                                                                }
                                                            },
                                                            "seats": {
                                                                "type": "integer",
                                                                "example": 10,
                                                                "default": 0
                                                            },
                                                            "free_seats_count": {
                                                                "type": "integer",
                                                                "example": 0,
                                                                "default": 0
                                                            },
                                                            "license_name": {
                                                                "type": "string",
                                                                "example": "Mr. Alvah Shanahan PhD"
                                                            },
                                                            "license_email": {
                                                                "type": "string",
                                                                "example": "stracke.serena@example.net"
                                                            },
                                                            "maintained": {
                                                                "type": "boolean",
                                                                "example": false,
                                                                "default": true
                                                            },
                                                            "supplier": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 1,
                                                                        "default": 0
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Krajcik and Sons"
                                                                    }
                                                                }
                                                            },
                                                            "category": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 14,
                                                                        "default": 0
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Graphics Software"
                                                                    }
                                                                }
                                                            },
                                                            "created_at": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "datetime": {
                                                                        "type": "string",
                                                                        "example": "2018-12-05 15:38:02"
                                                                    },
                                                                    "formatted": {
                                                                        "type": "string",
                                                                        "example": "2018-12-05 03:38 PM"
                                                                    }
                                                                }
                                                            },
                                                            "updated_at": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "datetime": {
                                                                        "type": "string",
                                                                        "example": "2018-12-05 15:38:02"
                                                                    },
                                                                    "formatted": {
                                                                        "type": "string",
                                                                        "example": "2018-12-05 03:38 PM"
                                                                    }
                                                                }
                                                            },
                                                            "user_can_checkout": {
                                                                "type": "boolean",
                                                                "example": false,
                                                                "default": true
                                                            },
                                                            "available_actions": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "checkout": {
                                                                        "type": "boolean",
                                                                        "example": true,
                                                                        "default": true
                                                                    },
                                                                    "checkin": {
                                                                        "type": "boolean",
                                                                        "example": true,
                                                                        "default": true
                                                                    },
                                                                    "clone": {
                                                                        "type": "boolean",
                                                                        "example": true,
                                                                        "default": true
                                                                    },
                                                                    "update": {
                                                                        "type": "boolean",
                                                                        "example": true,
                                                                        "default": true
                                                                    },
                                                                    "delete": {
                                                                        "type": "boolean",
                                                                        "example": true,
                                                                        "default": true
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Asset does not exist."
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "text/plain": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": []
            }
        },
        "/users/{id}/accessories": {
            "get": {
                "summary": "/users/:id/accessories",
                "description": "Get a list of accessories checked out to the user",
                "operationId": "usersidaccessories",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"total\": 1,\n    \"rows\": [\n        {\n            \"id\": 1,\n            \"name\": \"USB Keyboard\",\n            \"company\": null,\n            \"manufacturer\": {\n                \"id\": 1,\n                \"name\": \"Apple\"\n            },\n            \"supplier\": {\n                \"id\": 2,\n                \"name\": \"Block and Sons\"\n            },\n            \"model_number\": \"41230142\",\n            \"category\": {\n                \"id\": 8,\n                \"name\": \"Keyboards\"\n            },\n            \"location\": {\n                \"id\": 4,\n                \"name\": \"East Caseyhaven\"\n            },\n            \"notes\": null,\n            \"qty\": 15,\n            \"purchase_date\": null,\n            \"purchase_cost\": null,\n            \"order_number\": null,\n            \"min_qty\": 2,\n            \"remaining_qty\": 14,\n            \"image\": \"https://snipe-it.local:8890/uploads/accessories/usb-keyboard.jpg\",\n            \"created_at\": {\n                \"datetime\": \"2018-12-05 15:37:21\",\n                \"formatted\": \"2018-12-05 03:37 PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2018-12-05 15:37:21\",\n                \"formatted\": \"2018-12-05 03:37 PM\"\n            },\n            \"available_actions\": {\n                \"checkout\": true,\n                \"checkin\": false,\n                \"update\": true,\n                \"delete\": true\n            },\n            \"user_can_checkout\": true\n        }\n    ]\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "example": 1,
                                            "default": 0
                                        },
                                        "rows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1,
                                                        "default": 0
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "USB Keyboard"
                                                    },
                                                    "company": {},
                                                    "manufacturer": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Apple"
                                                            }
                                                        }
                                                    },
                                                    "supplier": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 2,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Block and Sons"
                                                            }
                                                        }
                                                    },
                                                    "model_number": {
                                                        "type": "string",
                                                        "example": "41230142"
                                                    },
                                                    "category": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 8,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Keyboards"
                                                            }
                                                        }
                                                    },
                                                    "location": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 4,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "East Caseyhaven"
                                                            }
                                                        }
                                                    },
                                                    "notes": {},
                                                    "qty": {
                                                        "type": "integer",
                                                        "example": 15,
                                                        "default": 0
                                                    },
                                                    "purchase_date": {},
                                                    "purchase_cost": {},
                                                    "order_number": {},
                                                    "min_qty": {
                                                        "type": "integer",
                                                        "example": 2,
                                                        "default": 0
                                                    },
                                                    "remaining_qty": {
                                                        "type": "integer",
                                                        "example": 14,
                                                        "default": 0
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "https://snipe-it.local:8890/uploads/accessories/usb-keyboard.jpg"
                                                    },
                                                    "created_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2018-12-05 15:37:21"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2018-12-05 03:37 PM"
                                                            }
                                                        }
                                                    },
                                                    "updated_at": {
                                                        "type": "object",
                                                        "properties": {
                                                            "datetime": {
                                                                "type": "string",
                                                                "example": "2018-12-05 15:37:21"
                                                            },
                                                            "formatted": {
                                                                "type": "string",
                                                                "example": "2018-12-05 03:37 PM"
                                                            }
                                                        }
                                                    },
                                                    "available_actions": {
                                                        "type": "object",
                                                        "properties": {
                                                            "checkout": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "checkin": {
                                                                "type": "boolean",
                                                                "example": false,
                                                                "default": true
                                                            },
                                                            "update": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            },
                                                            "delete": {
                                                                "type": "boolean",
                                                                "example": true,
                                                                "default": true
                                                            }
                                                        }
                                                    },
                                                    "user_can_checkout": {
                                                        "type": "boolean",
                                                        "example": true,
                                                        "default": true
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/hardware/audit/due": {
            "get": {
                "summary": "/hardware/audit/due",
                "description": "Retrieve a list of assets that are due for auditing soon.",
                "operationId": "hardwareauditdue",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 1,\n  \"name\": \"\",\n  \"asset_tag\": \"389658657\",\n  \"serial\": \"b9b47837-13d9-33d3-a7d3-815a8503be44\",\n  \"model\": {\n    \"id\": 1,\n    \"name\": \"Macbook Pro 13&quot;\"\n  },\n  \"model_number\": \"4929525240061\",\n  \"status_label\": {\n    \"id\": 1,\n    \"name\": \"Deployed\",\n    \"status_meta\": \"deployed\"\n  },\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Laptops\"\n  },\n  \"manufacturer\": {\n    \"id\": 1,\n    \"name\": \"Apple\"\n  },\n  \"supplier\": {\n    \"id\": 1,\n    \"name\": \"Harvey-Hettinger\"\n  },\n  \"notes\": \"Created by DB seeder\",\n  \"order_number\": \"4243135\",\n  \"company\": null,\n  \"location\": {\n    \"id\": 3,\n    \"name\": \"Tonystad\"\n  },\n  \"rtd_location\": {\n    \"id\": 1,\n    \"name\": \"Lake Catharineburgh\"\n  },\n  \"image\": null,\n  \"assigned_to\": {\n    \"id\": 1,\n    \"username\": \"admin\",\n    \"name\": \"Admin User\",\n    \"first_name\": \"Admin\",\n    \"last_name\": \"User\",\n    \"employee_number\": \"19135\",\n    \"type\": \"user\"\n  },\n  \"warranty\": null,\n  \"warranty_expires\": null,\n  \"created_at\": {\n    \"datetime\": \"2017-10-18 21:00:08\",\n    \"formatted\": \"Wed Oct 18, 2017 9:00PM\"\n  },\n  \"updated_at\": {\n    \"datetime\": \"2017-10-19 07:57:37\",\n    \"formatted\": \"Thu Oct 19, 2017 7:57AM\"\n  },\n  \"purchase_date\": {\n    \"date\": \"2016-12-03\",\n    \"formatted\": \"Sat Dec 03, 2016\"\n  },\n  \"last_checkout\": {\n    \"datetime\": \"2017-10-05 08:30:20\",\n    \"formatted\": \"Thu Oct 05, 2017 8:30AM\"\n  },\n  \"expected_checkin\": {\n    \"date\": \"2017-11-03\",\n    \"formatted\": \"Fri Nov 03, 2017\"\n  },\n  \"purchase_cost\": \"1114.86\",\n  \"user_can_checkout\": false,\n  \"custom_fields\": [],\n  \"available_actions\": {\n    \"checkout\": true,\n    \"checkin\": true,\n    \"clone\": true,\n    \"update\": true,\n    \"delete\": true\n  }\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Asset does not exist.\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "asset_tag": {
                                                    "type": "string",
                                                    "example": "389658657"
                                                },
                                                "serial": {
                                                    "type": "string",
                                                    "example": "b9b47837-13d9-33d3-a7d3-815a8503be44"
                                                },
                                                "model": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Macbook Pro 13&quot;"
                                                        }
                                                    }
                                                },
                                                "model_number": {
                                                    "type": "string",
                                                    "example": "4929525240061"
                                                },
                                                "status_label": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Deployed"
                                                        },
                                                        "status_meta": {
                                                            "type": "string",
                                                            "example": "deployed"
                                                        }
                                                    }
                                                },
                                                "category": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Laptops"
                                                        }
                                                    }
                                                },
                                                "manufacturer": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Apple"
                                                        }
                                                    }
                                                },
                                                "supplier": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Harvey-Hettinger"
                                                        }
                                                    }
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "example": "Created by DB seeder"
                                                },
                                                "order_number": {
                                                    "type": "string",
                                                    "example": "4243135"
                                                },
                                                "company": {},
                                                "location": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 3,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Tonystad"
                                                        }
                                                    }
                                                },
                                                "rtd_location": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Lake Catharineburgh"
                                                        }
                                                    }
                                                },
                                                "image": {},
                                                "assigned_to": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "example": "admin"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Admin User"
                                                        },
                                                        "first_name": {
                                                            "type": "string",
                                                            "example": "Admin"
                                                        },
                                                        "last_name": {
                                                            "type": "string",
                                                            "example": "User"
                                                        },
                                                        "employee_number": {
                                                            "type": "string",
                                                            "example": "19135"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "example": "user"
                                                        }
                                                    }
                                                },
                                                "warranty": {},
                                                "warranty_expires": {},
                                                "created_at": {
                                                    "type": "object",
                                                    "properties": {
                                                        "datetime": {
                                                            "type": "string",
                                                            "example": "2017-10-18 21:00:08"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Wed Oct 18, 2017 9:00PM"
                                                        }
                                                    }
                                                },
                                                "updated_at": {
                                                    "type": "object",
                                                    "properties": {
                                                        "datetime": {
                                                            "type": "string",
                                                            "example": "2017-10-19 07:57:37"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Thu Oct 19, 2017 7:57AM"
                                                        }
                                                    }
                                                },
                                                "purchase_date": {
                                                    "type": "object",
                                                    "properties": {
                                                        "date": {
                                                            "type": "string",
                                                            "example": "2016-12-03"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Sat Dec 03, 2016"
                                                        }
                                                    }
                                                },
                                                "last_checkout": {
                                                    "type": "object",
                                                    "properties": {
                                                        "datetime": {
                                                            "type": "string",
                                                            "example": "2017-10-05 08:30:20"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Thu Oct 05, 2017 8:30AM"
                                                        }
                                                    }
                                                },
                                                "expected_checkin": {
                                                    "type": "object",
                                                    "properties": {
                                                        "date": {
                                                            "type": "string",
                                                            "example": "2017-11-03"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Fri Nov 03, 2017"
                                                        }
                                                    }
                                                },
                                                "purchase_cost": {
                                                    "type": "string",
                                                    "example": "1114.86"
                                                },
                                                "user_can_checkout": {
                                                    "type": "boolean",
                                                    "example": false,
                                                    "default": true
                                                },
                                                "custom_fields": {
                                                    "type": "array"
                                                },
                                                "available_actions": {
                                                    "type": "object",
                                                    "properties": {
                                                        "checkout": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "checkin": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "clone": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "update": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "delete": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Asset does not exist."
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "text/plain": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": []
            }
        },
        "/hardware/audit/overdue": {
            "get": {
                "summary": "/hardware/audit/overdue",
                "description": "Retrieve a list of assets that are overdue for auditing.",
                "operationId": "hardwareauditoverdue",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"id\": 1,\n  \"name\": \"\",\n  \"asset_tag\": \"389658657\",\n  \"serial\": \"b9b47837-13d9-33d3-a7d3-815a8503be44\",\n  \"model\": {\n    \"id\": 1,\n    \"name\": \"Macbook Pro 13&quot;\"\n  },\n  \"model_number\": \"4929525240061\",\n  \"status_label\": {\n    \"id\": 1,\n    \"name\": \"Deployed\",\n    \"status_meta\": \"deployed\"\n  },\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Laptops\"\n  },\n  \"manufacturer\": {\n    \"id\": 1,\n    \"name\": \"Apple\"\n  },\n  \"supplier\": {\n    \"id\": 1,\n    \"name\": \"Harvey-Hettinger\"\n  },\n  \"notes\": \"Created by DB seeder\",\n  \"order_number\": \"4243135\",\n  \"company\": null,\n  \"location\": {\n    \"id\": 3,\n    \"name\": \"Tonystad\"\n  },\n  \"rtd_location\": {\n    \"id\": 1,\n    \"name\": \"Lake Catharineburgh\"\n  },\n  \"image\": null,\n  \"assigned_to\": {\n    \"id\": 1,\n    \"username\": \"admin\",\n    \"name\": \"Admin User\",\n    \"first_name\": \"Admin\",\n    \"last_name\": \"User\",\n    \"employee_number\": \"19135\",\n    \"type\": \"user\"\n  },\n  \"warranty\": null,\n  \"warranty_expires\": null,\n  \"created_at\": {\n    \"datetime\": \"2017-10-18 21:00:08\",\n    \"formatted\": \"Wed Oct 18, 2017 9:00PM\"\n  },\n  \"updated_at\": {\n    \"datetime\": \"2017-10-19 07:57:37\",\n    \"formatted\": \"Thu Oct 19, 2017 7:57AM\"\n  },\n  \"purchase_date\": {\n    \"date\": \"2016-12-03\",\n    \"formatted\": \"Sat Dec 03, 2016\"\n  },\n  \"last_checkout\": {\n    \"datetime\": \"2017-10-05 08:30:20\",\n    \"formatted\": \"Thu Oct 05, 2017 8:30AM\"\n  },\n  \"expected_checkin\": {\n    \"date\": \"2017-11-03\",\n    \"formatted\": \"Fri Nov 03, 2017\"\n  },\n  \"purchase_cost\": \"1114.86\",\n  \"user_can_checkout\": false,\n  \"custom_fields\": [],\n  \"available_actions\": {\n    \"checkout\": true,\n    \"checkin\": true,\n    \"clone\": true,\n    \"update\": true,\n    \"delete\": true\n  }\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Asset does not exist.\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "default": 0
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "asset_tag": {
                                                    "type": "string",
                                                    "example": "389658657"
                                                },
                                                "serial": {
                                                    "type": "string",
                                                    "example": "b9b47837-13d9-33d3-a7d3-815a8503be44"
                                                },
                                                "model": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Macbook Pro 13&quot;"
                                                        }
                                                    }
                                                },
                                                "model_number": {
                                                    "type": "string",
                                                    "example": "4929525240061"
                                                },
                                                "status_label": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Deployed"
                                                        },
                                                        "status_meta": {
                                                            "type": "string",
                                                            "example": "deployed"
                                                        }
                                                    }
                                                },
                                                "category": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Laptops"
                                                        }
                                                    }
                                                },
                                                "manufacturer": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Apple"
                                                        }
                                                    }
                                                },
                                                "supplier": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Harvey-Hettinger"
                                                        }
                                                    }
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "example": "Created by DB seeder"
                                                },
                                                "order_number": {
                                                    "type": "string",
                                                    "example": "4243135"
                                                },
                                                "company": {},
                                                "location": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 3,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Tonystad"
                                                        }
                                                    }
                                                },
                                                "rtd_location": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Lake Catharineburgh"
                                                        }
                                                    }
                                                },
                                                "image": {},
                                                "assigned_to": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1,
                                                            "default": 0
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "example": "admin"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Admin User"
                                                        },
                                                        "first_name": {
                                                            "type": "string",
                                                            "example": "Admin"
                                                        },
                                                        "last_name": {
                                                            "type": "string",
                                                            "example": "User"
                                                        },
                                                        "employee_number": {
                                                            "type": "string",
                                                            "example": "19135"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "example": "user"
                                                        }
                                                    }
                                                },
                                                "warranty": {},
                                                "warranty_expires": {},
                                                "created_at": {
                                                    "type": "object",
                                                    "properties": {
                                                        "datetime": {
                                                            "type": "string",
                                                            "example": "2017-10-18 21:00:08"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Wed Oct 18, 2017 9:00PM"
                                                        }
                                                    }
                                                },
                                                "updated_at": {
                                                    "type": "object",
                                                    "properties": {
                                                        "datetime": {
                                                            "type": "string",
                                                            "example": "2017-10-19 07:57:37"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Thu Oct 19, 2017 7:57AM"
                                                        }
                                                    }
                                                },
                                                "purchase_date": {
                                                    "type": "object",
                                                    "properties": {
                                                        "date": {
                                                            "type": "string",
                                                            "example": "2016-12-03"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Sat Dec 03, 2016"
                                                        }
                                                    }
                                                },
                                                "last_checkout": {
                                                    "type": "object",
                                                    "properties": {
                                                        "datetime": {
                                                            "type": "string",
                                                            "example": "2017-10-05 08:30:20"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Thu Oct 05, 2017 8:30AM"
                                                        }
                                                    }
                                                },
                                                "expected_checkin": {
                                                    "type": "object",
                                                    "properties": {
                                                        "date": {
                                                            "type": "string",
                                                            "example": "2017-11-03"
                                                        },
                                                        "formatted": {
                                                            "type": "string",
                                                            "example": "Fri Nov 03, 2017"
                                                        }
                                                    }
                                                },
                                                "purchase_cost": {
                                                    "type": "string",
                                                    "example": "1114.86"
                                                },
                                                "user_can_checkout": {
                                                    "type": "boolean",
                                                    "example": false,
                                                    "default": true
                                                },
                                                "custom_fields": {
                                                    "type": "array"
                                                },
                                                "available_actions": {
                                                    "type": "object",
                                                    "properties": {
                                                        "checkout": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "checkin": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "clone": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "update": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        },
                                                        "delete": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "default": true
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Asset does not exist."
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "text/plain": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": []
            }
        },
        "/maintenances/{id}": {
            "delete": {
                "summary": "/maintenances/:id",
                "description": "Delete a maintenance",
                "operationId": "maintenancesid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Maintenance ID",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "deprecated": false
            }
        },
        "/accessories/{id}/checkedout": {
            "get": {
                "summary": "/accessories/:id/checkedout",
                "description": "Show which users a specific accessory has been checked out to",
                "operationId": "accessoriesidcheckedout",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/accessories/{id}/checkout": {
            "post": {
                "summary": "/accessories/:id/checkout",
                "description": "Check an accessory out to a user",
                "operationId": "accessoriesidcheckedout-1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "assigned_to"
                                ],
                                "properties": {
                                    "assigned_to": {
                                        "type": "integer",
                                        "description": "User ID of a user to check an accessory out to",
                                        "format": "int32"
                                    },
                                    "note": {
                                        "type": "string",
                                        "description": "Note comment on the checkout"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/consumables/{id}/checkout": {
            "post": {
                "summary": "/consumables/:id/checkout",
                "description": "Check an accessory out to a user",
                "operationId": "consumablesidcheckout",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "assigned_to": {
                                        "type": "integer",
                                        "description": "User ID of a user to check an accessory out to",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/consumables/{id}/checkin": {
            "post": {
                "summary": "/consumables/:id/checkin",
                "description": "Checkin a consumable from a user",
                "operationId": "consumablesidcheckin",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "This is the ID of the consumable+user relationships in the consumables_users table",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/accessories/{id}/checkin": {
            "post": {
                "summary": "/accessories/:id/checkin",
                "description": "Checkin an accessory from a user",
                "operationId": "accessoriesidcheckin",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "This is the ID of the accessory+user relationships in the accessories_users table",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/components/{id}/assets": {
            "get": {
                "summary": "/components/:id/assets",
                "description": "Returns a list of which assets a component has been checked out to",
                "operationId": "componentsidassets",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/fields/{id}": {
            "put": {
                "summary": "/fields/:id",
                "description": "Update a custom field",
                "operationId": "update-fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Custom field ID",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "element"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Model name"
                                    },
                                    "element": {
                                        "type": "string",
                                        "description": "The type of form field you want to display",
                                        "enum": [
                                            "text",
                                            "textarea",
                                            "checkbox",
                                            "radio",
                                            "listbox"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": ""
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Fieldset not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Fieldset not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "summary": "/fields/:id",
                "description": "Delete a custom field",
                "operationId": "fieldsid-1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Custom field ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"status\": \"success\",\n    \"messages\": \"The field was deleted successfully.\"\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Fieldset not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "success"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "The field was deleted successfully."
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Fieldset not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "get": {
                "summary": "/fields/:id",
                "description": "Return field info by id",
                "operationId": "fieldsid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the custom field",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": ""
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Fieldset not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Fieldset not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "summary": "/fields/:id",
                "description": "Update a custom field",
                "operationId": "fieldsid-2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Custom field ID",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Model name"
                                    },
                                    "element": {
                                        "type": "string",
                                        "description": "The type of form field you want to display",
                                        "enum": [
                                            "text",
                                            "textarea",
                                            "checkbox",
                                            "radio",
                                            "listbox"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": ""
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Fieldset not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Fieldset not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/fields": {
            "post": {
                "summary": "/fields",
                "description": "Create a custom field",
                "operationId": "fields-2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "element"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The field's name, which is also the form label"
                                    },
                                    "element": {
                                        "type": "string",
                                        "description": "Form field type that should be displayed.",
                                        "enum": [
                                            "text",
                                            "textarea",
                                            "checkbox",
                                            "radio",
                                            "listbox"
                                        ]
                                    },
                                    "field_values": {
                                        "type": "string",
                                        "description": "In the case of list boxes, etc, this should be a list of the options available"
                                    },
                                    "show_in_email": {
                                        "type": "boolean",
                                        "description": "Whether or not to show the custom field in email notifications",
                                        "default": false
                                    },
                                    "format": {
                                        "type": "string",
                                        "description": "Validation constraints on this field"
                                    },
                                    "field_encrypted": {
                                        "type": "boolean",
                                        "description": "Whether the field should be encrypted. (This can cause issues if you change it after the field was created.)",
                                        "default": false
                                    },
                                    "help_text": {
                                        "type": "string",
                                        "description": "Any additional text you wish to display under the new form field to make it clearer what the gauges should be."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/fields/{id}/associate": {
            "post": {
                "summary": "/fields/:id/associate",
                "description": "Associate a custom field with a custom fieldset",
                "operationId": "fieldsidassociate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Custom field ID",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "fieldset_id"
                                ],
                                "properties": {
                                    "fieldset_id": {
                                        "type": "integer",
                                        "description": "Fieldset ID",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": ""
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Fieldset not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Fieldset not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/fieldsets/{id}/fields": {
            "get": {
                "summary": "/fieldsets/:id/fields",
                "description": "Return list of associated fields within a fieldset",
                "operationId": "fieldsetsidfields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID number of the fieldset",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n    \"total\": 3,\n    \"rows\": [\n        {\n            \"id\": 3,\n            \"name\": \"RAM\",\n            \"db_column_name\": \"_snipeit_ram_3\",\n            \"format\": \"ANY\",\n            \"field_values\": null,\n            \"field_values_array\": null,\n            \"type\": \"text\",\n            \"required\": 0,\n            \"created_at\": {\n                \"datetime\": \"2020-11-27 21:05:14\",\n                \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2020-11-27 21:05:14\",\n                \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n            }\n        },\n        {\n            \"id\": 4,\n            \"name\": \"CPU\",\n            \"db_column_name\": \"_snipeit_cpu_4\",\n            \"format\": \"ANY\",\n            \"field_values\": null,\n            \"field_values_array\": null,\n            \"type\": \"text\",\n            \"required\": 0,\n            \"created_at\": {\n                \"datetime\": \"2020-11-27 21:05:14\",\n                \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2020-11-27 21:05:14\",\n                \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n            }\n        },\n        {\n            \"id\": 5,\n            \"name\": \"MAC Address\",\n            \"db_column_name\": \"_snipeit_mac_address_5\",\n            \"format\": \"regex:/^([0-9a-fA-F]{2}[:-]){5}[0-9a-fA-F]{2}$/\",\n            \"field_values\": null,\n            \"field_values_array\": null,\n            \"type\": \"text\",\n            \"required\": 0,\n            \"created_at\": {\n                \"datetime\": \"2020-11-27 21:05:14\",\n                \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n            },\n            \"updated_at\": {\n                \"datetime\": \"2020-11-27 21:05:14\",\n                \"formatted\": \"Fri Nov 27, 2020 9:05PM\"\n            }\n        }\n    ]\n}"
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Fieldset not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "default": 0
                                                },
                                                "rows": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 3,
                                                                "default": 0
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "RAM"
                                                            },
                                                            "db_column_name": {
                                                                "type": "string",
                                                                "example": "_snipeit_ram_3"
                                                            },
                                                            "format": {
                                                                "type": "string",
                                                                "example": "ANY"
                                                            },
                                                            "field_values": {},
                                                            "field_values_array": {},
                                                            "type": {
                                                                "type": "string",
                                                                "example": "text"
                                                            },
                                                            "required": {
                                                                "type": "integer",
                                                                "example": 0,
                                                                "default": 0
                                                            },
                                                            "created_at": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "datetime": {
                                                                        "type": "string",
                                                                        "example": "2020-11-27 21:05:14"
                                                                    },
                                                                    "formatted": {
                                                                        "type": "string",
                                                                        "example": "Fri Nov 27, 2020 9:05PM"
                                                                    }
                                                                }
                                                            },
                                                            "updated_at": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "datetime": {
                                                                        "type": "string",
                                                                        "example": "2020-11-27 21:05:14"
                                                                    },
                                                                    "formatted": {
                                                                        "type": "string",
                                                                        "example": "Fri Nov 27, 2020 9:05PM"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "title": "Not Found",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "example": "Fieldset not found"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/users/me": {
            "get": {
                "summary": "/users/me",
                "description": "Get details on the current user accessing the API",
                "operationId": "usersme",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": ""
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/fields/{id}/disassociate": {
            "post": {
                "summary": "/fields/:id/disassociate",
                "description": "Removed the association of a custom field with a fieldset",
                "operationId": "fieldsiddisassociate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Custom field ID",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "fieldset_id"
                                ],
                                "properties": {
                                    "fieldset_id": {
                                        "type": "integer",
                                        "description": "Fieldset ID",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": ""
                                    },
                                    "Not Found": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Fieldset not found\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Fieldset not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"message\": \"Unauthorized.\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{\n  \"status\": \"error\",\n  \"messages\": \"Method not allowed\"\n}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "messages": {
                                            "type": "string",
                                            "example": "Method not allowed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/components/{id}/checkin": {
            "post": {
                "summary": "/components/:id/checkin",
                "description": "Check a component back in from an asset",
                "operationId": "componentsidcheckin",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the record in the components_assets *join* record",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "checkin_qty"
                                ],
                                "properties": {
                                    "checkin_qty": {
                                        "type": "integer",
                                        "description": "Quantity of the components to check in from the asset",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/components/{id}/checkout": {
            "post": {
                "summary": "/components/:id/checkout",
                "description": "Check an accessory out to an asset",
                "operationId": "componentsidcheckout",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the component to check out",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "assigned_to",
                                    "assigned_qty"
                                ],
                                "properties": {
                                    "assigned_to": {
                                        "type": "integer",
                                        "description": "User ID of an asset to check a component out to",
                                        "format": "int32"
                                    },
                                    "assigned_qty": {
                                        "type": "integer",
                                        "description": "Quantity of the components to check out to the asset",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/licenses/{id}/seat/{seatId}": {
            "patch": {
                "summary": "/licenses/:id/seat/:seatId",
                "description": "Checkin or checkout a license seat",
                "operationId": "licensesidseatseatid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID (not name) of license being updated",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    },
                    {
                        "name": "seatId",
                        "in": "path",
                        "description": "The seat ID of the license you wish to checkin or checkout",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "assigned_to": {
                                        "type": "integer",
                                        "description": "User ID the seat should be assigned to",
                                        "format": "int32"
                                    },
                                    "asset_id": {
                                        "type": "integer",
                                        "description": "Asset ID the license seat should be assigned to",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Result": {
                                        "value": "{}"
                                    }
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        }
    },
    "x-readme": {
        "headers": [
            {
                "key": "Authorization",
                "value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZDZjNjI3ZTNjY2U1Y2EyMzMxNjQ3OGNiMWNhNzhlNDMyYTkwNzYwNjRmNjhmMGRmYzdmNjI4M2FjNDE0Yjg0OGJkMjcwYTgzOWQ1YTg1MDEiLCJpYXQiOjE2Mzg0NTI0MzQsIm5iZiI6MTYzODQ1MjQzNCwiZXhwIjoyMjY5NjA0NDM0LCJzdWIiOiIzNTc5Iiwic2NvcGVzIjpbXX0.O4BB5dqWpOPsm1Wg9ZXTXlmPr1R1bE4frY7rg10Q9ToREJQdM4kAo94FM5Jt51n6hrQs89ZhqUo32n9IwSg_x8EMNpAkUvomr04IrbKKpdZvbAuWY4s3lxwexpTYt1gpZA02sgGc_MSPPX6X1X4wwfmqtwdOqL9Ms3otw4A3g39tHOPKgS64ECitT1hv4FhJFjcfO2BdXtBIa1O3Waxr9FnkaMFEmyilVxAriw7J--FOB8qqBon_82TS4-NmCB__13S89Pn4Mctg958bCQ6LCYYHLJa-Gt7l2af_ua6AXQfU-lX7wbO7IhScyx3KTvrVPwhZmXOgTnJHdq_n74xpcjl4koknund2t7Whe3sjTHGX_eeOjvQSiB_kF8FDW1sBhm9oZL8got11_WAXOBAjJB-P_BaJpytZz6P7gcrGXJbnAB9VyLWnmr-fSyw2ytDfmD1tP1rrTUFoN_YIypY4ClodxtO8so9Di3cN5mGpwAJDAYrXxQLqcOBbrx-UyjftFAr0vIH3NK5ELaG2ZZVdWcz3zq37FkpO2dAiTfx3-S5PuUlqSabOOEAe5e0hYbsYESu8eb8ABkmBrL71xOGYcxhuTAvekxruQ4Od1aSNherE29lkwdeA8sW64qxWLxPWYJz5nSrAIq0euFl49z-bumemjbgEUW124cj_hdiC1RA"
            }
        ],
        "explorer-enabled": true,
        "proxy-enabled": true,
        "samples-enabled": true
    },
    "x-readme-fauxas": true
}
