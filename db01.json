{
  "swagger": "2.0",
  "info": {
    "version": "5.4.4",
    "title": "Snipe-IT v5 API",
    "contact": {}
  },
  "host": "pacteraedge.snipe-it.io",
  "basePath": "/api/v1",
  "securityDefinitions": {},
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/hardware": {
      "post": {
        "description": "Creates a new asset",
        "summary": "hardware-create",
        "operationId": "hardware-create",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/plain"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HardwareRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "examples": {
              "application/json": {
                "status": "success",
                "messages": "Asset created successfully. :)",
                "payload": {
                  "model_id": 1,
                  "name": null,
                  "serial": null,
                  "company_id": "",
                  "order_number": null,
                  "notes": null,
                  "asset_tag": "SNIPE-IT-RULES",
                  "user_id": 2,
                  "archived": "0",
                  "physical": "1",
                  "depreciate": "0",
                  "status_id": 1,
                  "warranty_months": null,
                  "purchase_cost": null,
                  "purchase_date": null,
                  "assigned_to": null,
                  "supplier_id": null,
                  "requestable": 0,
                  "rtd_location_id": null,
                  "updated_at": "2017-10-19 08:43:45",
                  "created_at": "2017-10-19 08:43:45",
                  "id": 180,
                  "model": {
                    "id": 1,
                    "name": "Macbook Pro 13\"",
                    "model_number": "4929525240061",
                    "manufacturer_id": 1,
                    "category_id": 1,
                    "created_at": "2017-10-18 21:00:07",
                    "updated_at": "2017-10-18 21:00:07",
                    "depreciation_id": 1,
                    "eol": 36,
                    "image": null,
                    "deprecated_mac_address": 0,
                    "fieldset_id": null,
                    "notes": "Created by demo seeder",
                    "requestable": 0
                  }
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Hardware401Error1"
            },
            "examples": {
              "text/plain": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "get": {
        "description": "Return a listing of assets",
        "summary": "hardware-list",
        "operationId": "hardware-list",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 2,
            "type": "integer",
            "format": "int32",
            "description": "Specify the number of results you wish to return. Defaults to 50, but we have it set to 2 by default so the API explorer doesn't scroll forever."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "default": 0,
            "type": "integer",
            "format": "int32",
            "description": "Offset to use"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A text string to search the assets data for"
          },
          {
            "name": "order_number",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Return only assets associated with a specific order number"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "default": "created_at",
            "type": "string",
            "description": "Specify the column name you wish to sort by"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "default": "desc",
            "type": "string",
            "description": "Specify the order (asc or desc) you wish to order by on your sort column"
          },
          {
            "name": "model_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Optionally restrict asset results to this asset model ID"
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Optionally restrict asset results to this status label ID"
          },
          {
            "name": "manufacturer_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Optionally restrict asset results to this asset model ID"
          },
          {
            "name": "company_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Optionally restrict asset results to this company ID"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Optionally restrict asset results to this location ID"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Optionally restrict asset results to one of these status types: RTD, Deployed, Undeployable, Deleted, Archived, Requestable"
          },
          {
            "name": "status_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Optionally restrict asset results to this status label ID"
          },
          {
            "name": "components",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "Whether or not to return the assets' lists of components with the results"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/HardwareResponse1"
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Hardware401Error21"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "An Error has occured! Unauthenticated.",
                "payload": null
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Hardware405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed",
                "payload": null
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/hardware/{id}": {
      "get": {
        "description": "Get the details of a specific asset",
        "summary": "hardware-by-id",
        "operationId": "hardware-by-id",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The id (not the asset tag) of the asset you'd like to query"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref":"#/definitions/HardwareByID"
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Hardware401Error1"
            },
            "examples": {
              "text/plain": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "description": "Deletes a specific asset",
        "summary": "hardware-delete",
        "operationId": "hardware-delete",
        "deprecated": false,
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The id of the asset to delete"
          }
        ],
        "responses": {
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Hardware401Error41"
            },
            "examples": {
              "text/plain": {
                "error": "Unauthenticated."
              }
            },
            "headers": {}
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/Hardware404Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Asset does not exist."
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "patch": {
        "description": "Partially updates a specific asset",
        "summary": "hardware-partial-update",
        "operationId": "hardware-partial-update",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/plain"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The id of the asset you'd like to query"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HardwareRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "examples": {
              "application/json": {
                "rows": [
                  {
                    "id": "45",
                    "asset_tag": "976946724",
                    "assigned_to": "",
                    "category": "Reiciendis ea.",
                    "companyName": "Williamson-Kuhn",
                    "created_at": "",
                    "eol": "1991-10-19",
                    "expected_checkin": "",
                    "image": "",
                    "last_checkout": "",
                    "location": "Expanded system",
                    "manufacturer": "Farrell Group",
                    "model": "Profound zero",
                    "model_number": null,
                    "name": "Programmable concept",
                    "notes": "Ipsa pariatur sunt aut.",
                    "order_number": "",
                    "purchase_cost": "689.30",
                    "purchase_date": "1991-09-19",
                    "serial": "f5f06bb3-2420",
                    "status_label": "Ready to Deploy"
                  }
                ]
              }
            },
            "headers": {}
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/Hardware404Error1"
            },
            "examples": {
              "text/plain": {
                "status": "error",
                "messages": "Asset does not exist."
              }
            },
            "headers": {}
          },
          "500": {
            "description": "500",
            "schema": {
              "$ref": "#/definitions/Hardware500Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": {
                  "status_id": [
                    "The selected status id is invalid."
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "put": {
        "description": "Updates a specific asset",
        "summary": "hardware-update",
        "operationId": "hardware-update",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The id of the asset you'd like to query"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HardwareRequest2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Hardware401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/companies/{id}": {
      "get": {
        "description": "Retrieve the specific details of a company by id",
        "summary": "companiesid",
        "operationId": "companiesid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "company id"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/CompaniesResponse"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "name": "Lebsack and Sons",
                "image": null,
                "created_at": {
                  "datetime": "2017-11-22 05:28:00",
                  "formatted": "Wed Nov 22, 2017 5:28AM"
                },
                "updated_at": {
                  "datetime": "2017-11-22 05:28:00",
                  "formatted": "Wed Nov 22, 2017 5:28AM"
                },
                "assets_count": 0,
                "licenses_count": 0,
                "accessories_count": 0,
                "consumables_count": 0,
                "components_count": 0,
                "users_count": 0,
                "available_actions": {
                  "update": true,
                  "delete": true
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Companies401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "An Error has occured! Unauthenticated.",
                "payload": null
              }
            },
            "headers": {}
          },
          "404": {
            "description": "404",
            "schema": {
              "$ref": "#/definitions/Companies404Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Company not found"
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Companies405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed",
                "payload": null
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Updates a company's details",
        "summary": "companiesid-1",
        "operationId": "companiesid-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "company id"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CompaniesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Companies401Error21"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Companies405Error21"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete's a company",
        "summary": "companiesid-3",
        "operationId": "companiesid-3",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "company id"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Companies401Error21"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Companies405Error21"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Updates a part of a company's details",
        "summary": "companiesid-2",
        "operationId": "companiesid-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "company id"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CompaniesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Companies401Error21"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Companies405Error21"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/companies": {
      "get": {
        "description": "Return a listing of companies",
        "summary": "companies",
        "operationId": "companies",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/CompaniesResponse4"
            },
            "examples": {
              "application/json": {
                "total": 4,
                "rows": [
                  {
                    "id": 1,
                    "name": "Lebsack and Sons",
                    "image": null,
                    "created_at": {
                      "datetime": "2017-11-22 05:28:00",
                      "formatted": "Wed Nov 22, 2017 5:28AM"
                    },
                    "updated_at": {
                      "datetime": "2017-11-22 05:28:00",
                      "formatted": "Wed Nov 22, 2017 5:28AM"
                    },
                    "assets_count": 0,
                    "licenses_count": 0,
                    "accessories_count": 0,
                    "consumables_count": 0,
                    "components_count": 0,
                    "users_count": 13,
                    "available_actions": {
                      "update": true,
                      "delete": true
                    }
                  },
                  {
                    "id": 2,
                    "name": "Fay Group",
                    "image": null,
                    "created_at": {
                      "datetime": "2017-11-22 05:28:00",
                      "formatted": "Wed Nov 22, 2017 5:28AM"
                    },
                    "updated_at": {
                      "datetime": "2017-11-22 05:28:00",
                      "formatted": "Wed Nov 22, 2017 5:28AM"
                    },
                    "assets_count": 0,
                    "licenses_count": 0,
                    "accessories_count": 0,
                    "consumables_count": 0,
                    "components_count": 0,
                    "users_count": 11,
                    "available_actions": {
                      "update": true,
                      "delete": true
                    }
                  },
                  {
                    "id": 3,
                    "name": "Roberts Inc",
                    "image": null,
                    "created_at": {
                      "datetime": "2017-11-22 05:28:00",
                      "formatted": "Wed Nov 22, 2017 5:28AM"
                    },
                    "updated_at": {
                      "datetime": "2017-11-22 05:28:00",
                      "formatted": "Wed Nov 22, 2017 5:28AM"
                    },
                    "assets_count": 0,
                    "licenses_count": 0,
                    "accessories_count": 0,
                    "consumables_count": 0,
                    "components_count": 0,
                    "users_count": 19,
                    "available_actions": {
                      "update": true,
                      "delete": true
                    }
                  },
                  {
                    "id": 4,
                    "name": "Auer-Heaney",
                    "image": null,
                    "created_at": {
                      "datetime": "2017-11-22 05:28:00",
                      "formatted": "Wed Nov 22, 2017 5:28AM"
                    },
                    "updated_at": {
                      "datetime": "2017-11-22 05:28:00",
                      "formatted": "Wed Nov 22, 2017 5:28AM"
                    },
                    "assets_count": 0,
                    "licenses_count": 0,
                    "accessories_count": 0,
                    "consumables_count": 0,
                    "components_count": 0,
                    "users_count": 15,
                    "available_actions": {
                      "update": true,
                      "delete": true
                    }
                  }
                ]
              }
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Companies401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "An Error has occured! Unauthenticated.",
                "payload": null
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Companies405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed",
                "payload": null
              }
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a new company",
        "summary": "companies-1",
        "operationId": "companies-1",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/plain"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CompaniesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/CompaniesResponse5"
            },
            "examples": {
              "application/json": {
                "status": "success",
                "payload": {
                  "name": "Vloorb",
                  "updated_at": "2017-01-12 19:56:33",
                  "created_at": "2017-01-12 19:56:33",
                  "id": 14
                },
                "messages": "Company created successfully."
              }
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Companies401Error21"
            },
            "examples": {
              "text/plain": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Companies405Error21"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/locations": {
      "get": {
        "description": "List locations",
        "summary": "locations",
        "operationId": "locations",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "description": "Number of results to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "default": 0,
            "type": "integer",
            "format": "int32",
            "description": "Offset to use when retrieving results (useful in pagination)"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search string"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "default": "created_at",
            "type": "string",
            "description": "Field to order by"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort order (asc or desc)"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a new location",
        "summary": "locations-2",
        "operationId": "locations-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LocationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/models": {
      "get": {
        "description": "Returns a list of models",
        "summary": "models",
        "operationId": "models",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "description": "Number of records to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "default": 0,
            "type": "integer",
            "format": "int32",
            "description": "Offset to use when retrieving results (useful in pagination)"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search string"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "default": "created_at",
            "type": "string",
            "description": "Field to order by"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "default": "asc",
            "type": "string",
            "description": "Sort order (asc or desc)"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a model",
        "summary": "models-1",
        "operationId": "models-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModelsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Models401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Models405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/accessories": {
      "get": {
        "description": "Return a listing of accessories",
        "summary": "accessories",
        "operationId": "accessories",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "description": "Specify the number of results you wish to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "default": 0,
            "type": "integer",
            "format": "int32",
            "description": "Offset to use"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "default": "null",
            "type": "string",
            "description": "A text string to search the assets data for"
          },
          {
            "name": "order_number",
            "in": "query",
            "required": false,
            "default": "null",
            "type": "string",
            "description": "Return only assets associated with a specific order number"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "default": "created_at",
            "type": "string",
            "description": "Specify the column name you wish to sort by"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "default": "desc",
            "type": "string",
            "description": "Specify the order (asc or desc) you wish to order by on your sort column"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "default": "false",
            "type": "string",
            "description": "Whether to include detailed information on categories, etc (true) or just the text name (false)"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/AccessoriesResponse"
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Accessories401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "description": "Create a new accessory",
        "summary": "accessories-1",
        "operationId": "accessories-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessoriesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "List users",
        "summary": "users",
        "operationId": "users",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "String to search on"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "description": "Number of records to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "default": 0,
            "type": "integer",
            "format": "int32",
            "description": "Offset to use when retrieving results (useful in pagination)"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "default": "created_at",
            "type": "string",
            "description": "Field to order by"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "default": "desc",
            "type": "string",
            "description": "Sort order (asc or desc)"
          },
          {
            "name": "first_name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "last_name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "employee_num",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "zip",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "group_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "company_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "Set this to \"true\" if you want to return only deleted users"
          },
          {
            "name": "all",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "Set this to \"true\" if you want both deleted and active users"
          },
          {
            "name": "ldap_import",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Whether the user was imported/synched with LDAP - should be 0 or 1"
          },
          {
            "name": "assets_count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of checked out assets"
          },
          {
            "name": "licenses_count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of checked out licenses"
          },
          {
            "name": "accessories_count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of checked out accessories"
          },
          {
            "name": "consumables_count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of checked out consumables"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a new user",
        "summary": "users-2",
        "operationId": "users-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": false,
            "default": "application/json",
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UsersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/statuslabels": {
      "get": {
        "description": "Retrieve a list of status labels",
        "summary": "statuslabels",
        "operationId": "statuslabels",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "description": "Number of records to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "default": 0,
            "type": "integer",
            "format": "int32",
            "description": "Offset to use when retrieving results (useful in pagination)"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "String to search on"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "default": "created_at",
            "type": "string",
            "description": "Field to order by"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "default": "asc",
            "type": "string",
            "description": "Sort order (asc or desc)"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/StatuslabelsResponse"
            },
            "examples": {
              "application/json": {
                "total": 5,
                "rows": [
                  {
                    "id": 8,
                    "name": "API TEST",
                    "type": "deployable",
                    "color": null,
                    "show_in_nav": false,
                    "assets_count": 0,
                    "notes": "",
                    "created_at": {
                      "datetime": "2017-11-22 10:37:07",
                      "formatted": "Wed Nov 22, 2017 10:37AM"
                    },
                    "updated_at": {
                      "datetime": "2017-11-22 10:37:07",
                      "formatted": "Wed Nov 22, 2017 10:37AM"
                    },
                    "available_actions": {
                      "update": true,
                      "delete": true
                    }
                  },
                  {
                    "id": 1,
                    "name": "Ready to Deploy",
                    "type": "deployable",
                    "color": null,
                    "show_in_nav": false,
                    "assets_count": 1275,
                    "notes": "Illum voluptatem laboriosam sit consequatur fugiat.",
                    "created_at": {
                      "datetime": "2015-04-20 15:11:22",
                      "formatted": "Mon Apr 20, 2015 3:11PM"
                    },
                    "updated_at": {
                      "datetime": "2004-02-18 13:58:18",
                      "formatted": "Wed Feb 18, 2004 1:58PM"
                    },
                    "available_actions": {
                      "update": true,
                      "delete": false
                    }
                  },
                  {
                    "id": 7,
                    "name": "Lost/Stolen",
                    "type": "undeployable",
                    "color": null,
                    "show_in_nav": false,
                    "assets_count": 0,
                    "notes": "",
                    "created_at": {
                      "datetime": "2011-05-24 04:45:07",
                      "formatted": "Tue May 24, 2011 4:45AM"
                    },
                    "updated_at": {
                      "datetime": "2002-03-26 02:59:19",
                      "formatted": "Tue Mar 26, 2002 2:59AM"
                    },
                    "available_actions": {
                      "update": true,
                      "delete": true
                    }
                  },
                  {
                    "id": 5,
                    "name": "Out for Repair",
                    "type": "undeployable",
                    "color": null,
                    "show_in_nav": false,
                    "assets_count": 0,
                    "notes": "",
                    "created_at": {
                      "datetime": "2004-09-07 07:22:51",
                      "formatted": "Tue Sep 07, 2004 7:22AM"
                    },
                    "updated_at": {
                      "datetime": "1983-04-03 20:52:31",
                      "formatted": "Sun Apr 03, 1983 8:52PM"
                    },
                    "available_actions": {
                      "update": true,
                      "delete": true
                    }
                  },
                  {
                    "id": 3,
                    "name": "Archived",
                    "type": "archived",
                    "color": null,
                    "show_in_nav": false,
                    "assets_count": 50,
                    "notes": "These assets are permanently undeployable",
                    "created_at": {
                      "datetime": "1998-10-27 22:39:02",
                      "formatted": "Tue Oct 27, 1998 10:39PM"
                    },
                    "updated_at": {
                      "datetime": "1988-06-02 20:15:44",
                      "formatted": "Thu Jun 02, 1988 8:15PM"
                    },
                    "available_actions": {
                      "update": true,
                      "delete": false
                    }
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a new status label",
        "summary": "statuslabels-1",
        "operationId": "statuslabels-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/StatuslabelsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/StatuslabelsResponse1"
            },
            "examples": {
              "application/json": {
                "status": "success",
                "messages": "Status Label created successfully.",
                "payload": {
                  "name": "Test Status Label",
                  "deployable": 1,
                  "pending": 0,
                  "archived": 0,
                  "updated_at": "2017-11-22 10:37:07",
                  "created_at": "2017-11-22 10:37:07",
                  "id": 8
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/models/{id}": {
      "get": {
        "description": "Retrieve the specific details of a model by id",
        "summary": "modelsid",
        "operationId": "modelsid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "company id"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Models401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Models405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a model",
        "summary": "modelsid-3",
        "operationId": "modelsid-3",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "company id"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Models401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Models405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Update a model",
        "summary": "modelsid-2",
        "operationId": "modelsid-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "company id"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModelsRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Models401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Models405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a model",
        "summary": "modelsid-1",
        "operationId": "modelsid-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "company id"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModelsRequest2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Models401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Models405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/locations/{id}": {
      "delete": {
        "description": "Deletes a location",
        "summary": "locationsid-2",
        "operationId": "locationsid-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Get location details by id",
        "summary": "locations-1",
        "operationId": "locations-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Updates a location",
        "summary": "locations-3",
        "operationId": "locations-3",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LocationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Partially updates a location",
        "summary": "locationsid",
        "operationId": "locationsid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LocationsRequest2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "description": "View user details",
        "summary": "usersid",
        "operationId": "usersid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "User id"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a user",
        "summary": "usersid-2",
        "operationId": "usersid-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UsersRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Partially update a user, passing only the fields you want to modify",
        "summary": "users-3",
        "operationId": "users-3",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UsersRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a user",
        "summary": "usersid-1",
        "operationId": "usersid-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "User id"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/statuslabels/{id}": {
      "get": {
        "description": "View a status label",
        "summary": "statuslabelsid",
        "operationId": "statuslabelsid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/StatuslabelsResponse2"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "name": "Ready to Deploy",
                "type": "deployable",
                "color": null,
                "show_in_nav": false,
                "assets_count": 0,
                "notes": "Illum voluptatem laboriosam sit consequatur fugiat.",
                "created_at": {
                  "datetime": "2015-04-20 15:11:22",
                  "formatted": "Mon Apr 20, 2015 3:11PM"
                },
                "updated_at": {
                  "datetime": "2004-02-18 13:58:18",
                  "formatted": "Wed Feb 18, 2004 1:58PM"
                },
                "available_actions": {
                  "update": true,
                  "delete": true
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a status label",
        "summary": "statuslabelsid-1",
        "operationId": "statuslabelsid-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Updates a status label",
        "summary": "statuslabelsid-2",
        "operationId": "statuslabelsid-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/StatuslabelsRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/StatuslabelsResponse1"
            },
            "examples": {
              "application/json": {
                "status": "success",
                "messages": "Status Label created successfully.",
                "payload": {
                  "name": "Test Status Label",
                  "deployable": 1,
                  "pending": 0,
                  "archived": 0,
                  "updated_at": "2017-11-22 10:37:07",
                  "created_at": "2017-11-22 10:37:07",
                  "id": 8
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Updates selected fields in a status label",
        "summary": "statuslabelsid-3",
        "operationId": "statuslabelsid-3",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/StatuslabelsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/StatuslabelsResponse1"
            },
            "examples": {
              "application/json": {
                "status": "success",
                "messages": "Status Label created successfully.",
                "payload": {
                  "name": "Test Status Label",
                  "deployable": 1,
                  "pending": 0,
                  "archived": 0,
                  "updated_at": "2017-11-22 10:37:07",
                  "created_at": "2017-11-22 10:37:07",
                  "id": 8
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/categories": {
      "get": {
        "description": "List categories",
        "summary": "categories-1",
        "operationId": "categories-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "description": "Number of results to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "default": 0,
            "type": "integer",
            "format": "int32",
            "description": "Offset number (useful in pagination)"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search string"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "default": "created_at",
            "type": "string",
            "description": ""
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "default": "desc",
            "type": "string",
            "description": "Sort order (asc or desc)"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a Category",
        "summary": "categories-2",
        "operationId": "categories-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CategoriesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Categories401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Categories405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/manufacturers": {
      "post": {
        "description": "Create a manufacturer",
        "summary": "manufacturers-1",
        "operationId": "manufacturers-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManufacturersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "/manufacturers",
        "summary": "manufacturers",
        "operationId": "manufacturers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/categories/{id}": {
      "put": {
        "description": "Update a Category",
        "summary": "categoriesid",
        "operationId": "categoriesid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Category ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CategoriesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Categories401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Categories405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Update a Category",
        "summary": "categoriesid-1",
        "operationId": "categoriesid-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Category ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CategoriesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Categories401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Categories405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Return a Category by id",
        "summary": "categoriesid-3",
        "operationId": "categoriesid-3",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Category ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Categories401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Categories405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a Category",
        "summary": "categoriesid-2",
        "operationId": "categoriesid-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Category ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Categories401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Categories405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/statuslabels/{id}/assetlist": {
      "get": {
        "description": "View assets with a specific status label",
        "summary": "statuslabelsidassetlist",
        "operationId": "statuslabelsidassetlist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/accessories/{id}": {
      "get": {
        "description": "Get the details on an accessory",
        "summary": "accessoriesid",
        "operationId": "accessoriesid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Selectively updates an accessory",
        "summary": "accessoriesid-2",
        "operationId": "accessoriesid-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessoriesRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Deletes an accessory",
        "summary": "accessoriesid-3",
        "operationId": "accessoriesid-3",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Updates an accessory",
        "summary": "accessoriesid-1",
        "operationId": "accessoriesid-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessoriesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/consumables": {
      "get": {
        "description": "Return a listing of consumables",
        "summary": "consumables",
        "operationId": "consumables",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "description": "Specify the number of results you wish to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "default": 0,
            "type": "integer",
            "format": "int32",
            "description": "Offset to use"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "default": "null",
            "type": "string",
            "description": "A text string to search the assets data for"
          },
          {
            "name": "order_number",
            "in": "query",
            "required": false,
            "default": "null",
            "type": "string",
            "description": "Return only assets associated with a specific order number"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "default": "created_at",
            "type": "string",
            "description": "Specify the column name you wish to sort by"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "default": "desc",
            "type": "string",
            "description": "Specify the order (asc or desc) you wish to order by on your sort column"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "default": "false",
            "type": "string",
            "description": "Whether to include detailed information on categories, etc (true) or just the text name (false)"
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Category ID to filter by"
          },
          {
            "name": "company_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Company ID to filter by"
          },
          {
            "name": "manufacturer_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Manufacturer ID to filter by"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/ConsumablesResponse"
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Consumables401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "description": "Create a new consumable",
        "summary": "consumables-1",
        "operationId": "consumables-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsumablesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/components": {
      "post": {
        "description": "Creates a component",
        "summary": "components-1",
        "operationId": "components-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ComponentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Return a listing of components",
        "summary": "components",
        "operationId": "components",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "description": "Specify the number of results you wish to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "default": 0,
            "type": "integer",
            "format": "int32",
            "description": "Offset to use"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "default": "null",
            "type": "string",
            "description": "A text string to search the assets data for"
          },
          {
            "name": "order_number",
            "in": "query",
            "required": false,
            "default": "null",
            "type": "string",
            "description": "Return only assets associated with a specific order number"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "default": "created_at",
            "type": "string",
            "description": "Specify the column name you wish to sort by"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "default": "desc",
            "type": "string",
            "description": "Specify the order (asc or desc) you wish to order by on your sort column"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "default": "false",
            "type": "string",
            "description": "Whether to include detailed information on categories, etc (true) or just the text name (false)"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/ComponentsResponse"
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Components401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/consumables/{id}": {
      "get": {
        "description": "Get the details on a consumable",
        "summary": "consumablesid",
        "operationId": "consumablesid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Updates a portion of a consumable record",
        "summary": "consumablesid-1",
        "operationId": "consumablesid-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsumablesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Deletes a consumable",
        "summary": "consumablesid-2",
        "operationId": "consumablesid-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Updates a consumable",
        "summary": "consumables-2",
        "operationId": "consumables-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsumablesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/components/{id}": {
      "get": {
        "description": "Get the details on a component",
        "summary": "componentsid",
        "operationId": "componentsid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Updates a component",
        "summary": "componentsid-1",
        "operationId": "componentsid-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ComponentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Updates a some details of a component",
        "summary": "componentsid-2",
        "operationId": "componentsid-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ComponentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Deletes a component",
        "summary": "componentsid-3",
        "operationId": "componentsid-3",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/hardware/{id}/checkout": {
      "post": {
        "description": "Checkout an asset to a user, location or another asset",
        "summary": "hardware-checkout",
        "operationId": "hardware-checkout",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/plain"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The id (not the asset tag) of the asset you'd like to query"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HardwareCheckoutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/HardwareCheckoutResponse"
            },
            "examples": {
              "application/json": {
                "rows": [
                  {
                    "id": "45",
                    "asset_tag": "976946724",
                    "assigned_to": "",
                    "category": "Reiciendis ea.",
                    "companyName": "Williamson-Kuhn",
                    "created_at": "",
                    "eol": "1991-10-19",
                    "expected_checkin": "",
                    "image": "",
                    "last_checkout": "",
                    "location": "Expanded system",
                    "manufacturer": "Farrell Group",
                    "model": "Profound zero",
                    "model_number": null,
                    "name": "Programmable concept",
                    "notes": "Ipsa pariatur sunt aut.",
                    "order_number": "",
                    "purchase_cost": "689.30",
                    "purchase_date": "1991-09-19",
                    "serial": "f5f06bb3-2420",
                    "status_label": "Ready to Deploy"
                  }
                ]
              }
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HardwareCheckout401Error1"
            },
            "examples": {
              "text/plain": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/hardware/{id}/checkin": {
      "post": {
        "description": "Checkin an asset",
        "summary": "hardware-checkin",
        "operationId": "hardware-checkin",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/plain"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The id (not the asset tag) of the asset you'd like to query"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HardwareCheckinRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/HardwareCheckinResponse"
            },
            "examples": {
              "application/json": {
                "rows": [
                  {
                    "id": "45",
                    "asset_tag": "976946724",
                    "assigned_to": "",
                    "category": "Reiciendis ea.",
                    "companyName": "Williamson-Kuhn",
                    "created_at": "",
                    "eol": "1991-10-19",
                    "expected_checkin": "",
                    "image": "",
                    "last_checkout": "",
                    "location": "Expanded system",
                    "manufacturer": "Farrell Group",
                    "model": "Profound zero",
                    "model_number": null,
                    "name": "Programmable concept",
                    "notes": "Ipsa pariatur sunt aut.",
                    "order_number": "",
                    "purchase_cost": "689.30",
                    "purchase_date": "1991-09-19",
                    "serial": "f5f06bb3-2420",
                    "status_label": "Ready to Deploy"
                  }
                ]
              }
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HardwareCheckin401Error1"
            },
            "examples": {
              "text/plain": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/licenses": {
      "get": {
        "description": "Return a listing of licenses",
        "summary": "licenses",
        "operationId": "licenses",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "description": "Specify the number of results you wish to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "default": 0,
            "type": "integer",
            "format": "int32",
            "description": "Offset to use"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "default": "null",
            "type": "string",
            "description": "A text string to search the assets data for"
          },
          {
            "name": "order_number",
            "in": "query",
            "required": false,
            "default": "null",
            "type": "string",
            "description": "Return only assets associated with a specific order number"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "default": "created_at",
            "type": "string",
            "description": "Specify the column name you wish to sort by"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "default": "desc",
            "type": "string",
            "description": "Specify the order (asc or desc) you wish to order by on your sort column"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "default": "false",
            "type": "string",
            "description": "Whether to include detailed information on categories, etc (true) or just the text name (false)"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/LicensesResponse"
            },
            "examples": {
              "application/json": {
                "total": 4,
                "rows": [
                  {
                    "id": 1,
                    "name": "Photoshop",
                    "company": null,
                    "manufacturer": {
                      "id": 9,
                      "name": "Adobe"
                    },
                    "product_key": "0d5254fb-b9f9-342c-a210-5feba9ea08b0",
                    "order_number": "27709963",
                    "purchase_order": "",
                    "purchase_date": {
                      "date": "2017-07-04",
                      "formatted": "2017-07-04"
                    },
                    "purchase_cost": "299.99",
                    "notes": "Created by DB seeder",
                    "expiration_date": null,
                    "seats": 10,
                    "free_seats_count": 10,
                    "license_name": "Prof. Alba Sawayn",
                    "license_email": "merlin50@example.org",
                    "maintained": false,
                    "supplier": null,
                    "created_at": {
                      "datetime": "2017-11-11 18:18:03",
                      "formatted": "2017-11-11 06:18 PM"
                    },
                    "updated_at": {
                      "datetime": "2017-11-11 18:18:03",
                      "formatted": "2017-11-11 06:18 PM"
                    },
                    "user_can_checkout": true,
                    "available_actions": {
                      "checkout": true,
                      "checkin": true,
                      "clone": true,
                      "update": true,
                      "delete": true
                    }
                  },
                  {
                    "id": 2,
                    "name": "Acrobat",
                    "company": null,
                    "manufacturer": {
                      "id": 9,
                      "name": "Adobe"
                    },
                    "product_key": "fb382c35-4514-3c60-ab99-9fd2f7d492ea",
                    "order_number": "30329422",
                    "purchase_order": "",
                    "purchase_date": {
                      "date": "2017-01-15",
                      "formatted": "2017-01-15"
                    },
                    "purchase_cost": "29.99",
                    "notes": "Created by DB seeder",
                    "expiration_date": null,
                    "seats": 10,
                    "free_seats_count": 10,
                    "license_name": "Katelyn Boehm",
                    "license_email": "beverly.hartmann@example.com",
                    "maintained": false,
                    "supplier": null,
                    "created_at": {
                      "datetime": "2017-11-11 18:18:03",
                      "formatted": "2017-11-11 06:18 PM"
                    },
                    "updated_at": {
                      "datetime": "2017-11-11 18:18:03",
                      "formatted": "2017-11-11 06:18 PM"
                    },
                    "user_can_checkout": true,
                    "available_actions": {
                      "checkout": true,
                      "checkin": true,
                      "clone": true,
                      "update": true,
                      "delete": true
                    }
                  },
                  {
                    "id": 3,
                    "name": "InDesign",
                    "company": null,
                    "manufacturer": {
                      "id": 9,
                      "name": "Adobe"
                    },
                    "product_key": "5b8704bb-6948-3fd3-82df-ba344a5b10eb",
                    "order_number": "23796169",
                    "purchase_order": "",
                    "purchase_date": {
                      "date": "2017-08-14",
                      "formatted": "2017-08-14"
                    },
                    "purchase_cost": "199.99",
                    "notes": "Created by DB seeder",
                    "expiration_date": null,
                    "seats": 10,
                    "free_seats_count": 10,
                    "license_name": "Mrs. Elisha Howe DVM",
                    "license_email": "ofisher@example.com",
                    "maintained": false,
                    "supplier": null,
                    "created_at": {
                      "datetime": "2017-11-11 18:18:03",
                      "formatted": "2017-11-11 06:18 PM"
                    },
                    "updated_at": {
                      "datetime": "2017-11-11 18:18:03",
                      "formatted": "2017-11-11 06:18 PM"
                    },
                    "user_can_checkout": true,
                    "available_actions": {
                      "checkout": true,
                      "checkin": true,
                      "clone": true,
                      "update": true,
                      "delete": true
                    }
                  },
                  {
                    "id": 4,
                    "name": "Office",
                    "company": null,
                    "manufacturer": {
                      "id": 2,
                      "name": "Microsoft"
                    },
                    "product_key": "4a1d4573-154a-3f8d-94a8-b71c49fde89a",
                    "order_number": "13062244",
                    "purchase_order": "",
                    "purchase_date": {
                      "date": "2017-06-02",
                      "formatted": "2017-06-02"
                    },
                    "purchase_cost": "49.99",
                    "notes": "Created by DB seeder",
                    "expiration_date": null,
                    "seats": 20,
                    "free_seats_count": 20,
                    "license_name": "Brannon Kutch",
                    "license_email": "kennith15@example.com",
                    "maintained": false,
                    "supplier": null,
                    "created_at": {
                      "datetime": "2017-11-11 18:18:03",
                      "formatted": "2017-11-11 06:18 PM"
                    },
                    "updated_at": {
                      "datetime": "2017-11-11 18:18:03",
                      "formatted": "2017-11-11 06:18 PM"
                    },
                    "user_can_checkout": true,
                    "available_actions": {
                      "checkout": true,
                      "checkin": true,
                      "clone": true,
                      "update": true,
                      "delete": true
                    }
                  }
                ]
              }
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Licenses401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "description": "/licenses/",
        "summary": "testinput",
        "operationId": "testinput",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/plain"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LicensesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/LicensesResponse1"
            },
            "examples": {
              "application/json": {
                "status": "success",
                "messages": "License created successfully.",
                "payload": {
                  "name": "TEST License",
                  "seats": "25",
                  "updated_at": "2018-02-25 18:23:49",
                  "created_at": "2018-02-25 18:23:49",
                  "id": 9
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Licenses401Error1"
            },
            "examples": {
              "text/plain": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/fieldsets/{id}": {
      "get": {
        "description": "Return fieldset info by id",
        "summary": "fieldsetsid",
        "operationId": "fieldsetsid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The ID number of the fieldset"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Fieldsets401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Fieldsets405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a Fieldset",
        "summary": "fieldsetsid-1",
        "operationId": "fieldsetsid-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Custom field ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/FieldsetsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Fieldsets401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Fieldsets405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a Fieldset",
        "summary": "fieldsetsid-2",
        "operationId": "fieldsetsid-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Custom field ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Fieldsets401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Fieldsets405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/fieldsets": {
      "get": {
        "description": "List all custom fieldsets",
        "summary": "fields",
        "operationId": "fields",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/FieldsetsResponse3"
            },
            "examples": {
              "application/json": {
                "total": 2,
                "rows": [
                  {
                    "id": 1,
                    "name": "Mobile Devices",
                    "fields": {
                      "total": 2,
                      "rows": [
                        {
                          "id": 1,
                          "name": "IMEI",
                          "db_column_name": "_snipeit_imei_1",
                          "format": "regex:/^[0-9]{15}$/",
                          "field_values": null,
                          "field_values_array": null,
                          "type": "text",
                          "required": 0,
                          "created_at": {
                            "datetime": "2020-11-27 21:05:14",
                            "formatted": "Fri Nov 27, 2020 9:05PM"
                          },
                          "updated_at": {
                            "datetime": "2020-11-27 21:05:14",
                            "formatted": "Fri Nov 27, 2020 9:05PM"
                          }
                        },
                        {
                          "id": 2,
                          "name": "Phone Number",
                          "db_column_name": "_snipeit_phone_number_2",
                          "format": "ANY",
                          "field_values": null,
                          "field_values_array": null,
                          "type": "text",
                          "required": 0,
                          "created_at": {
                            "datetime": "2020-11-27 21:05:14",
                            "formatted": "Fri Nov 27, 2020 9:05PM"
                          },
                          "updated_at": {
                            "datetime": "2020-11-27 21:05:14",
                            "formatted": "Fri Nov 27, 2020 9:05PM"
                          }
                        }
                      ]
                    },
                    "models": {
                      "total": 2,
                      "rows": [
                        {
                          "id": 15,
                          "name": "iPhone 6s"
                        },
                        {
                          "id": 16,
                          "name": "iPhone 7"
                        }
                      ]
                    },
                    "created_at": {
                      "datetime": "2020-11-27 21:05:14",
                      "formatted": "Fri Nov 27, 2020 9:05PM"
                    },
                    "updated_at": {
                      "datetime": "2020-11-27 21:05:14",
                      "formatted": "Fri Nov 27, 2020 9:05PM"
                    }
                  },
                  {
                    "id": 2,
                    "name": "Laptops and Desktops",
                    "fields": {
                      "total": 3,
                      "rows": [
                        {
                          "id": 3,
                          "name": "RAM",
                          "db_column_name": "_snipeit_ram_3",
                          "format": "ANY",
                          "field_values": null,
                          "field_values_array": null,
                          "type": "text",
                          "required": 0,
                          "created_at": {
                            "datetime": "2020-11-27 21:05:14",
                            "formatted": "Fri Nov 27, 2020 9:05PM"
                          },
                          "updated_at": {
                            "datetime": "2020-11-27 21:05:14",
                            "formatted": "Fri Nov 27, 2020 9:05PM"
                          }
                        },
                        {
                          "id": 4,
                          "name": "CPU",
                          "db_column_name": "_snipeit_cpu_4",
                          "format": "ANY",
                          "field_values": null,
                          "field_values_array": null,
                          "type": "text",
                          "required": 0,
                          "created_at": {
                            "datetime": "2020-11-27 21:05:14",
                            "formatted": "Fri Nov 27, 2020 9:05PM"
                          },
                          "updated_at": {
                            "datetime": "2020-11-27 21:05:14",
                            "formatted": "Fri Nov 27, 2020 9:05PM"
                          }
                        },
                        {
                          "id": 5,
                          "name": "MAC Address",
                          "db_column_name": "_snipeit_mac_address_5",
                          "format": "regex:/^([0-9a-fA-F]{2}[:-]){5}[0-9a-fA-F]{2}$/",
                          "field_values": null,
                          "field_values_array": null,
                          "type": "text",
                          "required": 0,
                          "created_at": {
                            "datetime": "2020-11-27 21:05:14",
                            "formatted": "Fri Nov 27, 2020 9:05PM"
                          },
                          "updated_at": {
                            "datetime": "2020-11-27 21:05:14",
                            "formatted": "Fri Nov 27, 2020 9:05PM"
                          }
                        }
                      ]
                    },
                    "models": {
                      "total": 10,
                      "rows": [
                        {
                          "id": 1,
                          "name": "Macbook Pro 13&quot;"
                        },
                        {
                          "id": 2,
                          "name": "Macbook Air"
                        },
                        {
                          "id": 3,
                          "name": "Surface"
                        },
                        {
                          "id": 4,
                          "name": "XPS 13"
                        },
                        {
                          "id": 5,
                          "name": "Spectre"
                        },
                        {
                          "id": 6,
                          "name": "ZenBook UX310"
                        },
                        {
                          "id": 7,
                          "name": "Yoga 910"
                        },
                        {
                          "id": 8,
                          "name": "iMac Pro"
                        },
                        {
                          "id": 9,
                          "name": "Lenovo Intel Core i5"
                        },
                        {
                          "id": 10,
                          "name": "OptiPlex"
                        }
                      ]
                    },
                    "created_at": {
                      "datetime": "2020-11-27 21:05:14",
                      "formatted": "Fri Nov 27, 2020 9:05PM"
                    },
                    "updated_at": {
                      "datetime": "2020-11-27 21:05:14",
                      "formatted": "Fri Nov 27, 2020 9:05PM"
                    }
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Fieldsets401Error1"
            },
            "examples": {
              "text/plain": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a Fieldset",
        "summary": "fieldsets",
        "operationId": "fieldsets",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/FieldsetsRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Fieldsets401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Fieldsets405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/manufacturers/{id}": {
      "patch": {
        "description": "Partially update a Manufacturer",
        "summary": "manufacturersid",
        "operationId": "manufacturersid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Manufacturer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManufacturersRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Manufacturers401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Manufacturers405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "View a manufacturer",
        "summary": "manufacturersid-1",
        "operationId": "manufacturersid-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Manufacturer ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Manufacturers401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Manufacturers405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a manufacturer",
        "summary": "manufacturersid-2",
        "operationId": "manufacturersid-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Manufacturer ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Manufacturers401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Manufacturers405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a Manufacturer",
        "summary": "manufacturersid-3",
        "operationId": "manufacturersid-3",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Manufacturer ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManufacturersRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Manufacturers401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Manufacturers405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/users/{id}/assets": {
      "get": {
        "description": "Get a list of assets checked out to the user",
        "summary": "usersidassets",
        "operationId": "usersidassets",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "User id"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/licenses/{id}": {
      "put": {
        "description": "/licenses/:id",
        "summary": "licensesid-1",
        "operationId": "licensesid-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "ID (not name) of license being updated"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LicensesRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "/licenses/:id",
        "summary": "licensesid-2",
        "operationId": "licensesid-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "ID (not name) of license being updated"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LicensesRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "/licenses/:id",
        "summary": "licensesid",
        "operationId": "licensesid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The id (not name) of the license."
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/LicensesResponse2"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "name": "Photoshop",
                "company": null,
                "manufacturer": {
                  "id": 9,
                  "name": "Adobe"
                },
                "product_key": "0d5254fb-b9f9-342c-a210-5feba9ea08b0",
                "order_number": "27709963",
                "purchase_order": "",
                "purchase_date": {
                  "date": "2017-07-04",
                  "formatted": "2017-07-04"
                },
                "purchase_cost": "299.99",
                "notes": "Created by DB seeder",
                "expiration_date": null,
                "seats": 10,
                "free_seats_count": 0,
                "license_name": "Prof. Alba Sawayn",
                "license_email": "merlin50@example.org",
                "maintained": false,
                "supplier": null,
                "created_at": {
                  "datetime": "2017-11-11 18:18:03",
                  "formatted": "2017-11-11 06:18 PM"
                },
                "updated_at": {
                  "datetime": "2017-11-11 18:18:03",
                  "formatted": "2017-11-11 06:18 PM"
                },
                "user_can_checkout": false,
                "available_actions": {
                  "checkout": true,
                  "checkin": true,
                  "clone": true,
                  "update": true,
                  "delete": true
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/maintenances": {
      "get": {
        "description": "List asset maintenances",
        "summary": "maintenances",
        "operationId": "maintenances",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "description": "Number of results to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "default": 0,
            "type": "integer",
            "format": "int32",
            "description": "Offset to use when retrieving results (useful in pagination)"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search string"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "default": "created_at",
            "type": "string",
            "description": "Field to order by"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort order (asc or desc)"
          },
          {
            "name": "asset_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Asset ID of the asset you'd like to return maintenances for"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/MaintenancesResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a new maintenance",
        "summary": "maintenances-1",
        "operationId": "maintenances-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/MaintenancesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/hardware/audit": {
      "post": {
        "description": "Mark an asset as audited",
        "summary": "hardwareaudit",
        "operationId": "hardwareaudit",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/plain"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HardwareAuditRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HardwareAudit401Error1"
            },
            "examples": {
              "text/plain": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/hardware/bytag/{asset_tag}": {
      "get": {
        "description": "Get the details of a specific asset by asset tag",
        "summary": "hardware-by-asset-tag",
        "operationId": "hardware-by-asset-tag",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "name": "asset_tag",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The asset_tag (not the ID) of the asset you'd like to query"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HardwareBytag401Error1"
            },
            "examples": {
              "text/plain": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/hardware/byserial/{serial}": {
      "get": {
        "description": "Get the details of a specific asset by asset tag",
        "summary": "hardware-by-serial",
        "operationId": "hardware-by-serial",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The serial number (not the ID) of the asset you'd like to query"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HardwareByserial401Error1"
            },
            "examples": {
              "text/plain": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/departments": {
      "get": {
        "description": "List departments",
        "summary": "departments",
        "operationId": "departments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/DepartmentsResponse"
            },
            "examples": {
              "application/json": {
                "total": 44,
                "rows": [
                  {
                    "id": 44,
                    "name": "NA Operations",
                    "image": null,
                    "company": null,
                    "manager": null,
                    "location": null,
                    "users_count": "13",
                    "created_at": {
                      "datetime": "2018-10-30 21:07:16",
                      "formatted": "2018-10-30 09:07 PM"
                    },
                    "updated_at": {
                      "datetime": "2018-10-30 21:07:16",
                      "formatted": "2018-10-30 09:07 PM"
                    },
                    "available_actions": {
                      "update": true,
                      "delete": false
                    }
                  },
                  {
                    "id": 43,
                    "name": "Developmt &amp; Construction",
                    "image": null,
                    "company": null,
                    "manager": null,
                    "location": null,
                    "users_count": "28",
                    "created_at": {
                      "datetime": "2018-10-30 21:07:07",
                      "formatted": "2018-10-30 09:07 PM"
                    },
                    "updated_at": {
                      "datetime": "2018-10-30 21:07:07",
                      "formatted": "2018-10-30 09:07 PM"
                    },
                    "available_actions": {
                      "update": true,
                      "delete": false
                    }
                  },
                  {
                    "id": 42,
                    "name": "Studio S",
                    "image": null,
                    "company": null,
                    "manager": null,
                    "location": null,
                    "users_count": "13",
                    "created_at": {
                      "datetime": "2018-10-30 21:07:06",
                      "formatted": "2018-10-30 09:07 PM"
                    },
                    "updated_at": {
                      "datetime": "2018-10-30 21:07:06",
                      "formatted": "2018-10-30 09:07 PM"
                    },
                    "available_actions": {
                      "update": true,
                      "delete": false
                    }
                  },
                  {
                    "id": 41,
                    "name": "Research &amp; Development",
                    "image": null,
                    "company": null,
                    "manager": null,
                    "location": null,
                    "users_count": "4",
                    "created_at": {
                      "datetime": "2018-10-30 21:07:05",
                      "formatted": "2018-10-30 09:07 PM"
                    },
                    "updated_at": {
                      "datetime": "2018-10-30 21:07:05",
                      "formatted": "2018-10-30 09:07 PM"
                    },
                    "available_actions": {
                      "update": true,
                      "delete": false
                    }
                  },
                  {
                    "id": 40,
                    "name": "Profit-Building &amp; Local M",
                    "image": null,
                    "company": null,
                    "manager": null,
                    "location": null,
                    "users_count": "5",
                    "created_at": {
                      "datetime": "2018-10-30 21:07:01",
                      "formatted": "2018-10-30 09:07 PM"
                    },
                    "updated_at": {
                      "datetime": "2018-10-30 21:07:01",
                      "formatted": "2018-10-30 09:07 PM"
                    },
                    "available_actions": {
                      "update": true,
                      "delete": false
                    }
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a department",
        "summary": "departments-1",
        "operationId": "departments-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/DepartmentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/DepartmentsResponse1"
            },
            "examples": {
              "application/json": {
                "status": "success",
                "messages": "Department created successfully.",
                "payload": {
                  "name": "Human Resources",
                  "user_id": 2,
                  "manager_id": null,
                  "updated_at": "2018-10-31 17:13:32",
                  "created_at": "2018-10-31 17:13:32",
                  "id": 45
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/departments/{id}": {
      "get": {
        "description": "View a department",
        "summary": "departmentsid",
        "operationId": "departmentsid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/DepartmentsResponse2"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "name": "Human Resources",
                "image": null,
                "company": null,
                "manager": null,
                "location": {
                  "id": 1,
                  "name": "Isobelside"
                },
                "users_count": "",
                "created_at": {
                  "datetime": "2018-10-27 16:36:40",
                  "formatted": "2018-10-27 04:36 PM"
                },
                "updated_at": {
                  "datetime": "2018-10-27 16:36:40",
                  "formatted": "2018-10-27 04:36 PM"
                },
                "available_actions": {
                  "update": true,
                  "delete": true
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Edit a department",
        "summary": "departments-edit",
        "operationId": "departments-edit",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/DepartmentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/DepartmentsResponse3"
            },
            "examples": {
              "application/json": {
                "status": "success",
                "messages": "Department updated successfully.",
                "payload": {
                  "id": 1,
                  "name": "Human Resources",
                  "user_id": 1,
                  "company_id": null,
                  "location_id": 1,
                  "manager_id": null,
                  "notes": null,
                  "created_at": "2018-10-27 16:36:40",
                  "updated_at": "2018-10-27 16:36:40",
                  "deleted_at": null,
                  "image": null
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Edit a department",
        "summary": "departmentsid-1",
        "operationId": "departmentsid-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/DepartmentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/DepartmentsResponse3"
            },
            "examples": {
              "application/json": {
                "status": "success",
                "messages": "Department updated successfully.",
                "payload": {
                  "id": 1,
                  "name": "Human Resources",
                  "user_id": 1,
                  "company_id": null,
                  "location_id": 1,
                  "manager_id": null,
                  "notes": null,
                  "created_at": "2018-10-27 16:36:40",
                  "updated_at": "2018-10-27 16:36:40",
                  "deleted_at": null,
                  "image": null
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a department",
        "summary": "departmentsid-2",
        "operationId": "departmentsid-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Department ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Departments401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Departments405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/users/{id}/licenses": {
      "get": {
        "description": "Get a list of licenses checked out to the user",
        "summary": "usersidlicenses",
        "operationId": "usersidlicenses",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "User id"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/UsersLicensesResponse"
            },
            "examples": {
              "application/json": {
                "total": 1,
                "rows": [
                  {
                    "id": 2,
                    "name": "Acrobat",
                    "company": null,
                    "manufacturer": {
                      "id": 9,
                      "name": "Adobe"
                    },
                    "product_key": "935d7ada-f202-3a50-bf26-e6955b9ef675",
                    "order_number": "13745264",
                    "purchase_order": "",
                    "purchase_date": {
                      "date": "2018-06-27",
                      "formatted": "2018-06-27"
                    },
                    "purchase_cost": "29.99",
                    "notes": "Created by DB seeder",
                    "expiration_date": {
                      "date": "2019-07-01",
                      "formatted": "2019-07-01"
                    },
                    "seats": 10,
                    "free_seats_count": 0,
                    "license_name": "Sheridan Wilderman",
                    "license_email": "timothy30@example.com",
                    "maintained": false,
                    "supplier": {
                      "id": 1,
                      "name": "Schimmel-Keebler"
                    },
                    "category": {
                      "id": 14,
                      "name": "Graphics Software"
                    },
                    "created_at": {
                      "datetime": "2018-09-29 22:43:02",
                      "formatted": "2018-09-29 22:43"
                    },
                    "updated_at": {
                      "datetime": "2019-01-21 14:24:06",
                      "formatted": "2019-01-21 14:24"
                    },
                    "user_can_checkout": false,
                    "available_actions": {
                      "checkout": true,
                      "checkin": true,
                      "clone": true,
                      "update": true,
                      "delete": true
                    }
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/hardware/{id}/licenses": {
      "get": {
        "description": "Get the licenses checked out to an asset",
        "summary": "hardwareidlicenses",
        "operationId": "hardwareidlicenses",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The id (not the asset tag) of the asset you'd like to query"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HardwareLicenses401Error1"
            },
            "examples": {
              "text/plain": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/users/{id}/accessories": {
      "get": {
        "description": "Get a list of accessories checked out to the user",
        "summary": "usersidaccessories",
        "operationId": "usersidaccessories",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "User id"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/UsersAccessoriesResponse"
            },
            "examples": {
              "application/json": {
                "total": 1,
                "rows": [
                  {
                    "id": 1,
                    "name": "USB Keyboard",
                    "company": null,
                    "manufacturer": {
                      "id": 1,
                      "name": "Apple"
                    },
                    "supplier": {
                      "id": 2,
                      "name": "Block and Sons"
                    },
                    "model_number": "41230142",
                    "category": {
                      "id": 8,
                      "name": "Keyboards"
                    },
                    "location": {
                      "id": 4,
                      "name": "East Caseyhaven"
                    },
                    "notes": null,
                    "qty": 15,
                    "purchase_date": null,
                    "purchase_cost": null,
                    "order_number": null,
                    "min_qty": 2,
                    "remaining_qty": 14,
                    "image": "https://snipe-it.local:8890/uploads/accessories/usb-keyboard.jpg",
                    "created_at": {
                      "datetime": "2018-12-05 15:37:21",
                      "formatted": "2018-12-05 03:37 PM"
                    },
                    "updated_at": {
                      "datetime": "2018-12-05 15:37:21",
                      "formatted": "2018-12-05 03:37 PM"
                    },
                    "available_actions": {
                      "checkout": true,
                      "checkin": false,
                      "update": true,
                      "delete": true
                    },
                    "user_can_checkout": true
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/hardware/audit/due": {
      "get": {
        "description": "Retrieve a list of assets that are due for auditing soon.",
        "summary": "hardwareauditdue",
        "operationId": "hardwareauditdue",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HardwareAuditDue401Error1"
            },
            "examples": {
              "text/plain": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/hardware/audit/overdue": {
      "get": {
        "description": "Retrieve a list of assets that are overdue for auditing.",
        "summary": "hardwareauditoverdue",
        "operationId": "hardwareauditoverdue",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/HardwareAuditOverdue401Error1"
            },
            "examples": {
              "text/plain": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/maintenances/{id}": {
      "delete": {
        "description": "Delete a maintenance",
        "summary": "maintenancesid",
        "operationId": "maintenancesid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Maintenance ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/accessories/{id}/checkedout": {
      "get": {
        "description": "Show which users a specific accessory has been checked out to",
        "summary": "accessoriesidcheckedout",
        "operationId": "accessoriesidcheckedout",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/accessories/{id}/checkout": {
      "post": {
        "description": "Check an accessory out to a user",
        "summary": "accessoriesidcheckedout-1",
        "operationId": "accessoriesidcheckedout-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessoriesCheckoutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/consumables/{id}/checkout": {
      "post": {
        "description": "Check an accessory out to a user",
        "summary": "consumablesidcheckout",
        "operationId": "consumablesidcheckout",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsumablesCheckoutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/consumables/{id}/checkin": {
      "post": {
        "description": "Checkin a consumable from a user",
        "summary": "consumablesidcheckin",
        "operationId": "consumablesidcheckin",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "This is the ID of the consumable+user relationships in the consumables_users table"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/accessories/{id}/checkin": {
      "post": {
        "description": "Checkin an accessory from a user",
        "summary": "accessoriesidcheckin",
        "operationId": "accessoriesidcheckin",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "This is the ID of the accessory+user relationships in the accessories_users table"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/components/{id}/assets": {
      "get": {
        "description": "Returns a list of which assets a component has been checked out to",
        "summary": "componentsidassets",
        "operationId": "componentsidassets",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/fields/{id}": {
      "put": {
        "description": "Update a custom field",
        "summary": "update-fields",
        "operationId": "update-fields",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Custom field ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/FieldsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/FieldsResponse"
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Fields401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Fields405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a custom field",
        "summary": "fieldsid-1",
        "operationId": "fieldsid-1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Custom field ID"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Fields401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Fields405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Return field info by id",
        "summary": "fieldsid",
        "operationId": "fieldsid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The ID number of the custom field"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/FieldsResponse"
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Fields401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Fields405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Update a custom field",
        "summary": "fieldsid-2",
        "operationId": "fieldsid-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Custom field ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/FieldsRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/FieldsResponse"
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Fields401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Fields405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/fields": {
      "post": {
        "description": "Create a custom field",
        "summary": "fields-2",
        "operationId": "fields-2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/FieldsRequest2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/Fields401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/Fields405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/fields/{id}/associate": {
      "post": {
        "description": "Associate a custom field with a custom fieldset",
        "summary": "fieldsidassociate",
        "operationId": "fieldsidassociate",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Custom field ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/FieldsAssociateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/FieldsAssociateResponse"
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/FieldsAssociate401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/FieldsAssociate405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/fieldsets/{id}/fields": {
      "get": {
        "description": "Return list of associated fields within a fieldset",
        "summary": "fieldsetsidfields",
        "operationId": "fieldsetsidfields",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The ID number of the fieldset"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/FieldsetsFields401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/FieldsetsFields405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "description": "Get details on the current user accessing the API",
        "summary": "usersme",
        "operationId": "usersme",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "default": ""
            },
            "headers": {}
          }
        }
      }
    },
    "/fields/{id}/disassociate": {
      "post": {
        "description": "Removed the association of a custom field with a fieldset",
        "summary": "fieldsiddisassociate",
        "operationId": "fieldsiddisassociate",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Custom field ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/FieldsDisassociateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/FieldsDisassociateResponse"
            },
            "headers": {}
          },
          "401": {
            "description": "401",
            "schema": {
              "$ref": "#/definitions/FieldsDisassociate401Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "message": "Unauthorized."
              }
            },
            "headers": {}
          },
          "405": {
            "description": "405",
            "schema": {
              "$ref": "#/definitions/FieldsDisassociate405Error1"
            },
            "examples": {
              "application/json": {
                "status": "error",
                "messages": "Method not allowed"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/components/{id}/checkin": {
      "post": {
        "description": "Check a component back in from an asset",
        "summary": "componentsidcheckin",
        "operationId": "componentsidcheckin",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "ID of the record in the components_assets *join* record"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ComponentsCheckinRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/components/{id}/checkout": {
      "post": {
        "description": "Check an accessory out to an asset",
        "summary": "componentsidcheckout",
        "operationId": "componentsidcheckout",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "ID of the component to check out"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ComponentsCheckoutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    },
    "/licenses/{id}/seat/{seatId}": {
      "patch": {
        "description": "Checkin or checkout a license seat",
        "summary": "licensesidseatseatid",
        "operationId": "licensesidseatseatid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "ID (not name) of license being updated"
          },
          {
            "name": "seatId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The seat ID of the license you wish to checkin or checkout"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LicensesSeatRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          },
          "400": {
            "description": "400",
            "schema": {
              "type": "object",
              "default": ""
            },
            "examples": {
              "application/json": {}
            },
            "headers": {}
          }
        }
      }
    }
  },
  "definitions": {
    "HardwareRequest": {
      "title": "HardwareRequest",
      "type": "object",
      "properties": {
        "asset_tag": {
          "description": "The asset tag of the asset. If auto-incrementing is enabled in the settings, this is not required and will be generated.",
          "type": "string"
        },
        "status_id": {
          "description": "The id of the related status label",
          "type": "integer",
          "format": "int32"
        },
        "model_id": {
          "description": "The id of the related asset model",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Asset name",
          "type": "string"
        },
        "image": {
          "type": "string",
          "format": "binary"
        },
        "serial": {
          "type": "string"
        },
        "purchase_date": {
          "type": "string",
          "format": "date"
        },
        "purchase_cost": {
          "type": "number",
          "format": "double"
        },
        "order_number": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "archived": {
          "type": "boolean",
          "default": false
        },
        "warranty_months": {
          "type": "integer",
          "format": "int32"
        },
        "depreciate": {
          "type": "boolean",
          "default": false
        },
        "supplier_id": {
          "type": "integer",
          "format": "int32"
        },
        "requestable": {
          "type": "boolean",
          "default": false
        },
        "rtd_location_id": {
          "description": "The corresponding location_id from a location in the locations table that should indicate where the item is when it's NOT checked out to someone",
          "type": "integer",
          "format": "int32"
        },
        "last_audit_date": {
          "type": "string",
          "format": "date"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "asset_tag",
        "status_id",
        "model_id"
      ]
    },
    "HardwareResponse": {
      "title": "HardwareResponse",
      "type": "object",
      "properties": {
        "status": {
          "example": "success",
          "type": "string"
        },
        "messages": {
          "example": "Asset created successfully. :)",
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/Payload"
        }
      }
    },
    "Payload": {
      "title": "Payload",
      "type": "object",
      "properties": {
        "model_id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {},
        "serial": {},
        "company_id": {
          "type": "string"
        },
        "order_number": {},
        "notes": {},
        "asset_tag": {
          "example": "SNIPE-IT-RULES",
          "type": "string"
        },
        "user_id": {
          "example": 2,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "archived": {
          "example": "0",
          "type": "string"
        },
        "physical": {
          "example": "1",
          "type": "string"
        },
        "depreciate": {
          "example": "0",
          "type": "string"
        },
        "status_id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "warranty_months": {},
        "purchase_cost": {},
        "purchase_date": {},
        "assigned_to": {},
        "supplier_id": {},
        "requestable": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rtd_location_id": {},
        "updated_at": {
          "example": "2017-10-19 08:43:45",
          "type": "string"
        },
        "created_at": {
          "example": "2017-10-19 08:43:45",
          "type": "string"
        },
        "id": {
          "example": 180,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "model": {
          "$ref": "#/definitions/Model"
        }
      }
    },
    "Model": {
      "title": "Model",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Macbook Pro 13\"",
          "type": "string"
        },
        "model_number": {
          "example": "4929525240061",
          "type": "string"
        },
        "manufacturer_id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "category_id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "created_at": {
          "example": "2017-10-18 21:00:07",
          "type": "string"
        },
        "updated_at": {
          "example": "2017-10-18 21:00:07",
          "type": "string"
        },
        "depreciation_id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "eol": {
          "example": 36,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "image": {},
        "deprecated_mac_address": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "fieldset_id": {},
        "notes": {
          "example": "Created by demo seeder",
          "type": "string"
        },
        "requestable": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        }
      }
    },
    "ValidationError": {
      "title": "ValidationError",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "$ref": "#/definitions/Messages"
        }
      }
    },
    "Messages": {
      "title": "Messages",
      "type": "object",
      "properties": {
        "status_id": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "HardwareByID":{
      "title":"HardwareByID",
      "type":"object",
      
      "properties":{
      "id": {
        "example": 1,
        "type": "integer",
        "default": 0,
        "format": "int32"
      },
      "name": {
        "example": "Macbook Pro 13\"",
        "type": "string"
      },
      "asset_tag": {
        "example": "4929525240061",
        "type": "string"
      },
      "serial":{
        "type":"string"
      },
      "model":{
        "$ref":"#/definitions/Model"
      },
      "model_number":{
        "type":"string"
      },
      "status_lable":{
        "$ref": "#/definitions/StatusLabel"
      },
      "category":{
        "$ref": "#/definitions/Category"
      },
      "manufacturer":{
        "$ref": "#/definitions/Manufacturer"
      },
      "supplier":{
        "$ref": "#/definitions/Supplier"
      },
      "note":{
        "type":"string"
      },
      "order_number"{
        "type":"string"
      },
      "company":{
        "$ref":"#/definitions/Company"
      },
      "location":{
        "$ref": "#/definitions/Location"
      },
      "rtd_location":{
        "$ref": "#/definitions/RtdLocation"
      },
      "image":{},
      "assigned_to":{
        "$ref": "#/definitions/AssignedTo"
      },
      "warranty":{},
      "warranty_expires":{},
      "created_at":{
        "$ref": "#/definitions/CreatedAt"
      },
      "updated_at":{
        "$ref": "#/definitions/UpdatedAt"
      },
      "purchase_date":{
        "$ref": "#/definitions/PurchaseDate"
      },
      "last_checkout":{
        "$ref": "#/definitions/LastCheckout"
      },
      "expected_checkin":{
        "$ref": "#/definitions/ExpectedCheckin"
      },
      "purchase_cost":{
        "type": "string"
      },
      "user_can_checkout":{
        "type": "boolean"
      },
      "custom_fields":{
        "type": "array",
          "items": {}
      },
      "available_actions":{
        "$ref": "#/definitions/AvailableActions"
      }

    }
    ,
    "Hardware401Error1": {
      "title": "Hardware401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "HardwareResponse1": {
      "title": "HardwareResponse1",
      "type": "object",
      "properties": {
        "total": {
          "example": 1325,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row"
          }
        }
      }
    },
    "Row": {
      "title": "Row",
      "type": "object",
      "properties": {
        "id": {
          "example": 1377,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "asset_tag": {
          "example": "7575222087",
          "type": "string"
        },
        "serial": {
          "type": "string"
        },
        "model": {
          "$ref": "#/definitions/Model1"
        },
        "model_number": {
          "example": "4929187407768",
          "type": "string"
        },
        "status_label": {
          "$ref": "#/definitions/StatusLabel"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "manufacturer": {
          "$ref": "#/definitions/Manufacturer"
        },
        "supplier": {},
        "notes": {},
        "order_number": {},
        "company": {},
        "location": {},
        "rtd_location": {},
        "image": {
          "example": "https://snipe-it.dev:1337/uploads/models/imacpro.jpg",
          "type": "string"
        },
        "assigned_to": {},
        "warranty_months": {},
        "warranty_expires": {},
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "deleted_at": {},
        "purchase_date": {},
        "last_checkout": {},
        "expected_checkin": {},
        "purchase_cost": {},
        "user_can_checkout": {
          "example": true,
          "type": "boolean",
          "default": true
        },
        "custom_fields": {
          "type": "array",
          "items": {}
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions"
        }
      }
    },
    "Model1": {
      "title": "Model1",
      "type": "object",
      "properties": {
        "id": {
          "example": 8,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "iMac Pro",
          "type": "string"
        }
      }
    },
    "StatusLabel": {
      "title": "StatusLabel",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Ready to Deploy",
          "type": "string"
        },
        "status_meta": {
          "example": "deployable",
          "type": "string"
        }
      }
    },
    "Category": {
      "title": "Category",
      "type": "object",
      "properties": {
        "id": {
          "example": 2,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Desktops",
          "type": "string"
        }
      }
    },
    "Manufacturer": {
      "title": "Manufacturer",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Apple",
          "type": "string"
        }
      }
    },
    "CreatedAt": {
      "title": "CreatedAt",
      "type": "object",
      "properties": {
        "datetime": {
          "example": "2017-11-22 08:57:39",
          "type": "string"
        },
        "formatted": {
          "example": "Wed Nov 22, 2017 8:57AM",
          "type": "string"
        }
      }
    },
    "UpdatedAt": {
      "title": "UpdatedAt",
      "type": "object",
      "properties": {
        "datetime": {
          "example": "2017-11-22 08:57:39",
          "type": "string"
        },
        "formatted": {
          "example": "Wed Nov 22, 2017 8:57AM",
          "type": "string"
        }
      }
    },
    "AvailableActions": {
      "title": "AvailableActions",
      "type": "object",
      "properties": {
        "checkout": {
          "example": true,
          "type": "boolean",
          "default": true
        },
        "checkin": {
          "example": true,
          "type": "boolean",
          "default": true
        },
        "clone": {
          "example": true,
          "type": "boolean",
          "default": true
        },
        "restore": {
          "example": false,
          "type": "boolean",
          "default": true
        },
        "update": {
          "example": true,
          "type": "boolean",
          "default": true
        },
        "delete": {
          "example": true,
          "type": "boolean",
          "default": true
        }
      }
    },
    "Hardware401Error21": {
      "title": "Hardware401Error21",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "An Error has occured! Unauthenticated.",
          "type": "string"
        },
        "payload": {}
      }
    },
    "Hardware405Error1": {
      "title": "Hardware405Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Method not allowed",
          "type": "string"
        },
        "payload": {}
      }
    },
    "HardwareResponse2": {
      "title": "HardwareResponse2",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "asset_tag": {
          "example": "389658657",
          "type": "string"
        },
        "serial": {
          "example": "b9b47837-13d9-33d3-a7d3-815a8503be44",
          "type": "string"
        },
        "model": {
          "$ref": "#/definitions/Model1"
        },
        "model_number": {
          "example": "4929525240061",
          "type": "string"
        },
        "status_label": {
          "$ref": "#/definitions/StatusLabel"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "manufacturer": {
          "$ref": "#/definitions/Manufacturer"
        },
        "supplier": {
          "$ref": "#/definitions/Supplier"
        },
        "notes": {
          "example": "Created by DB seeder",
          "type": "string"
        },
        "order_number": {
          "example": "4243135",
          "type": "string"
        },
        "company": {},
        "location": {
          "$ref": "#/definitions/Location"
        },
        "rtd_location": {
          "$ref": "#/definitions/RtdLocation"
        },
        "image": {},
        "assigned_to": {
          "$ref": "#/definitions/AssignedTo"
        },
        "warranty": {},
        "warranty_expires": {},
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "purchase_date": {
          "$ref": "#/definitions/PurchaseDate"
        },
        "last_checkout": {
          "$ref": "#/definitions/LastCheckout"
        },
        "expected_checkin": {
          "$ref": "#/definitions/ExpectedCheckin"
        },
        "purchase_cost": {
          "example": "1114.86",
          "type": "string"
        },
        "user_can_checkout": {
          "example": false,
          "type": "boolean",
          "default": true
        },
        "custom_fields": {
          "type": "array",
          "items": {}
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions1"
        }
      }
    },
    "Supplier": {
      "title": "Supplier",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Harvey-Hettinger",
          "type": "string"
        }
      }
    },
    "Location": {
      "title": "Location",
      "type": "object",
      "properties": {
        "id": {
          "example": 3,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Tonystad",
          "type": "string"
        }
      }
    },
    "RtdLocation": {
      "title": "RtdLocation",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Lake Catharineburgh",
          "type": "string"
        }
      }
    },
    "AssignedTo": {
      "title": "AssignedTo",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "username": {
          "example": "admin",
          "type": "string"
        },
        "name": {
          "example": "Admin User",
          "type": "string"
        },
        "first_name": {
          "example": "Admin",
          "type": "string"
        },
        "last_name": {
          "example": "User",
          "type": "string"
        },
        "employee_number": {
          "example": "19135",
          "type": "string"
        },
        "type": {
          "example": "user",
          "type": "string"
        }
      }
    },
    "PurchaseDate": {
      "title": "PurchaseDate",
      "type": "object",
      "properties": {
        "date": {
          "example": "2016-12-03",
          "type": "string"
        },
        "formatted": {
          "example": "Sat Dec 03, 2016",
          "type": "string"
        }
      }
    },
    "LastCheckout": {
      "title": "LastCheckout",
      "type": "object",
      "properties": {
        "datetime": {
          "example": "2017-10-05 08:30:20",
          "type": "string"
        },
        "formatted": {
          "example": "Thu Oct 05, 2017 8:30AM",
          "type": "string"
        }
      }
    },
    "ExpectedCheckin": {
      "title": "ExpectedCheckin",
      "type": "object",
      "properties": {
        "date": {
          "example": "2017-11-03",
          "type": "string"
        },
        "formatted": {
          "example": "Fri Nov 03, 2017",
          "type": "string"
        }
      }
    },
    "AvailableActions1": {
      "title": "AvailableActions1",
      "type": "object",
      "properties": {
        "checkout": {
          "example": true,
          "type": "boolean",
          "default": true
        },
        "checkin": {
          "example": true,
          "type": "boolean",
          "default": true
        },
        "clone": {
          "example": true,
          "type": "boolean",
          "default": true
        },
        "update": {
          "example": true,
          "type": "boolean",
          "default": true
        },
        "delete": {
          "example": true,
          "type": "boolean",
          "default": true
        }
      }
    },
    "NotFound": {
      "title": "NotFound",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Asset does not exist.",
          "type": "string"
        }
      }
    },
    "Hardware401Error41": {
      "title": "Hardware401Error41",
      "type": "object",
      "properties": {
        "error": {
          "example": "Unauthenticated.",
          "type": "string"
        }
      }
    },
    "Hardware404Error1": {
      "title": "Hardware404Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Asset does not exist.",
          "type": "string"
        }
      }
    },
    "HardwareRequest1": {
      "title": "HardwareRequest1",
      "type": "object",
      "properties": {
        "asset_tag": {
          "description": "Unique asset tag of the asset",
          "type": "string"
        },
        "notes": {
          "description": "Asset notes",
          "type": "string",
          "default": "null"
        },
        "status_id": {
          "description": "The id of the corresponding status label",
          "type": "integer",
          "format": "int32"
        },
        "model_id": {
          "description": "The id of the associated asset model id",
          "type": "integer",
          "format": "int32"
        },
        "last_checkout": {
          "description": "Date the asset was last checked out",
          "type": "string",
          "format": "date"
        },
        "assigned_to": {
          "description": "The id of the user the asset is currently checked out to",
          "type": "integer",
          "format": "int32"
        },
        "company_id": {
          "description": "The id of an associated company id",
          "type": "integer",
          "format": "int32"
        },
        "serial": {
          "description": "Serial number of the asset",
          "type": "string",
          "default": "null"
        },
        "order_number": {
          "description": "Order number for the asset",
          "type": "string",
          "default": "null"
        },
        "warranty_months": {
          "description": "Number of months for the asset warranty",
          "type": "integer",
          "format": "int32"
        },
        "purchase_cost": {
          "description": "Purchase cost of the asset, without a currency symbol",
          "type": "number",
          "format": "double"
        },
        "purchase_date": {
          "description": "Date of asset purchase",
          "type": "string",
          "format": "date"
        },
        "requestable": {
          "description": "Whether or not the asset can be requested by users with the permission to request assets",
          "type": "boolean",
          "default": false
        },
        "archived": {
          "description": "Whether or not the asset is archived. Archived assets cannot be checked out and do not show up in the deployable asset screens",
          "type": "boolean",
          "default": false
        },
        "rtd_location_id": {
          "description": "The id that corresponds to the location where the asset is usually located when not checked out",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Asset name",
          "type": "string",
          "default": "null"
        },
        "location_id": {
          "type": "string",
          "default": "null"
        },
        "last_audit_date": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "Hardware500Error1": {
      "title": "Hardware500Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "$ref": "#/definitions/Messages"
        }
      }
    },
    "HardwareRequest2": {
      "title": "HardwareRequest2",
      "type": "object",
      "properties": {
        "asset_tag": {
          "description": "Unique asset tag of the asset",
          "type": "string"
        },
        "status_id": {
          "description": "The id of the corresponding status label",
          "type": "integer",
          "format": "int32"
        },
        "model_id": {
          "description": "The id of the associated asset model id",
          "type": "integer",
          "format": "int32"
        },
        "notes": {
          "description": "Asset notes",
          "type": "string"
        },
        "last_checkout": {
          "description": "Date the asset was last checked out",
          "type": "string",
          "format": "date"
        },
        "assigned_to": {
          "description": "The id of the user the asset is currently checked out to",
          "type": "integer",
          "format": "int32"
        },
        "company_id": {
          "description": "The id of an associated company id",
          "type": "integer",
          "format": "int32"
        },
        "serial": {
          "description": "Serial number of the asset",
          "type": "string",
          "default": "null"
        },
        "order_number": {
          "description": "Order number for the asset",
          "type": "string"
        },
        "warranty_months": {
          "description": "Number of months for the asset warranty",
          "type": "integer",
          "format": "int32"
        },
        "purchase_cost": {
          "description": "Purchase cost of the asset, without a currency symbol",
          "type": "number",
          "format": "double"
        },
        "purchase_date": {
          "description": "Date of asset purchase",
          "type": "string",
          "format": "date"
        },
        "requestable": {
          "description": "Whether or not the asset can be requested by users with the permission to request assets",
          "type": "boolean",
          "default": false
        },
        "archived": {
          "description": "Whether or not the asset is archived. Archived assets cannot be checked out and do not show up in the deployable asset screens",
          "type": "boolean",
          "default": false
        },
        "rtd_location_id": {
          "description": "The id that corresponds to the location where the asset is usually located when not checked out",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Asset name",
          "type": "string",
          "default": "null"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        },
        "image": {
          "type": "string",
          "format": "binary"
        }
      },
      "required": [
        "asset_tag",
        "status_id",
        "model_id"
      ]
    },
    "HardwareResponse3": {
      "title": "HardwareResponse3",
      "type": "object",
      "properties": {
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row1"
          }
        }
      }
    },
    "Row1": {
      "title": "Row1",
      "type": "object",
      "properties": {
        "id": {
          "example": "45",
          "type": "string"
        },
        "asset_tag": {
          "example": "976946724",
          "type": "string"
        },
        "assigned_to": {
          "type": "string"
        },
        "category": {
          "example": "Reiciendis ea.",
          "type": "string"
        },
        "companyName": {
          "example": "Williamson-Kuhn",
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "eol": {
          "example": "1991-10-19",
          "type": "string"
        },
        "expected_checkin": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "last_checkout": {
          "type": "string"
        },
        "location": {
          "example": "Expanded system",
          "type": "string"
        },
        "manufacturer": {
          "example": "Farrell Group",
          "type": "string"
        },
        "model": {
          "example": "Profound zero",
          "type": "string"
        },
        "model_number": {},
        "name": {
          "example": "Programmable concept",
          "type": "string"
        },
        "notes": {
          "example": "Ipsa pariatur sunt aut.",
          "type": "string"
        },
        "order_number": {
          "type": "string"
        },
        "purchase_cost": {
          "example": "689.30",
          "type": "string"
        },
        "purchase_date": {
          "example": "1991-09-19",
          "type": "string"
        },
        "serial": {
          "example": "f5f06bb3-2420",
          "type": "string"
        },
        "status_label": {
          "example": "Ready to Deploy",
          "type": "string"
        }
      }
    },
    "CompaniesResponse": {
      "title": "CompaniesResponse",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Lebsack and Sons",
          "type": "string"
        },
        "image": {},
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "assets_count": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "licenses_count": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "accessories_count": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "consumables_count": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "components_count": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "users_count": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions2"
        }
      }
    },
    "AvailableActions2": {
      "title": "AvailableActions2",
      "type": "object",
      "properties": {
        "update": {
          "example": true,
          "type": "boolean",
          "default": true
        },
        "delete": {
          "example": true,
          "type": "boolean",
          "default": true
        }
      }
    },
    "Companies401Error1": {
      "title": "Companies401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "An Error has occured! Unauthenticated.",
          "type": "string"
        },
        "payload": {}
      }
    },
    "Companies404Error1": {
      "title": "Companies404Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Company not found",
          "type": "string"
        }
      }
    },
    "Companies405Error1": {
      "title": "Companies405Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Method not allowed",
          "type": "string"
        },
        "payload": {}
      }
    },
    "CompaniesRequest": {
      "title": "CompaniesRequest",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "CompaniesResponse1": {
      "title": "CompaniesResponse1",
      "type": "object",
      "properties": {
        "id": {
          "example": 3,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Rohan-Bergstrom",
          "type": "string"
        },
        "created_at": {
          "example": "2017-01-11 03:31:25",
          "type": "string"
        },
        "updated_at": {
          "example": "2017-01-11 03:31:25",
          "type": "string"
        }
      }
    },
    "Companies401Error21": {
      "title": "Companies401Error21",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "Companies405Error21": {
      "title": "Companies405Error21",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Method not allowed",
          "type": "string"
        }
      }
    },
    "CompaniesResponse2": {
      "title": "CompaniesResponse2",
      "type": "object",
      "properties": {
        "status": {
          "example": "success",
          "type": "string"
        },
        "messages": {
          "example": "The Company was deleted successfully.",
          "type": "string"
        }
      }
    },
    "CompaniesResponse4": {
      "title": "CompaniesResponse4",
      "type": "object",
      "properties": {
        "total": {
          "example": 4,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row2"
          }
        }
      }
    },
    "Row2": {
      "title": "Row2",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Lebsack and Sons",
          "type": "string"
        },
        "image": {},
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "assets_count": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "licenses_count": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "accessories_count": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "consumables_count": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "components_count": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "users_count": {
          "example": 13,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions2"
        }
      }
    },
    "CompaniesResponse5": {
      "title": "CompaniesResponse5",
      "type": "object",
      "properties": {
        "status": {
          "example": "success",
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/Payload1"
        },
        "messages": {
          "example": "Company created successfully.",
          "type": "string"
        }
      }
    },
    "Payload1": {
      "title": "Payload1",
      "type": "object",
      "properties": {
        "name": {
          "example": "Vloorb",
          "type": "string"
        },
        "updated_at": {
          "example": "2017-01-12 19:56:33",
          "type": "string"
        },
        "created_at": {
          "example": "2017-01-12 19:56:33",
          "type": "string"
        },
        "id": {
          "example": 14,
          "type": "integer",
          "default": 0,
          "format": "int32"
        }
      }
    },
    "LocationsRequest": {
      "title": "LocationsRequest",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "ldap_ou": {
          "type": "string"
        },
        "parent_id": {
          "type": "integer",
          "format": "int32"
        },
        "currency": {
          "type": "string"
        },
        "manager_id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "name"
      ]
    },
    "ModelsRequest": {
      "title": "ModelsRequest",
      "type": "object",
      "properties": {
        "name": {
          "description": "Model name",
          "type": "string"
        },
        "model_number": {
          "description": "Part or model number of the model",
          "type": "string"
        },
        "category_id": {
          "type": "integer",
          "format": "int32"
        },
        "manufacturer_id": {
          "type": "integer",
          "format": "int32"
        },
        "eol": {
          "description": "Number of months until this model's assets are considered EOL",
          "type": "integer",
          "format": "int32"
        },
        "fieldset_id": {
          "description": "The ID of an EXISTING custom fieldset",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "name",
        "category_id",
        "manufacturer_id"
      ]
    },
    "ModelsResponse": {
      "title": "ModelsResponse",
      "type": "object",
      "properties": {
        "id": {
          "example": 3,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Rohan-Bergstrom",
          "type": "string"
        },
        "created_at": {
          "example": "2017-01-11 03:31:25",
          "type": "string"
        },
        "updated_at": {
          "example": "2017-01-11 03:31:25",
          "type": "string"
        }
      }
    },
    "Models401Error1": {
      "title": "Models401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "Models405Error1": {
      "title": "Models405Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Method not allowed",
          "type": "string"
        }
      }
    },
    "AccessoriesResponse": {
      "title": "AccessoriesResponse",
      "type": "object",
      "properties": {
        "total": {
          "example": 4,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row3"
          }
        }
      }
    },
    "Row3": {
      "title": "Row3",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "USB Keyboard",
          "type": "string"
        },
        "company": {},
        "manufacturer": {
          "$ref": "#/definitions/Manufacturer"
        },
        "supplier": {
          "$ref": "#/definitions/Supplier"
        },
        "model_number": {
          "example": "2033154",
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "notes": {},
        "qty": {
          "example": 15,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "purchase_date": {},
        "purchase_cost": {},
        "order_number": {},
        "min_qty": {
          "example": 2,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "remaining_qty": {
          "example": 15,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "image": {},
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions4"
        },
        "user_can_checkout": {
          "example": true,
          "type": "boolean",
          "default": true
        }
      }
    },
    "AvailableActions4": {
      "title": "AvailableActions4",
      "type": "object",
      "properties": {
        "checkout": {
          "example": true,
          "type": "boolean",
          "default": true
        },
        "checkin": {
          "example": false,
          "type": "boolean",
          "default": true
        },
        "update": {
          "example": true,
          "type": "boolean",
          "default": true
        },
        "delete": {
          "example": true,
          "type": "boolean",
          "default": true
        }
      }
    },
    "Accessories401Error1": {
      "title": "Accessories401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "AccessoriesRequest": {
      "title": "AccessoriesRequest",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "qty": {
          "description": "Quantity of the accessory you have",
          "type": "integer",
          "format": "int32"
        },
        "order_number": {
          "description": "Order number for this accessory.",
          "type": "string"
        },
        "purchase_cost": {
          "description": "Cost of item being purchased.",
          "type": "number",
          "format": "double"
        },
        "purchase_date": {
          "description": "Date accessory was purchased",
          "type": "string"
        },
        "model_number": {
          "description": "Model number of Accessory",
          "type": "string"
        },
        "category_id": {
          "description": "ID number of the category the accessory belongs to",
          "type": "integer",
          "format": "int32"
        },
        "company_id": {
          "description": "ID Number of the company the accessory is assigned to",
          "type": "integer",
          "format": "int32"
        },
        "location_id": {
          "description": "ID number of the location the accessory is assigned to",
          "type": "integer",
          "format": "int32"
        },
        "manufacturer_id": {
          "description": "ID number of the manufacturer for this accessory.",
          "type": "integer",
          "format": "int32"
        },
        "supplier_id": {
          "description": "ID number of the supplier for this accessory",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "name",
        "qty",
        "category_id"
      ]
    },
    "UsersRequest": {
      "title": "UsersRequest",
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "password_confirmation": {
          "description": "Needs to match the 'password' exactly",
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "permissions": {
          "type": "string"
        },
        "activated": {
          "type": "boolean"
        },
        "phone": {
          "type": "string"
        },
        "jobtitle": {
          "type": "string"
        },
        "manager_id": {
          "type": "integer",
          "format": "int32"
        },
        "employee_num": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "company_id": {
          "type": "integer",
          "format": "int32"
        },
        "two_factor_enrolled": {
          "type": "boolean"
        },
        "two_factor_optin": {
          "type": "boolean"
        },
        "department_id": {
          "type": "integer",
          "format": "int32"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "description": "ID of the group or groups the user should be associated with. This can be a single ID number, or an array, like [1,2,3]",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "first_name",
        "username",
        "password",
        "password_confirmation"
      ]
    },
    "StatuslabelsResponse": {
      "title": "StatuslabelsResponse",
      "type": "object",
      "properties": {
        "total": {
          "example": 5,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row4"
          }
        }
      }
    },
    "Row4": {
      "title": "Row4",
      "type": "object",
      "properties": {
        "id": {
          "example": 8,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "API TEST",
          "type": "string"
        },
        "type": {
          "example": "deployable",
          "type": "string"
        },
        "color": {},
        "show_in_nav": {
          "example": false,
          "type": "boolean",
          "default": true
        },
        "assets_count": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "notes": {
          "type": "string"
        },
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions2"
        }
      }
    },
    "StatuslabelsRequest": {
      "title": "StatuslabelsRequest",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "description": "`deployable` | `pending` | `archived`",
          "type": "string",
          "default": "deployable"
        },
        "notes": {
          "type": "string"
        },
        "color": {
          "description": "Hex code showing what color the status label should be on the pie chart in the dashboard",
          "type": "string"
        },
        "show_in_nav": {
          "description": "1 or 0 - determine whether the status label should show in the left-side nav of the web GUI",
          "type": "boolean",
          "default": false
        },
        "default_label": {
          "description": "1 or 0 - determine whether it should be bubbled up to the top of the list of available statuses",
          "type": "boolean",
          "default": false
        }
      },
      "required": [
        "name"
      ]
    },
    "StatuslabelsResponse1": {
      "title": "StatuslabelsResponse1",
      "type": "object",
      "properties": {
        "status": {
          "example": "success",
          "type": "string"
        },
        "messages": {
          "example": "Status Label created successfully.",
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/Payload2"
        }
      }
    },
    "Payload2": {
      "title": "Payload2",
      "type": "object",
      "properties": {
        "name": {
          "example": "Test Status Label",
          "type": "string"
        },
        "deployable": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "pending": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "archived": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "updated_at": {
          "example": "2017-11-22 10:37:07",
          "type": "string"
        },
        "created_at": {
          "example": "2017-11-22 10:37:07",
          "type": "string"
        },
        "id": {
          "example": 8,
          "type": "integer",
          "default": 0,
          "format": "int32"
        }
      }
    },
    "ModelsRequest1": {
      "title": "ModelsRequest1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "model_number": {
          "type": "string"
        },
        "fieldset_id": {
          "type": "integer",
          "format": "int32"
        },
        "manufacturer_id": {
          "type": "integer",
          "format": "int32"
        },
        "category_id": {
          "type": "integer",
          "format": "int32"
        },
        "depreciation_id": {
          "type": "integer",
          "format": "int32"
        },
        "notes": {
          "type": "string"
        },
        "requestable": {
          "type": "boolean"
        }
      }
    },
    "ModelsRequest2": {
      "title": "ModelsRequest2",
      "type": "object",
      "properties": {
        "name": {
          "description": "Model name",
          "type": "string"
        },
        "model_number": {
          "description": "Part or model number of the model",
          "type": "string"
        },
        "category_id": {
          "type": "integer",
          "format": "int32"
        },
        "manufacturer_id": {
          "type": "integer",
          "format": "int32"
        },
        "fieldset_id": {
          "description": "The ID of an EXISTING custom fieldset",
          "type": "integer",
          "format": "int32"
        },
        "eol": {
          "description": "Number of months until this model's assets are considered EOL",
          "type": "integer",
          "format": "int32"
        },
        "depreciation_id": {
          "type": "integer",
          "format": "int32"
        },
        "notes": {
          "type": "string"
        },
        "requestable": {
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "category_id",
        "manufacturer_id"
      ]
    },
    "LocationsRequest2": {
      "title": "LocationsRequest2",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "ldap_ou": {
          "type": "string"
        },
        "manager_id": {
          "type": "integer",
          "format": "int32"
        },
        "parent_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "UsersRequest1": {
      "title": "UsersRequest1",
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "permissions": {
          "type": "string"
        },
        "activated": {
          "type": "boolean"
        },
        "phone": {
          "type": "string"
        },
        "jobtitle": {
          "type": "string"
        },
        "manager_id": {
          "type": "integer",
          "format": "int32"
        },
        "employee_num": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "company_id": {
          "type": "integer",
          "format": "int32"
        },
        "two_factor_enrolled": {
          "type": "boolean"
        },
        "two_factor_optin": {
          "type": "boolean"
        },
        "department_id": {
          "type": "integer",
          "format": "int32"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "description": "ID of the group or groups the user should be associated with. This can be a single ID number, or an array, like [1,2,3]",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "StatuslabelsResponse2": {
      "title": "StatuslabelsResponse2",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Ready to Deploy",
          "type": "string"
        },
        "type": {
          "example": "deployable",
          "type": "string"
        },
        "color": {},
        "show_in_nav": {
          "example": false,
          "type": "boolean",
          "default": true
        },
        "assets_count": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "notes": {
          "example": "Illum voluptatem laboriosam sit consequatur fugiat.",
          "type": "string"
        },
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions2"
        }
      }
    },
    "StatuslabelsRequest1": {
      "title": "StatuslabelsRequest1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "description": "`deployable` | `pending` | `archived`",
          "type": "string",
          "default": "deployable"
        },
        "notes": {
          "type": "string"
        },
        "color": {
          "description": "Hex code showing what color the status label should be on the pie chart in the dashboard",
          "type": "string"
        },
        "show_in_nav": {
          "description": "1 or 0 - determine whether the status label should show in the left-side nav of the web GUI",
          "type": "boolean",
          "default": false
        },
        "default_label": {
          "description": "1 or 0 - determine whether it should be bubbled up to the top of the list of available statuses",
          "type": "boolean",
          "default": false
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "CategoriesRequest": {
      "title": "CategoriesRequest",
      "type": "object",
      "properties": {
        "name": {
          "description": "Model name",
          "type": "string"
        },
        "category_type": {
          "description": "(asset, accessory, consumable, component) - as of post-v5.2, this is no longer case sensitive",
          "type": "string"
        },
        "use_default_eula": {
          "type": "boolean",
          "default": false
        },
        "require_acceptance": {
          "type": "boolean",
          "default": false
        },
        "checkin_email": {
          "description": "Should the user be emailed the EULA and/or an acceptance confirmation email when this item is checked in?",
          "type": "boolean",
          "default": false
        }
      },
      "required": [
        "name",
        "category_type"
      ]
    },
    "CategoriesResponse": {
      "title": "CategoriesResponse",
      "type": "object",
      "properties": {
        "id": {
          "example": 3,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Rohan-Bergstrom",
          "type": "string"
        },
        "created_at": {
          "example": "2017-01-11 03:31:25",
          "type": "string"
        },
        "updated_at": {
          "example": "2017-01-11 03:31:25",
          "type": "string"
        }
      }
    },
    "Categories401Error1": {
      "title": "Categories401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "Categories405Error1": {
      "title": "Categories405Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Method not allowed",
          "type": "string"
        }
      }
    },
    "ManufacturersRequest": {
      "title": "ManufacturersRequest",
      "type": "object",
      "properties": {
        "name": {
          "description": "Manufacturer name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "AccessoriesRequest1": {
      "title": "AccessoriesRequest1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "qty": {
          "description": "Quantity of the accessory you have",
          "type": "integer",
          "format": "int32"
        },
        "order_number": {
          "description": "Order number for this accessory.",
          "type": "string"
        },
        "purchase_cost": {
          "description": "Cost of item being purchased.",
          "type": "number",
          "format": "double"
        },
        "purchase_date": {
          "description": "Date accessory was purchased",
          "type": "string"
        },
        "model_number": {
          "description": "Model number of Accessory",
          "type": "string"
        },
        "category_id": {
          "description": "ID number of the category the accessory belongs to",
          "type": "integer",
          "format": "int32"
        },
        "company_id": {
          "description": "ID Number of the company the accessory is assigned to",
          "type": "integer",
          "format": "int32"
        },
        "location_id": {
          "description": "ID number of the location the accessory is assigned to",
          "type": "integer",
          "format": "int32"
        },
        "manufacturer_id": {
          "description": "ID number of the manufacturer for this accessory.",
          "type": "integer",
          "format": "int32"
        },
        "supplier_id": {
          "description": "ID number of the supplier for this accessory",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ConsumablesResponse": {
      "title": "ConsumablesResponse",
      "type": "object",
      "properties": {
        "total": {
          "example": 3,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row5"
          }
        }
      }
    },
    "Row5": {
      "title": "Row5",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Cardstock (White)",
          "type": "string"
        },
        "image": {},
        "category": {
          "$ref": "#/definitions/Category"
        },
        "company": {
          "$ref": "#/definitions/Company"
        },
        "item_no": {
          "example": "39662828",
          "type": "string"
        },
        "location": {},
        "manufacturer": {
          "$ref": "#/definitions/Manufacturer"
        },
        "min_amt": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "model_number": {},
        "remaining": {
          "example": 10,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "order_number": {
          "example": "39883338",
          "type": "string"
        },
        "purchase_cost": {
          "example": "24.42",
          "type": "string"
        },
        "purchase_date": {
          "$ref": "#/definitions/PurchaseDate"
        },
        "qty": {
          "example": 10,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "user_can_checkout": {
          "example": true,
          "type": "boolean",
          "default": true
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions4"
        }
      }
    },
    "Company": {
      "title": "Company",
      "type": "object",
      "properties": {
        "id": {
          "example": 3,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Frami-Gleichner",
          "type": "string"
        }
      }
    },
    "Consumables401Error1": {
      "title": "Consumables401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "ConsumablesRequest": {
      "title": "ConsumablesRequest",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "qty": {
          "type": "integer",
          "format": "int32"
        },
        "category_id": {
          "type": "integer",
          "format": "int32"
        },
        "company_id": {
          "type": "integer",
          "format": "int32"
        },
        "order_number": {
          "type": "string"
        },
        "manufacturer_id": {
          "type": "string"
        },
        "location_id": {
          "type": "string"
        },
        "requestable": {
          "type": "boolean"
        },
        "purchase_date": {
          "type": "string",
          "format": "date"
        },
        "min_amt": {
          "type": "integer",
          "format": "int32"
        },
        "model_number": {
          "type": "string"
        },
        "item_no": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "qty",
        "category_id"
      ]
    },
    "ComponentsRequest": {
      "title": "ComponentsRequest",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "qty": {
          "type": "integer",
          "format": "int32"
        },
        "category_id": {
          "type": "integer",
          "format": "int32"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        },
        "company_id": {
          "type": "integer",
          "format": "int32"
        },
        "order_number": {
          "type": "string"
        },
        "purchase_date": {
          "type": "string",
          "format": "date"
        },
        "purchase_cost": {
          "type": "number",
          "format": "double"
        },
        "min_amt": {
          "type": "integer",
          "format": "int32"
        },
        "serial": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "qty",
        "category_id"
      ]
    },
    "ComponentsResponse": {
      "title": "ComponentsResponse",
      "type": "object",
      "properties": {
        "total": {
          "example": 4,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row6"
          }
        }
      }
    },
    "Row6": {
      "title": "Row6",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Crucial 4GB DDR3L-1600 SODIMM",
          "type": "string"
        },
        "image": {},
        "serial": {},
        "location": {
          "$ref": "#/definitions/Location"
        },
        "qty": {
          "example": 10,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "min_amt": {
          "example": 2,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "order_number": {
          "example": "48349590",
          "type": "string"
        },
        "purchase_date": {
          "$ref": "#/definitions/PurchaseDate"
        },
        "purchase_cost": {
          "example": "2.45",
          "type": "string"
        },
        "remaining": {
          "example": 10,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "company": {
          "$ref": "#/definitions/Company"
        },
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "user_can_checkout": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions4"
        }
      }
    },
    "Components401Error1": {
      "title": "Components401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "HardwareCheckoutRequest": {
      "title": "HardwareCheckoutRequest",
      "type": "object",
      "properties": {
        "status_id": {
          "description": "Valid status ID",
          "type": "integer",
          "format": "int32"
        },
        "checkout_to_type": {
          "$ref": "#/definitions/CheckoutToType"
        },
        "assigned_user": {
          "description": "The ID of the user to check the asset out to. Required if `checkout_to_type` is set to `user`",
          "type": "integer",
          "format": "int32"
        },
        "assigned_asset": {
          "description": "The asset ID to associate the asset to. Required if `checkout_to_type` is set to `asset`",
          "type": "integer",
          "format": "int32"
        },
        "assigned_location": {
          "description": "The location ID to check the asset out to. Required if `checkout_to_type` is set to `location`",
          "type": "integer",
          "format": "int32"
        },
        "expected_checkin": {
          "description": "Optional date the asset is expected to be checked in",
          "type": "string",
          "format": "date"
        },
        "checkout_at": {
          "description": "Optional date to override the checkout time of now",
          "type": "string",
          "format": "date"
        },
        "name": {
          "description": "Optional new asset name. This is useful for changing the asset's name on new checkout, for example, an asset that was named \"Anna's Macbook Pro\" could be renamed on the fly when it's checked out to Elizabeth, to \"Beth's Macbook Pro\"",
          "type": "string"
        },
        "note": {
          "description": "Optional note about the checkout",
          "type": "string"
        }
      },
      "required": [
        "status_id",
        "checkout_to_type"
      ]
    },
    "CheckoutToType": {
      "title": "CheckoutToType",
      "description": "Type of entity the asset is being checked out to: user, asset, or location",
      "type": "string",
      "enum": [
        "asset",
        "location",
        "user"
      ]
    },
    "HardwareCheckoutResponse": {
      "title": "HardwareCheckoutResponse",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Asset does not exist.",
          "type": "string"
        }
      }
    },
    "HardwareCheckout401Error1": {
      "title": "HardwareCheckout401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "HardwareCheckinRequest": {
      "title": "HardwareCheckinRequest",
      "type": "object",
      "properties": {
        "status_id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "default": "null"
        },
        "note": {
          "description": "Note about the checkin",
          "type": "string"
        },
        "location_id": {
          "description": "Updated Location for this item.",
          "type": "string"
        }
      },
      "required": [
        "status_id"
      ]
    },
    "HardwareCheckinResponse": {
      "title": "HardwareCheckinResponse",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Asset does not exist.",
          "type": "string"
        }
      }
    },
    "HardwareCheckin401Error1": {
      "title": "HardwareCheckin401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "LicensesResponse": {
      "title": "LicensesResponse",
      "type": "object",
      "properties": {
        "total": {
          "example": 4,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row7"
          }
        }
      }
    },
    "Row7": {
      "title": "Row7",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Photoshop",
          "type": "string"
        },
        "company": {},
        "manufacturer": {
          "$ref": "#/definitions/Manufacturer"
        },
        "product_key": {
          "example": "0d5254fb-b9f9-342c-a210-5feba9ea08b0",
          "type": "string"
        },
        "order_number": {
          "example": "27709963",
          "type": "string"
        },
        "purchase_order": {
          "type": "string"
        },
        "purchase_date": {
          "$ref": "#/definitions/PurchaseDate"
        },
        "purchase_cost": {
          "example": "299.99",
          "type": "string"
        },
        "notes": {
          "example": "Created by DB seeder",
          "type": "string"
        },
        "expiration_date": {},
        "seats": {
          "example": 10,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "free_seats_count": {
          "example": 10,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "license_name": {
          "example": "Prof. Alba Sawayn",
          "type": "string"
        },
        "license_email": {
          "example": "merlin50@example.org",
          "type": "string"
        },
        "maintained": {
          "example": false,
          "type": "boolean",
          "default": true
        },
        "supplier": {},
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "user_can_checkout": {
          "example": true,
          "type": "boolean",
          "default": true
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions1"
        }
      }
    },
    "Licenses401Error1": {
      "title": "Licenses401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "LicensesRequest": {
      "title": "LicensesRequest",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of license being created",
          "type": "string"
        },
        "seats": {
          "description": "Number of license seats owned.",
          "type": "integer",
          "format": "int32"
        },
        "company_id": {
          "description": "Id number of company license belongs to",
          "type": "integer",
          "format": "int32"
        },
        "expiration_date": {
          "description": "Date of license expiration",
          "type": "string",
          "format": "date"
        },
        "license_email": {
          "description": "Email address associated with license",
          "type": "string"
        },
        "license_name": {
          "description": "Name of license contact person",
          "type": "string"
        },
        "serial": {
          "type": "string"
        },
        "maintained": {
          "description": "Maintained status of license.",
          "type": "boolean"
        },
        "manufacturer_id": {
          "description": "ID number of manufacturer of license.",
          "type": "integer",
          "format": "int32"
        },
        "notes": {
          "description": "License Notes",
          "type": "string"
        },
        "order_number": {
          "description": "Order number of license purchase",
          "type": "string"
        },
        "purchase_cost": {
          "description": "Cost of license",
          "type": "number",
          "format": "double"
        },
        "purchase_date": {
          "description": "Date of license purchase",
          "type": "string",
          "format": "date"
        },
        "purchase_order": {
          "description": "Purchase Order #",
          "type": "string"
        },
        "reassignable": {
          "description": "Is license reassignable?",
          "type": "boolean"
        },
        "supplier_id": {
          "description": "ID number of license supplier",
          "type": "integer",
          "format": "int32"
        },
        "termination_date": {
          "description": "Termination date for license.",
          "type": "string",
          "format": "date"
        }
      },
      "required": [
        "name",
        "seats"
      ]
    },
    "LicensesResponse1": {
      "title": "LicensesResponse1",
      "type": "object",
      "properties": {
        "status": {
          "example": "success",
          "type": "string"
        },
        "messages": {
          "example": "License created successfully.",
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/Payload5"
        }
      }
    },
    "Payload5": {
      "title": "Payload5",
      "type": "object",
      "properties": {
        "name": {
          "example": "TEST License",
          "type": "string"
        },
        "seats": {
          "example": "25",
          "type": "string"
        },
        "updated_at": {
          "example": "2018-02-25 18:23:49",
          "type": "string"
        },
        "created_at": {
          "example": "2018-02-25 18:23:49",
          "type": "string"
        },
        "id": {
          "example": 9,
          "type": "integer",
          "default": 0,
          "format": "int32"
        }
      }
    },
    "FieldsetsResponse": {
      "title": "FieldsetsResponse",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Asset with MAC Address",
          "type": "string"
        },
        "fields": {
          "$ref": "#/definitions/Fields"
        },
        "models": {
          "$ref": "#/definitions/Models"
        },
        "created_at": {},
        "updated_at": {}
      }
    },
    "Fields": {
      "title": "Fields",
      "type": "object",
      "properties": {
        "total": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row8"
          }
        }
      }
    },
    "Row8": {
      "title": "Row8",
      "type": "object",
      "properties": {
        "name": {
          "example": "Quality-focused local GraphicalUserInterface",
          "type": "string"
        },
        "db_column_name": {
          "example": "_snipeit_quality_focused_local_graphicaluserinterf_2",
          "type": "string"
        },
        "format": {
          "example": "IP",
          "type": "string"
        },
        "required": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        }
      }
    },
    "Models": {
      "title": "Models",
      "type": "object",
      "properties": {
        "total": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {}
        }
      }
    },
    "Fieldsets401Error1": {
      "title": "Fieldsets401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "Fieldsets405Error1": {
      "title": "Fieldsets405Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Method not allowed",
          "type": "string"
        }
      }
    },
    "FieldsetsRequest": {
      "title": "FieldsetsRequest",
      "type": "object",
      "properties": {
        "name": {
          "description": "Model name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "FieldsetsResponse1": {
      "title": "FieldsetsResponse1",
      "type": "object",
      "properties": {
        "status": {
          "example": "success",
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/Payload6"
        },
        "messages": {
          "example": "Fieldset updated successfully.",
          "type": "string"
        }
      }
    },
    "Payload6": {
      "title": "Payload6",
      "type": "object",
      "properties": {
        "id": {
          "example": 2,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Updated Laptop Fields",
          "type": "string"
        },
        "created_at": {
          "example": "2017-01-18 04:42:35",
          "type": "string"
        },
        "updated_at": {
          "example": "2017-07-12 20:07:41",
          "type": "string"
        },
        "user_id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        }
      }
    },
    "FieldsetsResponse2": {
      "title": "FieldsetsResponse2",
      "type": "object",
      "properties": {
        "status": {
          "example": "success",
          "type": "string"
        },
        "messages": {
          "example": "The fieldset was deleted successfully.",
          "type": "string"
        }
      }
    },
    "FieldsetsResponse3": {
      "title": "FieldsetsResponse3",
      "type": "object",
      "properties": {
        "total": {
          "example": 2,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row9"
          }
        }
      }
    },
    "Row9": {
      "title": "Row9",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Mobile Devices",
          "type": "string"
        },
        "fields": {
          "$ref": "#/definitions/Fields1"
        },
        "models": {
          "$ref": "#/definitions/Models1"
        },
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        }
      }
    },
    "Fields1": {
      "title": "Fields1",
      "type": "object",
      "properties": {
        "total": {
          "example": 2,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row10"
          }
        }
      }
    },
    "Row10": {
      "title": "Row10",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "IMEI",
          "type": "string"
        },
        "db_column_name": {
          "example": "_snipeit_imei_1",
          "type": "string"
        },
        "format": {
          "example": "regex:/^[0-9]{15}$/",
          "type": "string"
        },
        "field_values": {},
        "field_values_array": {},
        "type": {
          "example": "text",
          "type": "string"
        },
        "required": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        }
      }
    },
    "Models1": {
      "title": "Models1",
      "type": "object",
      "properties": {
        "total": {
          "example": 2,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row11"
          }
        }
      }
    },
    "Row11": {
      "title": "Row11",
      "type": "object",
      "properties": {
        "id": {
          "example": 15,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "iPhone 6s",
          "type": "string"
        }
      }
    },
    "FieldsetsRequest1": {
      "title": "FieldsetsRequest1",
      "type": "object",
      "properties": {
        "name": {
          "description": "Fieldset name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "ManufacturersRequest1": {
      "title": "ManufacturersRequest1",
      "type": "object",
      "properties": {
        "name": {
          "description": "Model name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "ManufacturersResponse": {
      "title": "ManufacturersResponse",
      "type": "object",
      "properties": {
        "id": {
          "example": 3,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Rohan-Bergstrom",
          "type": "string"
        },
        "created_at": {
          "example": "2017-01-11 03:31:25",
          "type": "string"
        },
        "updated_at": {
          "example": "2017-01-11 03:31:25",
          "type": "string"
        }
      }
    },
    "Manufacturers401Error1": {
      "title": "Manufacturers401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "Manufacturers405Error1": {
      "title": "Manufacturers405Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Method not allowed",
          "type": "string"
        }
      }
    },
    "LicensesRequest1": {
      "title": "LicensesRequest1",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of license being created",
          "type": "string"
        },
        "company_id": {
          "description": "Id number of company license belongs to",
          "type": "integer",
          "format": "int32"
        },
        "expiration_date": {
          "description": "Date of license expiration",
          "type": "string",
          "format": "date"
        },
        "license_email": {
          "description": "Email address associated with license",
          "type": "string"
        },
        "license_name": {
          "description": "Name of license contact person",
          "type": "string"
        },
        "serial": {
          "description": "Product key of the license",
          "type": "string"
        },
        "maintained": {
          "description": "Maintained status of license.",
          "type": "boolean"
        },
        "manufacturer_id": {
          "description": "ID number of manufacturer of license.",
          "type": "integer",
          "format": "int32"
        },
        "notes": {
          "description": "License Notes",
          "type": "string"
        },
        "order_number": {
          "description": "Order number of license purchase",
          "type": "string"
        },
        "purchase_cost": {
          "description": "Cost of license",
          "type": "number",
          "format": "double"
        },
        "purchase_date": {
          "description": "Date of license purchase",
          "type": "string",
          "format": "date"
        },
        "purchase_order": {
          "description": "Purchase Order #",
          "type": "string"
        },
        "reassignable": {
          "description": "Is license reassignable?",
          "type": "boolean"
        },
        "seats": {
          "description": "Number of license seats owned.",
          "type": "integer",
          "format": "int32"
        },
        "supplier_id": {
          "description": "ID number of license supplier",
          "type": "integer",
          "format": "int32"
        },
        "termination_date": {
          "description": "Termination date for license.",
          "type": "string",
          "format": "date"
        }
      }
    },
    "LicensesResponse2": {
      "title": "LicensesResponse2",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Photoshop",
          "type": "string"
        },
        "company": {},
        "manufacturer": {
          "$ref": "#/definitions/Manufacturer"
        },
        "product_key": {
          "example": "0d5254fb-b9f9-342c-a210-5feba9ea08b0",
          "type": "string"
        },
        "order_number": {
          "example": "27709963",
          "type": "string"
        },
        "purchase_order": {
          "type": "string"
        },
        "purchase_date": {
          "$ref": "#/definitions/PurchaseDate"
        },
        "purchase_cost": {
          "example": "299.99",
          "type": "string"
        },
        "notes": {
          "example": "Created by DB seeder",
          "type": "string"
        },
        "expiration_date": {},
        "seats": {
          "example": 10,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "free_seats_count": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "license_name": {
          "example": "Prof. Alba Sawayn",
          "type": "string"
        },
        "license_email": {
          "example": "merlin50@example.org",
          "type": "string"
        },
        "maintained": {
          "example": false,
          "type": "boolean",
          "default": true
        },
        "supplier": {},
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "user_can_checkout": {
          "example": false,
          "type": "boolean",
          "default": true
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions1"
        }
      }
    },
    "MaintenancesResponse": {
      "title": "MaintenancesResponse",
      "type": "object",
      "properties": {
        "total": {
          "example": 2,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row12"
          }
        }
      }
    },
    "Row12": {
      "title": "Row12",
      "type": "object",
      "properties": {
        "id": {
          "example": 2,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "asset": {
          "$ref": "#/definitions/Asset"
        },
        "title": {
          "example": "Test with all fields",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "notes": {
          "example": "This is a test",
          "type": "string"
        },
        "supplier": {
          "$ref": "#/definitions/Supplier"
        },
        "cost": {
          "example": "100.00",
          "type": "string"
        },
        "asset_maintenance_type": {
          "example": "Repair",
          "type": "string"
        },
        "start_date": {
          "$ref": "#/definitions/StartDate"
        },
        "asset_maintenance_time": {
          "example": 20,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "completion_date": {
          "$ref": "#/definitions/CompletionDate"
        },
        "user_id": {
          "$ref": "#/definitions/UserId"
        },
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions2"
        }
      }
    },
    "Asset": {
      "title": "Asset",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Test Name",
          "type": "string"
        },
        "asset_tag": {
          "example": "02948",
          "type": "string"
        }
      }
    },
    "StartDate": {
      "title": "StartDate",
      "type": "object",
      "properties": {
        "datetime": {
          "example": "2018-03-06 00:00:00",
          "type": "string"
        },
        "formatted": {
          "example": "Tue Mar 06, 2018 12:00AM",
          "type": "string"
        }
      }
    },
    "CompletionDate": {
      "title": "CompletionDate",
      "type": "object",
      "properties": {
        "datetime": {
          "example": "2018-03-26 00:00:00",
          "type": "string"
        },
        "formatted": {
          "example": "Mon Mar 26, 2018 12:00AM",
          "type": "string"
        }
      }
    },
    "UserId": {
      "title": "UserId",
      "type": "object",
      "properties": {
        "id": {
          "example": 2,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Snipe E. Head",
          "type": "string"
        }
      }
    },
    "MaintenancesRequest": {
      "title": "MaintenancesRequest",
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "asset_id": {
          "type": "integer",
          "format": "int32"
        },
        "supplier_id": {
          "type": "integer",
          "format": "int32"
        },
        "is_warranty": {
          "type": "boolean"
        },
        "cost": {
          "type": "number",
          "format": "double"
        },
        "notes": {
          "type": "string"
        },
        "asset_maintenance_type": {
          "$ref": "#/definitions/AssetMaintenanceType"
        },
        "start_date": {
          "type": "string",
          "format": "date"
        },
        "completion_date": {
          "type": "string",
          "format": "date"
        }
      },
      "required": [
        "title",
        "asset_id",
        "supplier_id",
        "start_date"
      ]
    },
    "AssetMaintenanceType": {
      "title": "AssetMaintenanceType",
      "type": "string",
      "enum": [
        "Maintenance",
        "Repair",
        "PAT Test",
        "Upgrade",
        "Hardware Support",
        "Software Support"
      ]
    },
    "HardwareAuditRequest": {
      "title": "HardwareAuditRequest",
      "type": "object",
      "properties": {
        "asset_tag": {
          "description": "The asset tag of the asset you wish to audit",
          "type": "string"
        },
        "location_id": {
          "description": "ID of the location you want to associate with the audit",
          "type": "integer",
          "format": "int32"
        },
        "next_audit_date": {
          "description": "The desired next audit date for the asset. If unset, the default audit interval will be used instead",
          "type": "string",
          "format": "date"
        }
      },
      "required": [
        "asset_tag"
      ]
    },
    "HardwareAuditResponse": {
      "title": "HardwareAuditResponse",
      "type": "object",
      "properties": {
        "status": {
          "example": "success",
          "type": "string"
        },
        "messages": {
          "example": "Asset audit successfully logged.",
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/Payload7"
        }
      }
    },
    "Payload7": {
      "title": "Payload7",
      "type": "object",
      "properties": {
        "asset_tag": {
          "example": "SNIPE-IT-RULES",
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "next_audit_date": {
          "$ref": "#/definitions/NextAuditDate"
        }
      }
    },
    "NextAuditDate": {
      "title": "NextAuditDate",
      "type": "object",
      "properties": {
        "datetime": {
          "example": "2019-07-05 00:00:00",
          "type": "string"
        },
        "formatted": {
          "example": "Fri Jul 05, 2019 12:00AM",
          "type": "string"
        }
      }
    },
    "HardwareAudit401Error1": {
      "title": "HardwareAudit401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "HardwareBytagResponse": {
      "title": "HardwareBytagResponse",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "asset_tag": {
          "example": "389658657",
          "type": "string"
        },
        "serial": {
          "example": "b9b47837-13d9-33d3-a7d3-815a8503be44",
          "type": "string"
        },
        "model": {
          "$ref": "#/definitions/Model1"
        },
        "model_number": {
          "example": "4929525240061",
          "type": "string"
        },
        "status_label": {
          "$ref": "#/definitions/StatusLabel"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "manufacturer": {
          "$ref": "#/definitions/Manufacturer"
        },
        "supplier": {
          "$ref": "#/definitions/Supplier"
        },
        "notes": {
          "example": "Created by DB seeder",
          "type": "string"
        },
        "order_number": {
          "example": "4243135",
          "type": "string"
        },
        "company": {},
        "location": {
          "$ref": "#/definitions/Location"
        },
        "rtd_location": {
          "$ref": "#/definitions/RtdLocation"
        },
        "image": {},
        "assigned_to": {
          "$ref": "#/definitions/AssignedTo"
        },
        "warranty": {},
        "warranty_expires": {},
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "purchase_date": {
          "$ref": "#/definitions/PurchaseDate"
        },
        "last_checkout": {
          "$ref": "#/definitions/LastCheckout"
        },
        "expected_checkin": {
          "$ref": "#/definitions/ExpectedCheckin"
        },
        "purchase_cost": {
          "example": "1114.86",
          "type": "string"
        },
        "user_can_checkout": {
          "example": false,
          "type": "boolean",
          "default": true
        },
        "custom_fields": {
          "type": "array",
          "items": {}
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions1"
        }
      }
    },
    "HardwareBytag401Error1": {
      "title": "HardwareBytag401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "HardwareByserialResponse": {
      "title": "HardwareByserialResponse",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "asset_tag": {
          "example": "389658657",
          "type": "string"
        },
        "serial": {
          "example": "b9b47837-13d9-33d3-a7d3-815a8503be44",
          "type": "string"
        },
        "model": {
          "$ref": "#/definitions/Model1"
        },
        "model_number": {
          "example": "4929525240061",
          "type": "string"
        },
        "status_label": {
          "$ref": "#/definitions/StatusLabel"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "manufacturer": {
          "$ref": "#/definitions/Manufacturer"
        },
        "supplier": {
          "$ref": "#/definitions/Supplier"
        },
        "notes": {
          "example": "Created by DB seeder",
          "type": "string"
        },
        "order_number": {
          "example": "4243135",
          "type": "string"
        },
        "company": {},
        "location": {
          "$ref": "#/definitions/Location"
        },
        "rtd_location": {
          "$ref": "#/definitions/RtdLocation"
        },
        "image": {},
        "assigned_to": {
          "$ref": "#/definitions/AssignedTo"
        },
        "warranty": {},
        "warranty_expires": {},
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "purchase_date": {
          "$ref": "#/definitions/PurchaseDate"
        },
        "last_checkout": {
          "$ref": "#/definitions/LastCheckout"
        },
        "expected_checkin": {
          "$ref": "#/definitions/ExpectedCheckin"
        },
        "purchase_cost": {
          "example": "1114.86",
          "type": "string"
        },
        "user_can_checkout": {
          "example": false,
          "type": "boolean",
          "default": true
        },
        "custom_fields": {
          "type": "array",
          "items": {}
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions1"
        }
      }
    },
    "HardwareByserial401Error1": {
      "title": "HardwareByserial401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "DepartmentsResponse": {
      "title": "DepartmentsResponse",
      "type": "object",
      "properties": {
        "total": {
          "example": 44,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row13"
          }
        }
      }
    },
    "Row13": {
      "title": "Row13",
      "type": "object",
      "properties": {
        "id": {
          "example": 44,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "NA Operations",
          "type": "string"
        },
        "image": {},
        "company": {},
        "manager": {},
        "location": {},
        "users_count": {
          "example": "13",
          "type": "string"
        },
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions2"
        }
      }
    },
    "DepartmentsRequest": {
      "title": "DepartmentsRequest",
      "type": "object",
      "properties": {
        "name": {
          "description": "Department name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "DepartmentsResponse1": {
      "title": "DepartmentsResponse1",
      "type": "object",
      "properties": {
        "status": {
          "example": "success",
          "type": "string"
        },
        "messages": {
          "example": "Department created successfully.",
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/Payload8"
        }
      }
    },
    "Payload8": {
      "title": "Payload8",
      "type": "object",
      "properties": {
        "name": {
          "example": "Human Resources",
          "type": "string"
        },
        "user_id": {
          "example": 2,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "manager_id": {},
        "updated_at": {
          "example": "2018-10-31 17:13:32",
          "type": "string"
        },
        "created_at": {
          "example": "2018-10-31 17:13:32",
          "type": "string"
        },
        "id": {
          "example": 45,
          "type": "integer",
          "default": 0,
          "format": "int32"
        }
      }
    },
    "DepartmentsResponse2": {
      "title": "DepartmentsResponse2",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Human Resources",
          "type": "string"
        },
        "image": {},
        "company": {},
        "manager": {},
        "location": {
          "$ref": "#/definitions/Location"
        },
        "users_count": {
          "type": "string"
        },
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions2"
        }
      }
    },
    "DepartmentsResponse3": {
      "title": "DepartmentsResponse3",
      "type": "object",
      "properties": {
        "status": {
          "example": "success",
          "type": "string"
        },
        "messages": {
          "example": "Department updated successfully.",
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/Payload9"
        }
      }
    },
    "Payload9": {
      "title": "Payload9",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Human Resources",
          "type": "string"
        },
        "user_id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "company_id": {},
        "location_id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "manager_id": {},
        "notes": {},
        "created_at": {
          "example": "2018-10-27 16:36:40",
          "type": "string"
        },
        "updated_at": {
          "example": "2018-10-27 16:36:40",
          "type": "string"
        },
        "deleted_at": {},
        "image": {}
      }
    },
    "DepartmentsResponse5": {
      "title": "DepartmentsResponse5",
      "type": "object",
      "properties": {
        "id": {
          "example": 3,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Rohan-Bergstrom",
          "type": "string"
        },
        "created_at": {
          "example": "2017-01-11 03:31:25",
          "type": "string"
        },
        "updated_at": {
          "example": "2017-01-11 03:31:25",
          "type": "string"
        }
      }
    },
    "CannotDelete": {
      "title": "CannotDelete",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "This department is currently associated with at least one user and cannot be deleted. Please update your users to no longer reference this department and try again. ",
          "type": "string"
        },
        "payload": {}
      }
    },
    "Departments401Error1": {
      "title": "Departments401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "Departments405Error1": {
      "title": "Departments405Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Method not allowed",
          "type": "string"
        }
      }
    },
    "UsersLicensesResponse": {
      "title": "UsersLicensesResponse",
      "type": "object",
      "properties": {
        "total": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row14"
          }
        }
      }
    },
    "Row14": {
      "title": "Row14",
      "type": "object",
      "properties": {
        "id": {
          "example": 2,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "Acrobat",
          "type": "string"
        },
        "company": {},
        "manufacturer": {
          "$ref": "#/definitions/Manufacturer"
        },
        "product_key": {
          "example": "935d7ada-f202-3a50-bf26-e6955b9ef675",
          "type": "string"
        },
        "order_number": {
          "example": "13745264",
          "type": "string"
        },
        "purchase_order": {
          "type": "string"
        },
        "purchase_date": {
          "$ref": "#/definitions/PurchaseDate"
        },
        "purchase_cost": {
          "example": "29.99",
          "type": "string"
        },
        "notes": {
          "example": "Created by DB seeder",
          "type": "string"
        },
        "expiration_date": {
          "$ref": "#/definitions/ExpirationDate"
        },
        "seats": {
          "example": 10,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "free_seats_count": {
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "license_name": {
          "example": "Sheridan Wilderman",
          "type": "string"
        },
        "license_email": {
          "example": "timothy30@example.com",
          "type": "string"
        },
        "maintained": {
          "example": false,
          "type": "boolean",
          "default": true
        },
        "supplier": {
          "$ref": "#/definitions/Supplier"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "user_can_checkout": {
          "example": false,
          "type": "boolean",
          "default": true
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions1"
        }
      }
    },
    "ExpirationDate": {
      "title": "ExpirationDate",
      "type": "object",
      "properties": {
        "date": {
          "example": "2019-07-01",
          "type": "string"
        },
        "formatted": {
          "example": "2019-07-01",
          "type": "string"
        }
      }
    },
    "HardwareLicensesResponse": {
      "title": "HardwareLicensesResponse",
      "type": "object",
      "properties": {
        "total": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row14"
          }
        }
      }
    },
    "HardwareLicenses401Error1": {
      "title": "HardwareLicenses401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "UsersAccessoriesResponse": {
      "title": "UsersAccessoriesResponse",
      "type": "object",
      "properties": {
        "total": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row16"
          }
        }
      }
    },
    "Row16": {
      "title": "Row16",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "example": "USB Keyboard",
          "type": "string"
        },
        "company": {},
        "manufacturer": {
          "$ref": "#/definitions/Manufacturer"
        },
        "supplier": {
          "$ref": "#/definitions/Supplier"
        },
        "model_number": {
          "example": "41230142",
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "notes": {},
        "qty": {
          "example": 15,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "purchase_date": {},
        "purchase_cost": {},
        "order_number": {},
        "min_qty": {
          "example": 2,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "remaining_qty": {
          "example": 14,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "image": {
          "example": "https://snipe-it.local:8890/uploads/accessories/usb-keyboard.jpg",
          "type": "string"
        },
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions4"
        },
        "user_can_checkout": {
          "example": true,
          "type": "boolean",
          "default": true
        }
      }
    },
    "HardwareAuditDueResponse": {
      "title": "HardwareAuditDueResponse",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "asset_tag": {
          "example": "389658657",
          "type": "string"
        },
        "serial": {
          "example": "b9b47837-13d9-33d3-a7d3-815a8503be44",
          "type": "string"
        },
        "model": {
          "$ref": "#/definitions/Model1"
        },
        "model_number": {
          "example": "4929525240061",
          "type": "string"
        },
        "status_label": {
          "$ref": "#/definitions/StatusLabel"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "manufacturer": {
          "$ref": "#/definitions/Manufacturer"
        },
        "supplier": {
          "$ref": "#/definitions/Supplier"
        },
        "notes": {
          "example": "Created by DB seeder",
          "type": "string"
        },
        "order_number": {
          "example": "4243135",
          "type": "string"
        },
        "company": {},
        "location": {
          "$ref": "#/definitions/Location"
        },
        "rtd_location": {
          "$ref": "#/definitions/RtdLocation"
        },
        "image": {},
        "assigned_to": {
          "$ref": "#/definitions/AssignedTo"
        },
        "warranty": {},
        "warranty_expires": {},
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "purchase_date": {
          "$ref": "#/definitions/PurchaseDate"
        },
        "last_checkout": {
          "$ref": "#/definitions/LastCheckout"
        },
        "expected_checkin": {
          "$ref": "#/definitions/ExpectedCheckin"
        },
        "purchase_cost": {
          "example": "1114.86",
          "type": "string"
        },
        "user_can_checkout": {
          "example": false,
          "type": "boolean",
          "default": true
        },
        "custom_fields": {
          "type": "array",
          "items": {}
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions1"
        }
      }
    },
    "HardwareAuditDue401Error1": {
      "title": "HardwareAuditDue401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "HardwareAuditOverdueResponse": {
      "title": "HardwareAuditOverdueResponse",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "asset_tag": {
          "example": "389658657",
          "type": "string"
        },
        "serial": {
          "example": "b9b47837-13d9-33d3-a7d3-815a8503be44",
          "type": "string"
        },
        "model": {
          "$ref": "#/definitions/Model1"
        },
        "model_number": {
          "example": "4929525240061",
          "type": "string"
        },
        "status_label": {
          "$ref": "#/definitions/StatusLabel"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "manufacturer": {
          "$ref": "#/definitions/Manufacturer"
        },
        "supplier": {
          "$ref": "#/definitions/Supplier"
        },
        "notes": {
          "example": "Created by DB seeder",
          "type": "string"
        },
        "order_number": {
          "example": "4243135",
          "type": "string"
        },
        "company": {},
        "location": {
          "$ref": "#/definitions/Location"
        },
        "rtd_location": {
          "$ref": "#/definitions/RtdLocation"
        },
        "image": {},
        "assigned_to": {
          "$ref": "#/definitions/AssignedTo"
        },
        "warranty": {},
        "warranty_expires": {},
        "created_at": {
          "$ref": "#/definitions/CreatedAt"
        },
        "updated_at": {
          "$ref": "#/definitions/UpdatedAt"
        },
        "purchase_date": {
          "$ref": "#/definitions/PurchaseDate"
        },
        "last_checkout": {
          "$ref": "#/definitions/LastCheckout"
        },
        "expected_checkin": {
          "$ref": "#/definitions/ExpectedCheckin"
        },
        "purchase_cost": {
          "example": "1114.86",
          "type": "string"
        },
        "user_can_checkout": {
          "example": false,
          "type": "boolean",
          "default": true
        },
        "custom_fields": {
          "type": "array",
          "items": {}
        },
        "available_actions": {
          "$ref": "#/definitions/AvailableActions1"
        }
      }
    },
    "HardwareAuditOverdue401Error1": {
      "title": "HardwareAuditOverdue401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "AccessoriesCheckoutRequest": {
      "title": "AccessoriesCheckoutRequest",
      "type": "object",
      "properties": {
        "assigned_to": {
          "description": "User ID of a user to check an accessory out to",
          "type": "integer",
          "format": "int32"
        },
        "note": {
          "description": "Note comment on the checkout",
          "type": "string"
        }
      },
      "required": [
        "assigned_to"
      ]
    },
    "ConsumablesCheckoutRequest": {
      "title": "ConsumablesCheckoutRequest",
      "type": "object",
      "properties": {
        "assigned_to": {
          "description": "User ID of a user to check an accessory out to",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FieldsRequest": {
      "title": "FieldsRequest",
      "type": "object",
      "properties": {
        "name": {
          "description": "Model name",
          "type": "string"
        },
        "element": {
          "$ref": "#/definitions/Element"
        }
      },
      "required": [
        "name",
        "element"
      ]
    },
    "Element": {
      "title": "Element",
      "description": "The type of form field you want to display",
      "type": "string",
      "enum": [
        "text",
        "textarea",
        "checkbox",
        "radio",
        "listbox"
      ]
    },
    "FieldsResponse": {
      "title": "FieldsResponse",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Fieldset not found",
          "type": "string"
        }
      }
    },
    "Fields401Error1": {
      "title": "Fields401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "Fields405Error1": {
      "title": "Fields405Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Method not allowed",
          "type": "string"
        }
      }
    },
    "FieldsRequest1": {
      "title": "FieldsRequest1",
      "type": "object",
      "properties": {
        "name": {
          "description": "Model name",
          "type": "string"
        },
        "element": {
          "$ref": "#/definitions/Element"
        }
      }
    },
    "FieldsRequest2": {
      "title": "FieldsRequest2",
      "type": "object",
      "properties": {
        "name": {
          "description": "The field's name, which is also the form label",
          "type": "string"
        },
        "element": {
          "$ref": "#/definitions/Element2"
        },
        "field_values": {
          "description": "In the case of list boxes, etc, this should be a list of the options available",
          "type": "string"
        },
        "show_in_email": {
          "description": "Whether or not to show the custom field in email notifications",
          "type": "boolean",
          "default": false
        },
        "format": {
          "description": "Validation constraints on this field",
          "type": "string"
        },
        "field_encrypted": {
          "description": "Whether the field should be encrypted. (This can cause issues if you change it after the field was created.)",
          "type": "boolean",
          "default": false
        },
        "help_text": {
          "description": "Any additional text you wish to display under the new form field to make it clearer what the gauges should be.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "element"
      ]
    },
    "Element2": {
      "title": "Element2",
      "description": "Form field type that should be displayed.",
      "type": "string",
      "enum": [
        "text",
        "textarea",
        "checkbox",
        "radio",
        "listbox"
      ]
    },
    "FieldsAssociateRequest": {
      "title": "FieldsAssociateRequest",
      "type": "object",
      "properties": {
        "fieldset_id": {
          "description": "Fieldset ID",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "fieldset_id"
      ]
    },
    "FieldsAssociateResponse": {
      "title": "FieldsAssociateResponse",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Fieldset not found",
          "type": "string"
        }
      }
    },
    "FieldsAssociate401Error1": {
      "title": "FieldsAssociate401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "FieldsAssociate405Error1": {
      "title": "FieldsAssociate405Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Method not allowed",
          "type": "string"
        }
      }
    },
    "FieldsetsFieldsResponse": {
      "title": "FieldsetsFieldsResponse",
      "type": "object",
      "properties": {
        "total": {
          "example": 3,
          "type": "integer",
          "default": 0,
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row10"
          }
        }
      }
    },
    "FieldsetsFields401Error1": {
      "title": "FieldsetsFields401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "FieldsetsFields405Error1": {
      "title": "FieldsetsFields405Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Method not allowed",
          "type": "string"
        }
      }
    },
    "FieldsDisassociateRequest": {
      "title": "FieldsDisassociateRequest",
      "type": "object",
      "properties": {
        "fieldset_id": {
          "description": "Fieldset ID",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "fieldset_id"
      ]
    },
    "FieldsDisassociateResponse": {
      "title": "FieldsDisassociateResponse",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Fieldset not found",
          "type": "string"
        }
      }
    },
    "FieldsDisassociate401Error1": {
      "title": "FieldsDisassociate401Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "message": {
          "example": "Unauthorized.",
          "type": "string"
        }
      }
    },
    "FieldsDisassociate405Error1": {
      "title": "FieldsDisassociate405Error1",
      "type": "object",
      "properties": {
        "status": {
          "example": "error",
          "type": "string"
        },
        "messages": {
          "example": "Method not allowed",
          "type": "string"
        }
      }
    },
    "ComponentsCheckinRequest": {
      "title": "ComponentsCheckinRequest",
      "type": "object",
      "properties": {
        "checkin_qty": {
          "description": "Quantity of the components to check in from the asset",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "checkin_qty"
      ]
    },
    "ComponentsCheckoutRequest": {
      "title": "ComponentsCheckoutRequest",
      "type": "object",
      "properties": {
        "assigned_to": {
          "description": "User ID of an asset to check a component out to",
          "type": "integer",
          "format": "int32"
        },
        "assigned_qty": {
          "description": "Quantity of the components to check out to the asset",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "assigned_to",
        "assigned_qty"
      ]
    },
    "LicensesSeatRequest": {
      "title": "LicensesSeatRequest",
      "type": "object",
      "properties": {
        "assigned_to": {
          "description": "User ID the seat should be assigned to",
          "type": "integer",
          "format": "int32"
        },
        "asset_id": {
          "description": "Asset ID the license seat should be assigned to",
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "tags": []
}